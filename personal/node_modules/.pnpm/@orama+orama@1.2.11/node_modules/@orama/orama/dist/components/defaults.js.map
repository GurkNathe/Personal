{"version":3,"sources":["../../src/components/defaults.ts"],"sourcesContent":["import { createError } from '../errors.js'\nimport {\n  AnyDocument,\n  AnyOrama,\n  ArraySearchableType,\n  ElapsedTime,\n  ScalarSearchableType,\n  SearchableType,\n  TypedDocument,\n  Vector\n} from '../types.js'\nimport { formatNanoseconds, uniqueId } from '../utils.js'\n\nexport { getDocumentProperties } from '../utils.js'\n\nexport async function formatElapsedTime(n: bigint): Promise<ElapsedTime> {\n  return {\n    raw: Number(n),\n    formatted: await formatNanoseconds(n),\n  }\n}\n\nexport async function getDocumentIndexId(doc: AnyDocument): Promise<string> {\n  if (doc.id) {\n    if (typeof doc.id !== 'string') {\n      throw createError('DOCUMENT_ID_MUST_BE_STRING', typeof doc.id)\n    }\n\n    return doc.id\n  }\n\n  return await uniqueId()\n}\n\nexport async function validateSchema<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  doc: ResultDocument,\n  schema: T['schema'],\n): Promise<string | undefined> {\n  for (const [prop, type] of Object.entries(schema)) {\n    const value = doc[prop]\n\n    if (typeof value === 'undefined') {\n      continue\n    }\n\n    if (type === 'enum' && (typeof value === 'string' || typeof value === 'number')) {\n      continue\n    }\n    if (type === 'enum[]' && Array.isArray(value)) {\n      const valueLength = value.length\n      for (let i = 0; i < valueLength; i++) {\n        if (typeof value[i] !== 'string' && typeof value[i] !== 'number') {\n          return prop + '.' + i\n        }\n      }\n      continue\n    }\n\n    if (isVectorType(type)) {\n      const vectorSize = getVectorSize(type)\n      if (!Array.isArray(value) || value.length !== vectorSize) {\n        throw createError('INVALID_INPUT_VECTOR', prop, vectorSize, value.length)\n      }\n      continue\n    }\n\n    if (isArrayType(type)) {\n      if (!Array.isArray(value)) {\n        return prop\n      }\n      const expectedType = getInnerType(type)\n\n      const valueLength = value.length\n      for (let i = 0; i < valueLength; i++) {\n        if (typeof value[i] !== expectedType) {\n          return prop + '.' + i\n        }\n      }\n\n      continue\n    }\n\n    if (typeof type === 'object') {\n      if (!value || typeof value !== 'object') {\n        return prop\n      }\n\n      // using as ResultDocument is not exactly right but trying to be type-safe here is not useful\n      const subProp = await validateSchema(value as ResultDocument, type)\n      if (subProp) {\n        return prop + '.' + subProp\n      }\n      continue\n    }\n\n    if (typeof value !== type) {\n      return prop\n    }\n  }\n\n  return undefined\n}\n\nconst IS_ARRAY_TYPE: Record<SearchableType, boolean> = {\n  string: false,\n  number: false,\n  boolean: false,\n  enum: false,\n  'string[]': true,\n  'number[]': true,\n  'boolean[]': true,\n  'enum[]': true,\n}\n\nconst INNER_TYPE: Record<ArraySearchableType, ScalarSearchableType> = {\n  'string[]': 'string',\n  'number[]': 'number',\n  'boolean[]': 'boolean',\n  'enum[]': 'enum',\n}\n\nexport function isVectorType(type: unknown): type is Vector {\n  return typeof type === 'string' && /^vector\\[\\d+\\]$/.test(type)\n}\n\nexport function isArrayType(type: unknown): type is ArraySearchableType {\n  return typeof type === 'string' && IS_ARRAY_TYPE[type]\n}\n\nexport function getInnerType(type: ArraySearchableType): ScalarSearchableType {\n  return INNER_TYPE[type]\n}\n\nexport function getVectorSize(type: string): number {\n  const size = Number(type.slice(7, -1))\n\n  switch (true) {\n    case isNaN(size):\n      throw createError('INVALID_VECTOR_VALUE', type)\n    case size <= 0:\n      throw createError('INVALID_VECTOR_SIZE', type)\n    default:\n      return size\n  }\n}\n"],"names":["createError","formatNanoseconds","uniqueId","getDocumentProperties","formatElapsedTime","n","raw","Number","formatted","getDocumentIndexId","doc","id","validateSchema","schema","prop","type","Object","entries","value","Array","isArray","valueLength","length","i","isVectorType","vectorSize","getVectorSize","isArrayType","expectedType","getInnerType","subProp","undefined","IS_ARRAY_TYPE","string","number","boolean","enum","INNER_TYPE","test","size","slice","isNaN"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAc;AAW1C,SAASC,iBAAiB,EAAEC,QAAQ,QAAQ,cAAa;AAEzD,SAASC,qBAAqB,QAAQ,cAAa;AAEnD,OAAO,eAAeC,kBAAkBC,CAAS,EAAwB;IACvE,OAAO;QACLC,KAAKC,OAAOF;QACZG,WAAW,MAAMP,kBAAkBI;IACrC;AACF,CAAC;AAED,OAAO,eAAeI,mBAAmBC,GAAgB,EAAmB;IAC1E,IAAIA,IAAIC,EAAE,EAAE;QACV,IAAI,OAAOD,IAAIC,EAAE,KAAK,UAAU;YAC9B,MAAMX,YAAY,8BAA8B,OAAOU,IAAIC,EAAE,EAAC;QAChE,CAAC;QAED,OAAOD,IAAIC,EAAE;IACf,CAAC;IAED,OAAO,MAAMT;AACf,CAAC;AAED,OAAO,eAAeU,eACpBF,GAAmB,EACnBG,MAAmB,EACU;IAC7B,KAAK,MAAM,CAACC,MAAMC,KAAK,IAAIC,OAAOC,OAAO,CAACJ,QAAS;QACjD,MAAMK,QAAQR,GAAG,CAACI,KAAK;QAEvB,IAAI,OAAOI,UAAU,aAAa;YAChC,QAAQ;QACV,CAAC;QAED,IAAIH,SAAS,UAAW,CAAA,OAAOG,UAAU,YAAY,OAAOA,UAAU,QAAO,GAAI;YAC/E,QAAQ;QACV,CAAC;QACD,IAAIH,SAAS,YAAYI,MAAMC,OAAO,CAACF,QAAQ;YAC7C,MAAMG,cAAcH,MAAMI,MAAM;YAChC,IAAK,IAAIC,IAAI,GAAGA,IAAIF,aAAaE,IAAK;gBACpC,IAAI,OAAOL,KAAK,CAACK,EAAE,KAAK,YAAY,OAAOL,KAAK,CAACK,EAAE,KAAK,UAAU;oBAChE,OAAOT,OAAO,MAAMS;gBACtB,CAAC;YACH;YACA,QAAQ;QACV,CAAC;QAED,IAAIC,aAAaT,OAAO;YACtB,MAAMU,aAAaC,cAAcX;YACjC,IAAI,CAACI,MAAMC,OAAO,CAACF,UAAUA,MAAMI,MAAM,KAAKG,YAAY;gBACxD,MAAMzB,YAAY,wBAAwBc,MAAMW,YAAYP,MAAMI,MAAM,EAAC;YAC3E,CAAC;YACD,QAAQ;QACV,CAAC;QAED,IAAIK,YAAYZ,OAAO;YACrB,IAAI,CAACI,MAAMC,OAAO,CAACF,QAAQ;gBACzB,OAAOJ;YACT,CAAC;YACD,MAAMc,eAAeC,aAAad;YAElC,MAAMM,cAAcH,MAAMI,MAAM;YAChC,IAAK,IAAIC,IAAI,GAAGA,IAAIF,aAAaE,IAAK;gBACpC,IAAI,OAAOL,KAAK,CAACK,EAAE,KAAKK,cAAc;oBACpC,OAAOd,OAAO,MAAMS;gBACtB,CAAC;YACH;YAEA,QAAQ;QACV,CAAC;QAED,IAAI,OAAOR,SAAS,UAAU;YAC5B,IAAI,CAACG,SAAS,OAAOA,UAAU,UAAU;gBACvC,OAAOJ;YACT,CAAC;YAED,6FAA6F;YAC7F,MAAMgB,UAAU,MAAMlB,eAAeM,OAAyBH;YAC9D,IAAIe,SAAS;gBACX,OAAOhB,OAAO,MAAMgB;YACtB,CAAC;YACD,QAAQ;QACV,CAAC;QAED,IAAI,OAAOZ,UAAUH,MAAM;YACzB,OAAOD;QACT,CAAC;IACH;IAEA,OAAOiB;AACT,CAAC;AAED,MAAMC,gBAAiD;IACrDC,QAAQ,KAAK;IACbC,QAAQ,KAAK;IACbC,SAAS,KAAK;IACdC,MAAM,KAAK;IACX,YAAY,IAAI;IAChB,YAAY,IAAI;IAChB,aAAa,IAAI;IACjB,UAAU,IAAI;AAChB;AAEA,MAAMC,aAAgE;IACpE,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,UAAU;AACZ;AAEA,OAAO,SAASb,aAAaT,IAAa,EAAkB;IAC1D,OAAO,OAAOA,SAAS,YAAY,kBAAkBuB,IAAI,CAACvB;AAC5D,CAAC;AAED,OAAO,SAASY,YAAYZ,IAAa,EAA+B;IACtE,OAAO,OAAOA,SAAS,YAAYiB,aAAa,CAACjB,KAAK;AACxD,CAAC;AAED,OAAO,SAASc,aAAad,IAAyB,EAAwB;IAC5E,OAAOsB,UAAU,CAACtB,KAAK;AACzB,CAAC;AAED,OAAO,SAASW,cAAcX,IAAY,EAAU;IAClD,MAAMwB,OAAOhC,OAAOQ,KAAKyB,KAAK,CAAC,GAAG,CAAC;IAEnC,OAAQ,IAAI;QACV,KAAKC,MAAMF;YACT,MAAMvC,YAAY,wBAAwBe,MAAK;QACjD,KAAKwB,QAAQ;YACX,MAAMvC,YAAY,uBAAuBe,MAAK;QAChD;YACE,OAAOwB;IACX;AACF,CAAC"}