{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["import type { AnyDocument, SearchableValue, TokenScore } from './types.js'\n\nconst baseId = Date.now().toString().slice(5)\nlet lastId = 0\n\nconst k = 1024\nconst nano = BigInt(1e3)\nconst milli = BigInt(1e6)\nconst second = BigInt(1e9)\n\nexport const isServer = typeof window === 'undefined'\n\n/**\n * This value can be increased up to 100_000\n * But i don't know if this value change from nodejs to nodejs\n * So I will keep a safer value here.\n */\nexport const MAX_ARGUMENT_FOR_STACK = 65535;\n\n/**\n * This method is needed to used because of issues like: https://github.com/oramasearch/orama/issues/301\n * that issue is caused because the array that is pushed is huge (>100k)\n *\n * @example\n * ```ts\n * safeArrayPush(myArray, [1, 2])\n * ```\n */\nexport function safeArrayPush<T>(arr: T[], newArr: T[]): void {\n  if (newArr.length < MAX_ARGUMENT_FOR_STACK) {\n    Array.prototype.push.apply(arr, newArr)\n  } else {\n    for (let i = 0; i < newArr.length; i += MAX_ARGUMENT_FOR_STACK) {\n      Array.prototype.push.apply(arr, newArr.slice(i, i + MAX_ARGUMENT_FOR_STACK))\n    }\n  }\n}\n\nexport function sprintf(template: string, ...args: (string | number)[]): string {\n  return template.replace(\n    /%(?:(?<position>\\d+)\\$)?(?<width>-?\\d*\\.?\\d*)(?<type>[dfs])/g,\n    function (...replaceArgs: Array<string | number | Record<string, string>>): string {\n      const groups = replaceArgs[replaceArgs.length - 1] as Record<string, string>\n      const { width: rawWidth, type, position } = groups\n\n      const replacement = position ? args[Number.parseInt(position) - 1]! : args.shift()!\n      const width = rawWidth === '' ? 0 : Number.parseInt(rawWidth)\n\n      switch (type) {\n        case 'd':\n          return replacement.toString().padStart(width, '0')\n        case 'f': {\n          let value = replacement\n          const [padding, precision] = rawWidth.split('.').map(w => Number.parseFloat(w))\n\n          if (typeof precision === 'number' && precision >= 0) {\n            value = (value as number).toFixed(precision)\n          }\n\n          return typeof padding === 'number' && padding >= 0 ? value.toString().padStart(width, '0') : value.toString()\n        }\n        case 's':\n          return width < 0\n            ? (replacement as string).toString().padEnd(-width, ' ')\n            : (replacement as string).toString().padStart(width, ' ')\n\n        default:\n          return replacement as string\n      }\n    },\n  )\n}\n\nexport async function formatBytes(bytes: number, decimals = 2): Promise<string> {\n  if (bytes === 0) {\n    return '0 Bytes'\n  }\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\nexport async function formatNanoseconds(value: number | bigint): Promise<string> {\n  if (typeof value === 'number') {\n    value = BigInt(value)\n  }\n\n  if (value < nano) {\n    return `${value}ns`\n  } else if (value < milli) {\n    return `${value / nano}Î¼s`\n  } else if (value < second) {\n    return `${value / milli}ms`\n  }\n\n  return `${value / second}s`\n}\n\nexport async function getNanosecondsTime(): Promise<bigint> {\n  if (typeof process !== 'undefined' && process.hrtime !== undefined) {\n    return process.hrtime.bigint()\n  }\n\n  if (typeof performance !== 'undefined') {\n    return BigInt(Math.floor(performance.now() * 1e6))\n  }\n\n  // @todo: fallback to V8 native method to get microtime\n  return BigInt(0)\n}\n\nexport async function uniqueId(): Promise<string> {\n  return `${baseId}-${lastId++}`\n}\n\nexport function getOwnProperty<T = unknown>(object: Record<string, T>, property: string): T | undefined {\n  // Checks if `hasOwn` method is defined avoiding errors with older Node.js versions\n  if (Object.hasOwn === undefined) {\n    return Object.prototype.hasOwnProperty.call(object, property) ? object[property] : undefined\n  }\n\n  return Object.hasOwn(object, property) ? object[property] : undefined\n}\n\nexport function getTokenFrequency(token: string, tokens: string[]): number {\n  let count = 0\n\n  for (const t of tokens) {\n    if (t === token) {\n      count++\n    }\n  }\n\n  return count\n}\n\nexport function insertSortedValue(\n  arr: TokenScore[],\n  el: TokenScore,\n  compareFn = sortTokenScorePredicate,\n): TokenScore[] {\n  let low = 0\n  let high = arr.length\n  let mid\n\n  while (low < high) {\n    mid = (low + high) >>> 1\n    if (compareFn(el, arr[mid]) < 0) {\n      high = mid\n    } else {\n      low = mid + 1\n    }\n  }\n\n  arr.splice(low, 0, el)\n\n  return arr\n}\n\nexport function sortTokenScorePredicate(a: TokenScore, b: TokenScore): number {\n  if (b[1] === a[1]) {\n    return a[0] - b[0]\n  }\n\n  return b[1] - a[1]\n}\n\n// Intersection function taken from https://github.com/lovasoa/fast_array_intersect.\n// MIT Licensed at the time of writing.\nexport function intersect<T>(arrays: ReadonlyArray<T>[]): T[] {\n  if (arrays.length === 0) {\n    return []\n  } else if (arrays.length === 1) {\n    return arrays[0] as T[]\n  }\n\n  for (let i = 1; i < arrays.length; i++) {\n    if (arrays[i].length < arrays[0].length) {\n      const tmp = arrays[0]\n      arrays[0] = arrays[i]\n      arrays[i] = tmp\n    }\n  }\n\n  const set = new Map()\n  for (const elem of arrays[0]) {\n    set.set(elem, 1)\n  }\n  for (let i = 1; i < arrays.length; i++) {\n    let found = 0\n    for (const elem of arrays[i]) {\n      const count = set.get(elem)\n      if (count === i) {\n        set.set(elem, count + 1)\n        found++\n      }\n    }\n    if (found === 0) return []\n  }\n\n  return arrays[0].filter(e => {\n    const count = set.get(e)\n    if (count !== undefined) set.set(e, 0)\n    return count === arrays.length\n  })\n}\n\nexport async function getDocumentProperties(doc: AnyDocument, paths: string[]): Promise<Record<string, SearchableValue>> {\n  const properties: Record<string, SearchableValue> = {}\n\n  const pathsLength = paths.length\n  for (let i = 0; i < pathsLength; i++) {\n    const path = paths[i]\n    const pathTokens = path.split('.')\n\n    let current: SearchableValue | AnyDocument | undefined = doc\n    const pathTokensLength = pathTokens.length\n    for (let j = 0; j < pathTokensLength; j++) {\n      current = (current as AnyDocument)[pathTokens[j]!] as AnyDocument | SearchableValue\n\n      // We found an object but we were supposed to be done\n      if (typeof current === 'object' && !Array.isArray(current) && current !== null && j === pathTokensLength - 1) {\n        current = undefined\n        break\n      } else if ((current === null || typeof current !== 'object') && j < pathTokensLength - 1) {\n        // We can't recurse anymore but we were supposed to\n        current = undefined\n        break\n      }\n    }\n\n    if (typeof current !== 'undefined') {\n      properties[path] = current as SearchableValue\n    }\n  }\n\n  return properties\n}\n\nexport async function getNested<T = SearchableValue>(obj: object, path: string): Promise<T | undefined> {\n  const props = await getDocumentProperties(obj as AnyDocument, [path])\n\n  return props[path] as T | undefined\n}\n\nexport function flattenObject(obj: object, prefix = ''): AnyDocument {\n  const result: AnyDocument = {}\n\n  for (const key in obj) {\n    const prop = `${prefix}${key}`\n    const objKey = (obj as AnyDocument)[key]\n\n    if (typeof objKey === 'object' && objKey !== null) {\n      Object.assign(result, flattenObject(objKey, `${prop}.`))\n    } else {\n      result[prop] = objKey\n    }\n  }\n  return result\n}\n"],"names":["baseId","Date","now","toString","slice","lastId","k","nano","BigInt","milli","second","isServer","window","MAX_ARGUMENT_FOR_STACK","safeArrayPush","arr","newArr","length","Array","prototype","push","apply","i","sprintf","template","args","replace","replaceArgs","groups","width","rawWidth","type","position","replacement","Number","parseInt","shift","padStart","value","padding","precision","split","map","w","parseFloat","toFixed","padEnd","formatBytes","bytes","decimals","dm","sizes","Math","floor","log","pow","formatNanoseconds","getNanosecondsTime","process","hrtime","undefined","bigint","performance","uniqueId","getOwnProperty","object","property","Object","hasOwn","hasOwnProperty","call","getTokenFrequency","token","tokens","count","t","insertSortedValue","el","compareFn","sortTokenScorePredicate","low","high","mid","splice","a","b","intersect","arrays","tmp","set","Map","elem","found","get","filter","e","getDocumentProperties","doc","paths","properties","pathsLength","path","pathTokens","current","pathTokensLength","j","isArray","getNested","obj","props","flattenObject","prefix","result","key","prop","objKey","assign"],"mappings":"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"}