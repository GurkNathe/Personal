{"version":3,"sources":["../../src/methods/search-vector.ts"],"sourcesContent":["import { findSimilarVectors } from '../components/cosine-similarity.js'\nimport { getInternalDocumentId } from '../components/internal-document-id-store.js'\nimport { createError } from '../errors.js'\nimport type { AnyOrama, Result, Results, TypedDocument } from '../types.js'\nimport { formatNanoseconds, getNanosecondsTime } from '../utils.js'\n\nexport type SearchVectorParams = {\n  vector: number[] | Float32Array\n  property: string\n  similarity?: number\n  limit?: number\n  offset?: number\n  includeVectors?: boolean\n}\n\nexport async function searchVector<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  orama: T,\n  params: SearchVectorParams,\n): Promise<Results<ResultDocument>> {\n  const timeStart = await getNanosecondsTime()\n  let { vector } = params\n  const { property, limit = 10, offset = 0, includeVectors = false } = params\n  const vectorIndex = orama.data.index.vectorIndexes[property]\n  const vectorSize = vectorIndex.size\n  const vectors = vectorIndex.vectors\n\n  if (vector.length !== vectorSize) {\n    throw createError('INVALID_INPUT_VECTOR', property, vectorSize, vector.length)\n  }\n\n  if (!(vector instanceof Float32Array)) {\n    vector = new Float32Array(vector)\n  }\n\n  const results = findSimilarVectors(vector, vectors, vectorSize, params.similarity)\n\n  const docs: Result<ResultDocument>[] = Array.from({ length: limit })\n\n  for (let i = 0; i < limit; i++) {\n    const result = results[i + offset]\n    if (!result) {\n      break\n    }\n\n    const originalID = getInternalDocumentId(orama.internalDocumentIDStore, result.id)\n    const doc = orama.data.docs.docs[originalID]\n\n    if (doc) {\n      if (!includeVectors) {\n        doc[property] = null\n      }\n\n      const newDoc: Result<ResultDocument> = {\n        id: result.id,\n        score: result.score,\n        document: doc,\n      }\n      docs[i] = newDoc\n    }\n  }\n\n  const timeEnd = await getNanosecondsTime()\n  const elapsedTime = timeEnd - timeStart\n\n  return {\n    count: results.length,\n    hits: docs.filter(Boolean),\n    elapsed: {\n      raw: Number(elapsedTime),\n      formatted: await formatNanoseconds(elapsedTime),\n    },\n  }\n}\n"],"names":["findSimilarVectors","getInternalDocumentId","createError","formatNanoseconds","getNanosecondsTime","searchVector","orama","params","timeStart","vector","property","limit","offset","includeVectors","vectorIndex","data","index","vectorIndexes","vectorSize","size","vectors","length","Float32Array","results","similarity","docs","Array","from","i","result","originalID","internalDocumentIDStore","id","doc","newDoc","score","document","timeEnd","elapsedTime","count","hits","filter","Boolean","elapsed","raw","Number","formatted"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,qCAAoC;AACvE,SAASC,qBAAqB,QAAQ,8CAA6C;AACnF,SAASC,WAAW,QAAQ,eAAc;AAE1C,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,cAAa;AAWnE,OAAO,eAAeC,aACpBC,KAAQ,EACRC,MAA0B,EACQ;IAClC,MAAMC,YAAY,MAAMJ;IACxB,IAAI,EAAEK,OAAM,EAAE,GAAGF;IACjB,MAAM,EAAEG,SAAQ,EAAEC,OAAQ,GAAE,EAAEC,QAAS,EAAC,EAAEC,gBAAiB,KAAK,CAAA,EAAE,GAAGN;IACrE,MAAMO,cAAcR,MAAMS,IAAI,CAACC,KAAK,CAACC,aAAa,CAACP,SAAS;IAC5D,MAAMQ,aAAaJ,YAAYK,IAAI;IACnC,MAAMC,UAAUN,YAAYM,OAAO;IAEnC,IAAIX,OAAOY,MAAM,KAAKH,YAAY;QAChC,MAAMhB,YAAY,wBAAwBQ,UAAUQ,YAAYT,OAAOY,MAAM,EAAC;IAChF,CAAC;IAED,IAAI,CAAEZ,CAAAA,kBAAkBa,YAAW,GAAI;QACrCb,SAAS,IAAIa,aAAab;IAC5B,CAAC;IAED,MAAMc,UAAUvB,mBAAmBS,QAAQW,SAASF,YAAYX,OAAOiB,UAAU;IAEjF,MAAMC,OAAiCC,MAAMC,IAAI,CAAC;QAAEN,QAAQV;IAAM;IAElE,IAAK,IAAIiB,IAAI,GAAGA,IAAIjB,OAAOiB,IAAK;QAC9B,MAAMC,SAASN,OAAO,CAACK,IAAIhB,OAAO;QAClC,IAAI,CAACiB,QAAQ;YACX,KAAK;QACP,CAAC;QAED,MAAMC,aAAa7B,sBAAsBK,MAAMyB,uBAAuB,EAAEF,OAAOG,EAAE;QACjF,MAAMC,MAAM3B,MAAMS,IAAI,CAACU,IAAI,CAACA,IAAI,CAACK,WAAW;QAE5C,IAAIG,KAAK;YACP,IAAI,CAACpB,gBAAgB;gBACnBoB,GAAG,CAACvB,SAAS,GAAG,IAAI;YACtB,CAAC;YAED,MAAMwB,SAAiC;gBACrCF,IAAIH,OAAOG,EAAE;gBACbG,OAAON,OAAOM,KAAK;gBACnBC,UAAUH;YACZ;YACAR,IAAI,CAACG,EAAE,GAAGM;QACZ,CAAC;IACH;IAEA,MAAMG,UAAU,MAAMjC;IACtB,MAAMkC,cAAcD,UAAU7B;IAE9B,OAAO;QACL+B,OAAOhB,QAAQF,MAAM;QACrBmB,MAAMf,KAAKgB,MAAM,CAACC;QAClBC,SAAS;YACPC,KAAKC,OAAOP;YACZQ,WAAW,MAAM3C,kBAAkBmC;QACrC;IACF;AACF,CAAC"}