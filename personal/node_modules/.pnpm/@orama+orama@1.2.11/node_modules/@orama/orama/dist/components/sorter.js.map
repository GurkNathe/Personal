{"version":3,"sources":["../../src/components/sorter.ts"],"sourcesContent":["import { createError } from '../errors.js';\nimport { AnyOrama, AnySorterStore, ISorter, SearchableType, SortType, SortValue, SorterConfig, SorterParams } from '../types.js';\nimport { isVectorType } from './defaults.js';\nimport {\n  DocumentID,\n  InternalDocumentID,\n  InternalDocumentIDStore,\n  getInternalDocumentId,\n} from './internal-document-id-store.js';\nimport { safeArrayPush } from \"../utils.js\";\n\ninterface PropertySort<K> {\n  docs: Map<InternalDocumentID, number>\n  orderedDocs: [InternalDocumentID, K][]\n  orderedDocsToRemove: Map<InternalDocumentID, boolean>\n  type: SortType\n}\n\ntype SerializablePropertySort<K> = Omit<PropertySort<K>, 'orderedDocsToRemove' | 'docs'> & {\n  docs: Record<string, number>\n}\n\nexport interface Sorter extends AnySorterStore {\n  sharedInternalDocumentStore: InternalDocumentIDStore\n  isSorted: boolean\n  language: string\n  enabled: boolean\n  sortableProperties: string[]\n  sortablePropertiesWithTypes: Record<string, SortType>\n  sorts: Record<string, PropertySort<number | string | boolean>>\n}\n\nfunction innerCreate<T extends AnyOrama>(\n  orama: T,\n  sharedInternalDocumentStore: InternalDocumentIDStore,\n  schema: T['schema'],\n  sortableDeniedProperties: string[],\n  prefix: string,\n): Sorter {\n  const sorter: Sorter = {\n    language: orama.tokenizer.language,\n    sharedInternalDocumentStore,\n    enabled: true,\n    isSorted: true,\n    sortableProperties: [],\n    sortablePropertiesWithTypes: {},\n    sorts: {},\n  }\n\n  for (const [prop, type] of Object.entries<SearchableType>(schema)) {\n    const path = `${prefix}${prefix ? '.' : ''}${prop}`\n\n    if (sortableDeniedProperties.includes(path)) {\n      continue\n    }\n\n    if (typeof type === 'object' && !Array.isArray(type)) {\n      // Nested\n      const ret = innerCreate(orama, sharedInternalDocumentStore, type, sortableDeniedProperties, path)\n      safeArrayPush(sorter.sortableProperties, ret.sortableProperties);\n      sorter.sorts = {\n        ...sorter.sorts,\n        ...ret.sorts,\n      }\n      sorter.sortablePropertiesWithTypes = {\n        ...sorter.sortablePropertiesWithTypes,\n        ...ret.sortablePropertiesWithTypes,\n      }\n      continue\n    }\n\n    if (!isVectorType(type)) {\n      switch (type) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n          sorter.sortableProperties.push(path)\n          sorter.sortablePropertiesWithTypes[path] = type\n          sorter.sorts[path] = {\n            docs: new Map(),\n            orderedDocsToRemove: new Map(),\n            orderedDocs: [],\n            type: type,\n          }\n          break\n        case 'enum':\n          // We don't allow to sort by enums\n          continue\n        case 'enum[]':\n        case 'boolean[]':\n        case 'number[]':\n        case 'string[]':\n          // We don't allow to sort by arrays\n          continue\n        default:\n          throw createError('INVALID_SORT_SCHEMA_TYPE', Array.isArray(type) ? 'array' : type, path)\n      }\n    }\n  }\n\n  return sorter\n}\n\nasync function create<T extends AnyOrama>(\n  orama: T,\n  sharedInternalDocumentStore: InternalDocumentIDStore,\n  schema: T['schema'],\n  config?: SorterConfig,\n): Promise<Sorter> {\n  const isSortEnabled = config?.enabled !== false\n  if (!isSortEnabled) {\n    return {\n      disabled: true,\n    } as unknown as Sorter\n  }\n  return innerCreate(orama, sharedInternalDocumentStore, schema, (config || {}).unsortableProperties || [], '')\n}\n\nasync function insert(sorter: Sorter, prop: string, id: DocumentID, value: SortValue): Promise<void> {\n  if (!sorter.enabled) {\n    return\n  }\n\n  sorter.isSorted = false\n\n  const internalId = getInternalDocumentId(sorter.sharedInternalDocumentStore, id)\n  const s = sorter.sorts[prop]\n\n  s.docs.set(internalId, s.orderedDocs.length)\n  s.orderedDocs.push([internalId, value])\n}\n\nfunction ensureIsSorted(sorter: Sorter): void {\n  if (sorter.isSorted) {\n    return\n  }\n\n  if (!sorter.enabled) {\n    return\n  }\n\n  const properties = Object.keys(sorter.sorts)\n  for (const prop of properties) {\n    ensurePropertyIsSorted(sorter, prop)\n  }\n\n  sorter.isSorted = true\n}\n\nfunction stringSort(\n  language: string | undefined,\n  value: [InternalDocumentID, SortValue],\n  d: [InternalDocumentID, SortValue],\n): number {\n  return (value[1] as string).localeCompare(d[1] as string, language)\n}\n\nfunction numberSort(value: [InternalDocumentID, SortValue], d: [InternalDocumentID, SortValue]): number {\n  return (value[1] as number) - (d[1] as number)\n}\n\nfunction booleanSort(value: [InternalDocumentID, SortValue], d: [InternalDocumentID, SortValue]): number {\n  return (d[1] as boolean) ? -1 : 1\n}\n\nfunction ensurePropertyIsSorted(sorter: Sorter, prop: string): void {\n  const s = sorter.sorts[prop]\n\n  let predicate: (value: [InternalDocumentID, SortValue], d: [InternalDocumentID, SortValue]) => number\n  switch (s.type) {\n    case 'string':\n      predicate = stringSort.bind(null, sorter.language)\n      break\n    case 'number':\n      predicate = numberSort.bind(null)\n      break\n    case 'boolean':\n      predicate = booleanSort.bind(null)\n      break\n  }\n\n  s.orderedDocs.sort(predicate)\n\n  // Increment position for the greather documents\n  const orderedDocsLength = s.orderedDocs.length\n  for (let i = 0; i < orderedDocsLength; i++) {\n    const docId = s.orderedDocs[i][0]\n    s.docs.set(docId, i)\n  }\n}\n\nfunction ensureOrderedDocsAreDeleted(sorter: Sorter): void {\n  const properties = Object.keys(sorter.sorts)\n  for (const prop of properties) {\n    ensureOrderedDocsAreDeletedByProperty(sorter, prop)\n  }\n}\n\nfunction ensureOrderedDocsAreDeletedByProperty(sorter: Sorter, prop: string): void {\n  const s = sorter.sorts[prop]\n\n  if (!s.orderedDocsToRemove.size) return\n\n  s.orderedDocs = s.orderedDocs.filter(doc => !s.orderedDocsToRemove.has(doc[0]))\n  s.orderedDocsToRemove.clear()\n}\n\nasync function remove(sorter: Sorter, prop: string, id: DocumentID) {\n  if (!sorter.enabled) {\n    return\n  }\n  const s = sorter.sorts[prop] as PropertySort<SortValue>\n  const internalId = getInternalDocumentId(sorter.sharedInternalDocumentStore, id)\n\n  const index = s.docs.get(internalId)\n\n  if (!index) return\n\n  s.docs.delete(internalId)\n  s.orderedDocsToRemove.set(internalId, true)\n}\n\nasync function sortBy<T extends AnyOrama>(\n  sorter: Sorter,\n  docIds: [DocumentID, number][],\n  by: SorterParams<T>,\n): Promise<[DocumentID, number][]> {\n  if (!sorter.enabled) {\n    throw createError('SORT_DISABLED')\n  }\n\n  const property = by.property\n  const isDesc = by.order === 'DESC'\n\n  const s = sorter.sorts[property]\n  if (!s) {\n    throw createError('UNABLE_TO_SORT_ON_UNKNOWN_FIELD', property, sorter.sortableProperties.join(', '))\n  }\n\n  ensureOrderedDocsAreDeletedByProperty(sorter, property)\n  ensureIsSorted(sorter)\n\n  docIds.sort((a, b) => {\n    // This sort algorithm works leveraging on\n    // that s.docs is a map of docId -> position\n    // If a document is not indexed, it will be not present in the map\n    const indexOfA = s.docs.get(getInternalDocumentId(sorter.sharedInternalDocumentStore, a[0]))\n    const indexOfB = s.docs.get(getInternalDocumentId(sorter.sharedInternalDocumentStore, b[0]))\n    const isAIndexed = typeof indexOfA !== 'undefined'\n    const isBIndexed = typeof indexOfB !== 'undefined'\n\n    if (!isAIndexed && !isBIndexed) {\n      return 0\n    }\n    // unindexed documents are always at the end\n    if (!isAIndexed) {\n      return 1\n    }\n    if (!isBIndexed) {\n      return -1\n    }\n\n    return isDesc ? indexOfB - indexOfA : indexOfA - indexOfB\n  })\n\n  return docIds\n}\n\nasync function getSortableProperties(sorter: Sorter): Promise<string[]> {\n  if (!sorter.enabled) {\n    return []\n  }\n\n  return sorter.sortableProperties\n}\n\nasync function getSortablePropertiesWithTypes(sorter: Sorter): Promise<Record<string, SortType>> {\n  if (!sorter.enabled) {\n    return {}\n  }\n\n  return sorter.sortablePropertiesWithTypes\n}\n\nexport async function load<R = unknown>(sharedInternalDocumentStore: InternalDocumentIDStore, raw: R): Promise<Sorter> {\n  const rawDocument = raw as Omit<Sorter, 'sorts'> & {\n    sorts: Record<string, SerializablePropertySort<string | number | boolean>>\n  }\n  if (!rawDocument.enabled) {\n    return {\n      enabled: false,\n    } as unknown as Sorter\n  }\n\n  const sorts = Object.keys(rawDocument.sorts).reduce((acc, prop) => {\n    const { docs, orderedDocs, type } = rawDocument.sorts[prop]\n\n    acc[prop] = {\n      docs: new Map(Object.entries(docs).map(([k, v]) => [+k, v])),\n      orderedDocsToRemove: new Map(),\n      orderedDocs,\n      type,\n    }\n\n    return acc\n  }, {} as Record<string, PropertySort<string | number | boolean>>)\n\n  return {\n    sharedInternalDocumentStore,\n    language: rawDocument.language,\n    sortableProperties: rawDocument.sortableProperties,\n    sortablePropertiesWithTypes: rawDocument.sortablePropertiesWithTypes,\n    sorts,\n    enabled: true,\n    isSorted: rawDocument.isSorted,\n  }\n}\n\nexport async function save<R = unknown>(sorter: Sorter): Promise<R> {\n  if (!sorter.enabled) {\n    return {\n      enabled: false,\n    } as unknown as R\n  }\n\n  ensureOrderedDocsAreDeleted(sorter)\n  ensureIsSorted(sorter)\n\n  const sorts = Object.keys(sorter.sorts).reduce((acc, prop) => {\n    const { docs, orderedDocs, type } = sorter.sorts[prop]\n\n    acc[prop] = {\n      docs: Object.fromEntries(docs.entries()),\n      orderedDocs,\n      type,\n    }\n\n    return acc\n  }, {} as Record<string, SerializablePropertySort<string | number | boolean>>)\n\n  return {\n    language: sorter.language,\n    sortableProperties: sorter.sortableProperties,\n    sortablePropertiesWithTypes: sorter.sortablePropertiesWithTypes,\n    sorts,\n    enabled: sorter.enabled,\n    isSorted: sorter.isSorted,\n  } as R\n}\n\nexport async function createSorter(): Promise<ISorter<Sorter>> {\n  return {\n    create,\n    insert,\n    remove,\n    save,\n    load,\n    sortBy,\n    getSortableProperties,\n    getSortablePropertiesWithTypes,\n  }\n}\n"],"names":["createError","isVectorType","getInternalDocumentId","safeArrayPush","innerCreate","orama","sharedInternalDocumentStore","schema","sortableDeniedProperties","prefix","sorter","language","tokenizer","enabled","isSorted","sortableProperties","sortablePropertiesWithTypes","sorts","prop","type","Object","entries","path","includes","Array","isArray","ret","push","docs","Map","orderedDocsToRemove","orderedDocs","create","config","isSortEnabled","disabled","unsortableProperties","insert","id","value","internalId","s","set","length","ensureIsSorted","properties","keys","ensurePropertyIsSorted","stringSort","d","localeCompare","numberSort","booleanSort","predicate","bind","sort","orderedDocsLength","i","docId","ensureOrderedDocsAreDeleted","ensureOrderedDocsAreDeletedByProperty","size","filter","doc","has","clear","remove","index","get","delete","sortBy","docIds","by","property","isDesc","order","join","a","b","indexOfA","indexOfB","isAIndexed","isBIndexed","getSortableProperties","getSortablePropertiesWithTypes","load","raw","rawDocument","reduce","acc","map","k","v","save","fromEntries","createSorter"],"mappings":"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"}