{"version":3,"sources":["../../src/components/internal-document-id-store.ts"],"sourcesContent":["import { AnyOrama } from '../types.js'\n\nexport type DocumentID = string | number\nexport type InternalDocumentID = number\n\nexport type InternalDocumentIDStore = {\n  idToInternalId: Map<string, number>\n  internalIdToId: string[]\n  save: (store: InternalDocumentIDStore) => unknown\n  load: <T extends AnyOrama>(orama: T, raw: unknown) => void\n}\n\nexport function createInternalDocumentIDStore(): InternalDocumentIDStore {\n  return {\n    idToInternalId: new Map(),\n    internalIdToId: [],\n    save,\n    load,\n  }\n}\n\nexport function save(store: InternalDocumentIDStore): unknown {\n  return {\n    internalIdToId: store.internalIdToId,\n  }\n}\n\nexport function load<T extends AnyOrama>(orama: T, raw: unknown): void {\n  const { internalIdToId } = raw as InternalDocumentIDStore\n\n  orama.internalDocumentIDStore.idToInternalId.clear()\n  orama.internalDocumentIDStore.internalIdToId = []\n\n  for (let i = 0; i < internalIdToId.length; i++) {\n    orama.internalDocumentIDStore.idToInternalId.set(internalIdToId[i], i + 1)\n    orama.internalDocumentIDStore.internalIdToId.push(internalIdToId[i])\n  }\n}\n\nexport function getInternalDocumentId(store: InternalDocumentIDStore, id: DocumentID): InternalDocumentID {\n  if (typeof id === 'string') {\n    const internalId = store.idToInternalId.get(id)\n\n    if (internalId) {\n      return internalId\n    }\n\n    const currentId = store.idToInternalId.size + 1\n\n    store.idToInternalId.set(id, currentId)\n    store.internalIdToId.push(id)\n\n    return currentId\n  }\n\n  if (id > store.internalIdToId.length) {\n    return getInternalDocumentId(store, id.toString())\n  }\n\n  return id\n}\n\nexport function getDocumentIdFromInternalId(store: InternalDocumentIDStore, internalId: InternalDocumentID): string {\n  if (store.internalIdToId.length < internalId) {\n    throw new Error(`Invalid internalId ${internalId}`)\n  }\n\n  return store.internalIdToId[internalId - 1]\n}\n"],"names":["createInternalDocumentIDStore","idToInternalId","Map","internalIdToId","save","load","store","orama","raw","internalDocumentIDStore","clear","i","length","set","push","getInternalDocumentId","id","internalId","get","currentId","size","toString","getDocumentIdFromInternalId","Error"],"mappings":"AAYA,OAAO,SAASA,gCAAyD;IACvE,OAAO;QACLC,gBAAgB,IAAIC;QACpBC,gBAAgB,EAAE;QAClBC;QACAC;IACF;AACF,CAAC;AAED,OAAO,SAASD,KAAKE,KAA8B,EAAW;IAC5D,OAAO;QACLH,gBAAgBG,MAAMH,cAAc;IACtC;AACF,CAAC;AAED,OAAO,SAASE,KAAyBE,KAAQ,EAAEC,GAAY,EAAQ;IACrE,MAAM,EAAEL,eAAc,EAAE,GAAGK;IAE3BD,MAAME,uBAAuB,CAACR,cAAc,CAACS,KAAK;IAClDH,MAAME,uBAAuB,CAACN,cAAc,GAAG,EAAE;IAEjD,IAAK,IAAIQ,IAAI,GAAGA,IAAIR,eAAeS,MAAM,EAAED,IAAK;QAC9CJ,MAAME,uBAAuB,CAACR,cAAc,CAACY,GAAG,CAACV,cAAc,CAACQ,EAAE,EAAEA,IAAI;QACxEJ,MAAME,uBAAuB,CAACN,cAAc,CAACW,IAAI,CAACX,cAAc,CAACQ,EAAE;IACrE;AACF,CAAC;AAED,OAAO,SAASI,sBAAsBT,KAA8B,EAAEU,EAAc,EAAsB;IACxG,IAAI,OAAOA,OAAO,UAAU;QAC1B,MAAMC,aAAaX,MAAML,cAAc,CAACiB,GAAG,CAACF;QAE5C,IAAIC,YAAY;YACd,OAAOA;QACT,CAAC;QAED,MAAME,YAAYb,MAAML,cAAc,CAACmB,IAAI,GAAG;QAE9Cd,MAAML,cAAc,CAACY,GAAG,CAACG,IAAIG;QAC7Bb,MAAMH,cAAc,CAACW,IAAI,CAACE;QAE1B,OAAOG;IACT,CAAC;IAED,IAAIH,KAAKV,MAAMH,cAAc,CAACS,MAAM,EAAE;QACpC,OAAOG,sBAAsBT,OAAOU,GAAGK,QAAQ;IACjD,CAAC;IAED,OAAOL;AACT,CAAC;AAED,OAAO,SAASM,4BAA4BhB,KAA8B,EAAEW,UAA8B,EAAU;IAClH,IAAIX,MAAMH,cAAc,CAACS,MAAM,GAAGK,YAAY;QAC5C,MAAM,IAAIM,MAAM,CAAC,mBAAmB,EAAEN,WAAW,CAAC,EAAC;IACrD,CAAC;IAED,OAAOX,MAAMH,cAAc,CAACc,aAAa,EAAE;AAC7C,CAAC"}