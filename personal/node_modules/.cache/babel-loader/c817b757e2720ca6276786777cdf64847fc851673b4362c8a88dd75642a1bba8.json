{"ast":null,"code":"const BrightnessContrastShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    brightness: {\n      value: 0\n    },\n    contrast: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float brightness;\", \"uniform float contrast;\", \"varying vec2 vUv;\", \"void main() {\", \"\tgl_FragColor = texture2D( tDiffuse, vUv );\", \"\tgl_FragColor.rgb += brightness;\", \"\tif (contrast > 0.0) {\", \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\", \"\t} else {\", \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\", \"\t}\", \"}\"].join(\"\\n\")\n};\nexport { BrightnessContrastShader };","map":{"version":3,"names":["BrightnessContrastShader","uniforms","tDiffuse","value","brightness","contrast","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/BrightnessContrastShader.js"],"sourcesContent":["const BrightnessContrastShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    brightness: { value: 0 },\n    contrast: { value: 0 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform float brightness;\",\n    \"uniform float contrast;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tgl_FragColor = texture2D( tDiffuse, vUv );\",\n    \"\tgl_FragColor.rgb += brightness;\",\n    \"\tif (contrast > 0.0) {\",\n    \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\",\n    \"\t} else {\",\n    \"\t\tgl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\",\n    \"\t}\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  BrightnessContrastShader\n};\n"],"mappings":"AAAA,MAAMA,wBAAwB,GAAG;EAC/BC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IACzBC,UAAU,EAAE;MAAED,KAAK,EAAE;IAAE,CAAC;IACxBE,QAAQ,EAAE;MAAEF,KAAK,EAAE;IAAE;EACvB,CAAC;EACDG,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,6BAA6B,EAC7B,2BAA2B,EAC3B,yBAAyB,EACzB,mBAAmB,EACnB,eAAe,EACf,6CAA6C,EAC7C,kCAAkC,EAClC,wBAAwB,EACxB,yEAAyE,EACzE,WAAW,EACX,yEAAyE,EACzE,IAAI,EACJ,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACEP,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}