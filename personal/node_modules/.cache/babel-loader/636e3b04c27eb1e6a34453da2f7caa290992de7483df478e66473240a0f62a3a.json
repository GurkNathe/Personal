{"ast":null,"code":"function init() {\n  const _p2 = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n  for (let i = 0; i < 256; i++) {\n    _p2[256 + i] = _p2[i];\n  }\n  return _p2;\n}\nconst _p = /* @__PURE__ */init();\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\nfunction lerp(t, a, b) {\n  return a + t * (b - a);\n}\nfunction grad(hash, x, y, z) {\n  const h = hash & 15;\n  const u = h < 8 ? x : y,\n    v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n  return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n}\nclass ImprovedNoise {\n  noise(x, y, z) {\n    const floorX = Math.floor(x),\n      floorY = Math.floor(y),\n      floorZ = Math.floor(z);\n    const X = floorX & 255,\n      Y = floorY & 255,\n      Z = floorZ & 255;\n    x -= floorX;\n    y -= floorY;\n    z -= floorZ;\n    const xMinus1 = x - 1,\n      yMinus1 = y - 1,\n      zMinus1 = z - 1;\n    const u = fade(x),\n      v = fade(y),\n      w = fade(z);\n    const A = _p[X] + Y,\n      AA = _p[A] + Z,\n      AB = _p[A + 1] + Z,\n      B = _p[X + 1] + Y,\n      BA = _p[B] + Z,\n      BB = _p[B + 1] + Z;\n    return lerp(w, lerp(v, lerp(u, grad(_p[AA], x, y, z), grad(_p[BA], xMinus1, y, z)), lerp(u, grad(_p[AB], x, yMinus1, z), grad(_p[BB], xMinus1, yMinus1, z))), lerp(v, lerp(u, grad(_p[AA + 1], x, y, zMinus1), grad(_p[BA + 1], xMinus1, y, zMinus1)), lerp(u, grad(_p[AB + 1], x, yMinus1, zMinus1), grad(_p[BB + 1], xMinus1, yMinus1, zMinus1))));\n  }\n}\nexport { ImprovedNoise };","map":{"version":3,"names":["init","_p2","i","_p","fade","t","lerp","a","b","grad","hash","x","y","z","h","u","v","ImprovedNoise","noise","floorX","Math","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/math/ImprovedNoise.js"],"sourcesContent":["function init() {\n  const _p2 = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n  ];\n  for (let i = 0; i < 256; i++) {\n    _p2[256 + i] = _p2[i];\n  }\n  return _p2;\n}\nconst _p = /* @__PURE__ */ init();\nfunction fade(t) {\n  return t * t * t * (t * (t * 6 - 15) + 10);\n}\nfunction lerp(t, a, b) {\n  return a + t * (b - a);\n}\nfunction grad(hash, x, y, z) {\n  const h = hash & 15;\n  const u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n  return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n}\nclass ImprovedNoise {\n  noise(x, y, z) {\n    const floorX = Math.floor(x), floorY = Math.floor(y), floorZ = Math.floor(z);\n    const X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n    x -= floorX;\n    y -= floorY;\n    z -= floorZ;\n    const xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;\n    const u = fade(x), v = fade(y), w = fade(z);\n    const A = _p[X] + Y, AA = _p[A] + Z, AB = _p[A + 1] + Z, B = _p[X + 1] + Y, BA = _p[B] + Z, BB = _p[B + 1] + Z;\n    return lerp(\n      w,\n      lerp(\n        v,\n        lerp(u, grad(_p[AA], x, y, z), grad(_p[BA], xMinus1, y, z)),\n        lerp(u, grad(_p[AB], x, yMinus1, z), grad(_p[BB], xMinus1, yMinus1, z))\n      ),\n      lerp(\n        v,\n        lerp(u, grad(_p[AA + 1], x, y, zMinus1), grad(_p[BA + 1], xMinus1, y, zMinus1)),\n        lerp(u, grad(_p[AB + 1], x, yMinus1, zMinus1), grad(_p[BB + 1], xMinus1, yMinus1, zMinus1))\n      )\n    );\n  }\n}\nexport {\n  ImprovedNoise\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}