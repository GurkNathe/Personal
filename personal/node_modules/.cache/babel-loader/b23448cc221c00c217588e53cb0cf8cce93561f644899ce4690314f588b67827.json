{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Matrix4, Vector3, Box3, DirectionalLight, MathUtils, ShaderChunk, Vector2 } from \"three\";\nimport { CSMFrustum } from \"./CSMFrustum.js\";\nimport { CSMShader } from \"./CSMShader.js\";\nvar _cameraToLightMatrix = /* @__PURE__ */new Matrix4();\nvar _lightSpaceFrustum = /* @__PURE__ */new CSMFrustum();\nvar _center = /* @__PURE__ */new Vector3();\nvar _bbox = /* @__PURE__ */new Box3();\nvar _uniformArray = [];\nvar _logArray = [];\nvar CSM = /*#__PURE__*/function () {\n  function CSM(data) {\n    _classCallCheck(this, CSM);\n    data = data || {};\n    this.camera = data.camera;\n    this.parent = data.parent;\n    this.cascades = data.cascades || 3;\n    this.maxFar = data.maxFar || 1e5;\n    this.mode = data.mode || \"practical\";\n    this.shadowMapSize = data.shadowMapSize || 2048;\n    this.shadowBias = data.shadowBias || 1e-6;\n    this.lightDirection = data.lightDirection || new Vector3(1, -1, 1).normalize();\n    this.lightIntensity = data.lightIntensity || 1;\n    this.lightNear = data.lightNear || 1;\n    this.lightFar = data.lightFar || 2e3;\n    this.lightMargin = data.lightMargin || 200;\n    this.customSplitsCallback = data.customSplitsCallback;\n    this.fade = false;\n    this.mainFrustum = new CSMFrustum();\n    this.frustums = [];\n    this.breaks = [];\n    this.lights = [];\n    this.shaders = /* @__PURE__ */new Map();\n    this.createLights();\n    this.updateFrustums();\n    this.injectInclude();\n  }\n  _createClass(CSM, [{\n    key: \"createLights\",\n    value: function createLights() {\n      for (var i = 0; i < this.cascades; i++) {\n        var light = new DirectionalLight(16777215, this.lightIntensity);\n        light.castShadow = true;\n        light.shadow.mapSize.width = this.shadowMapSize;\n        light.shadow.mapSize.height = this.shadowMapSize;\n        light.shadow.camera.near = this.lightNear;\n        light.shadow.camera.far = this.lightFar;\n        light.shadow.bias = this.shadowBias;\n        this.parent.add(light);\n        this.parent.add(light.target);\n        this.lights.push(light);\n      }\n    }\n  }, {\n    key: \"initCascades\",\n    value: function initCascades() {\n      var camera = this.camera;\n      camera.updateProjectionMatrix();\n      this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix, this.maxFar);\n      this.mainFrustum.split(this.breaks, this.frustums);\n    }\n  }, {\n    key: \"updateShadowBounds\",\n    value: function updateShadowBounds() {\n      var frustums = this.frustums;\n      for (var i = 0; i < frustums.length; i++) {\n        var light = this.lights[i];\n        var shadowCam = light.shadow.camera;\n        var frustum = this.frustums[i];\n        var nearVerts = frustum.vertices.near;\n        var farVerts = frustum.vertices.far;\n        var point1 = farVerts[0];\n        var point2 = void 0;\n        if (point1.distanceTo(farVerts[2]) > point1.distanceTo(nearVerts[2])) {\n          point2 = farVerts[2];\n        } else {\n          point2 = nearVerts[2];\n        }\n        var squaredBBWidth = point1.distanceTo(point2);\n        if (this.fade) {\n          var camera = this.camera;\n          var far = Math.max(camera.far, this.maxFar);\n          var linearDepth = frustum.vertices.far[0].z / (far - camera.near);\n          var margin = 0.25 * Math.pow(linearDepth, 2) * (far - camera.near);\n          squaredBBWidth += margin;\n        }\n        shadowCam.left = -squaredBBWidth / 2;\n        shadowCam.right = squaredBBWidth / 2;\n        shadowCam.top = squaredBBWidth / 2;\n        shadowCam.bottom = -squaredBBWidth / 2;\n        shadowCam.updateProjectionMatrix();\n      }\n    }\n  }, {\n    key: \"getBreaks\",\n    value: function getBreaks() {\n      var camera = this.camera;\n      var far = Math.min(camera.far, this.maxFar);\n      this.breaks.length = 0;\n      switch (this.mode) {\n        case \"uniform\":\n          uniformSplit(this.cascades, camera.near, far, this.breaks);\n          break;\n        case \"logarithmic\":\n          logarithmicSplit(this.cascades, camera.near, far, this.breaks);\n          break;\n        case \"practical\":\n          practicalSplit(this.cascades, camera.near, far, 0.5, this.breaks);\n          break;\n        case \"custom\":\n          if (this.customSplitsCallback === void 0) console.error(\"CSM: Custom split scheme callback not defined.\");\n          this.customSplitsCallback(this.cascades, camera.near, far, this.breaks);\n          break;\n      }\n      function uniformSplit(amount, near, far2, target) {\n        for (var i = 1; i < amount; i++) {\n          target.push((near + (far2 - near) * i / amount) / far2);\n        }\n        target.push(1);\n      }\n      function logarithmicSplit(amount, near, far2, target) {\n        for (var i = 1; i < amount; i++) {\n          target.push(near * Math.pow(far2 / near, i / amount) / far2);\n        }\n        target.push(1);\n      }\n      function practicalSplit(amount, near, far2, lambda, target) {\n        _uniformArray.length = 0;\n        _logArray.length = 0;\n        logarithmicSplit(amount, near, far2, _logArray);\n        uniformSplit(amount, near, far2, _uniformArray);\n        for (var i = 1; i < amount; i++) {\n          target.push(MathUtils.lerp(_uniformArray[i - 1], _logArray[i - 1], lambda));\n        }\n        target.push(1);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var camera = this.camera;\n      var frustums = this.frustums;\n      for (var i = 0; i < frustums.length; i++) {\n        var light = this.lights[i];\n        var shadowCam = light.shadow.camera;\n        var texelWidth = (shadowCam.right - shadowCam.left) / this.shadowMapSize;\n        var texelHeight = (shadowCam.top - shadowCam.bottom) / this.shadowMapSize;\n        light.shadow.camera.updateMatrixWorld(true);\n        _cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse, camera.matrixWorld);\n        frustums[i].toSpace(_cameraToLightMatrix, _lightSpaceFrustum);\n        var nearVerts = _lightSpaceFrustum.vertices.near;\n        var farVerts = _lightSpaceFrustum.vertices.far;\n        _bbox.makeEmpty();\n        for (var j = 0; j < 4; j++) {\n          _bbox.expandByPoint(nearVerts[j]);\n          _bbox.expandByPoint(farVerts[j]);\n        }\n        _bbox.getCenter(_center);\n        _center.z = _bbox.max.z + this.lightMargin;\n        _center.x = Math.floor(_center.x / texelWidth) * texelWidth;\n        _center.y = Math.floor(_center.y / texelHeight) * texelHeight;\n        _center.applyMatrix4(light.shadow.camera.matrixWorld);\n        light.position.copy(_center);\n        light.target.position.copy(_center);\n        light.target.position.x += this.lightDirection.x;\n        light.target.position.y += this.lightDirection.y;\n        light.target.position.z += this.lightDirection.z;\n      }\n    }\n  }, {\n    key: \"injectInclude\",\n    value: function injectInclude() {\n      ShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n      ShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n    }\n  }, {\n    key: \"setupMaterial\",\n    value: function setupMaterial(material) {\n      material.defines = material.defines || {};\n      material.defines.USE_CSM = 1;\n      material.defines.CSM_CASCADES = this.cascades;\n      if (this.fade) {\n        material.defines.CSM_FADE = \"\";\n      }\n      var breaksVec2 = [];\n      var scope = this;\n      var shaders = this.shaders;\n      material.onBeforeCompile = function (shader) {\n        var far = Math.min(scope.camera.far, scope.maxFar);\n        scope.getExtendedBreaks(breaksVec2);\n        shader.uniforms.CSM_cascades = {\n          value: breaksVec2\n        };\n        shader.uniforms.cameraNear = {\n          value: scope.camera.near\n        };\n        shader.uniforms.shadowFar = {\n          value: far\n        };\n        shaders.set(material, shader);\n      };\n      shaders.set(material, null);\n    }\n  }, {\n    key: \"updateUniforms\",\n    value: function updateUniforms() {\n      var far = Math.min(this.camera.far, this.maxFar);\n      var shaders = this.shaders;\n      shaders.forEach(function (shader, material) {\n        if (shader !== null) {\n          var uniforms = shader.uniforms;\n          this.getExtendedBreaks(uniforms.CSM_cascades.value);\n          uniforms.cameraNear.value = this.camera.near;\n          uniforms.shadowFar.value = far;\n        }\n        if (!this.fade && \"CSM_FADE\" in material.defines) {\n          delete material.defines.CSM_FADE;\n          material.needsUpdate = true;\n        } else if (this.fade && !(\"CSM_FADE\" in material.defines)) {\n          material.defines.CSM_FADE = \"\";\n          material.needsUpdate = true;\n        }\n      }, this);\n    }\n  }, {\n    key: \"getExtendedBreaks\",\n    value: function getExtendedBreaks(target) {\n      while (target.length < this.breaks.length) {\n        target.push(new Vector2());\n      }\n      target.length = this.breaks.length;\n      for (var i = 0; i < this.cascades; i++) {\n        var amount = this.breaks[i];\n        var prev = this.breaks[i - 1] || 0;\n        target[i].x = prev;\n        target[i].y = amount;\n      }\n    }\n  }, {\n    key: \"updateFrustums\",\n    value: function updateFrustums() {\n      this.getBreaks();\n      this.initCascades();\n      this.updateShadowBounds();\n      this.updateUniforms();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var i = 0; i < this.lights.length; i++) {\n        this.parent.remove(this.lights[i]);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var shaders = this.shaders;\n      shaders.forEach(function (shader, material) {\n        delete material.onBeforeCompile;\n        delete material.defines.USE_CSM;\n        delete material.defines.CSM_CASCADES;\n        delete material.defines.CSM_FADE;\n        if (shader !== null) {\n          delete shader.uniforms.CSM_cascades;\n          delete shader.uniforms.cameraNear;\n          delete shader.uniforms.shadowFar;\n        }\n        material.needsUpdate = true;\n      });\n      shaders.clear();\n    }\n  }]);\n  return CSM;\n}();\nexport { CSM };","map":{"version":3,"names":["Matrix4","Vector3","Box3","DirectionalLight","MathUtils","ShaderChunk","Vector2","CSMFrustum","CSMShader","_cameraToLightMatrix","_lightSpaceFrustum","_center","_bbox","_uniformArray","_logArray","CSM","data","_classCallCheck","camera","parent","cascades","maxFar","mode","shadowMapSize","shadowBias","lightDirection","normalize","lightIntensity","lightNear","lightFar","lightMargin","customSplitsCallback","fade","mainFrustum","frustums","breaks","lights","shaders","Map","createLights","updateFrustums","injectInclude","_createClass","key","value","i","light","castShadow","shadow","mapSize","width","height","near","far","bias","add","target","push","initCascades","updateProjectionMatrix","setFromProjectionMatrix","projectionMatrix","split","updateShadowBounds","length","shadowCam","frustum","nearVerts","vertices","farVerts","point1","point2","distanceTo","squaredBBWidth","Math","max","linearDepth","z","margin","pow","left","right","top","bottom","getBreaks","min","uniformSplit","logarithmicSplit","practicalSplit","console","error","amount","far2","lambda","lerp","update","texelWidth","texelHeight","updateMatrixWorld","multiplyMatrices","matrixWorldInverse","matrixWorld","toSpace","makeEmpty","j","expandByPoint","getCenter","x","floor","y","applyMatrix4","position","copy","lights_fragment_begin","lights_pars_begin","setupMaterial","material","defines","USE_CSM","CSM_CASCADES","CSM_FADE","breaksVec2","scope","onBeforeCompile","shader","getExtendedBreaks","uniforms","CSM_cascades","cameraNear","shadowFar","set","updateUniforms","forEach","needsUpdate","prev","remove","dispose","clear"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/csm/CSM.js"],"sourcesContent":["import { Matrix4, Vector3, Box3, DirectionalLight, MathUtils, ShaderChunk, Vector2 } from \"three\";\nimport { CSMFrustum } from \"./CSMFrustum.js\";\nimport { CSMShader } from \"./CSMShader.js\";\nconst _cameraToLightMatrix = /* @__PURE__ */ new Matrix4();\nconst _lightSpaceFrustum = /* @__PURE__ */ new CSMFrustum();\nconst _center = /* @__PURE__ */ new Vector3();\nconst _bbox = /* @__PURE__ */ new Box3();\nconst _uniformArray = [];\nconst _logArray = [];\nclass CSM {\n  constructor(data) {\n    data = data || {};\n    this.camera = data.camera;\n    this.parent = data.parent;\n    this.cascades = data.cascades || 3;\n    this.maxFar = data.maxFar || 1e5;\n    this.mode = data.mode || \"practical\";\n    this.shadowMapSize = data.shadowMapSize || 2048;\n    this.shadowBias = data.shadowBias || 1e-6;\n    this.lightDirection = data.lightDirection || new Vector3(1, -1, 1).normalize();\n    this.lightIntensity = data.lightIntensity || 1;\n    this.lightNear = data.lightNear || 1;\n    this.lightFar = data.lightFar || 2e3;\n    this.lightMargin = data.lightMargin || 200;\n    this.customSplitsCallback = data.customSplitsCallback;\n    this.fade = false;\n    this.mainFrustum = new CSMFrustum();\n    this.frustums = [];\n    this.breaks = [];\n    this.lights = [];\n    this.shaders = /* @__PURE__ */ new Map();\n    this.createLights();\n    this.updateFrustums();\n    this.injectInclude();\n  }\n  createLights() {\n    for (let i = 0; i < this.cascades; i++) {\n      const light = new DirectionalLight(16777215, this.lightIntensity);\n      light.castShadow = true;\n      light.shadow.mapSize.width = this.shadowMapSize;\n      light.shadow.mapSize.height = this.shadowMapSize;\n      light.shadow.camera.near = this.lightNear;\n      light.shadow.camera.far = this.lightFar;\n      light.shadow.bias = this.shadowBias;\n      this.parent.add(light);\n      this.parent.add(light.target);\n      this.lights.push(light);\n    }\n  }\n  initCascades() {\n    const camera = this.camera;\n    camera.updateProjectionMatrix();\n    this.mainFrustum.setFromProjectionMatrix(camera.projectionMatrix, this.maxFar);\n    this.mainFrustum.split(this.breaks, this.frustums);\n  }\n  updateShadowBounds() {\n    const frustums = this.frustums;\n    for (let i = 0; i < frustums.length; i++) {\n      const light = this.lights[i];\n      const shadowCam = light.shadow.camera;\n      const frustum = this.frustums[i];\n      const nearVerts = frustum.vertices.near;\n      const farVerts = frustum.vertices.far;\n      const point1 = farVerts[0];\n      let point2;\n      if (point1.distanceTo(farVerts[2]) > point1.distanceTo(nearVerts[2])) {\n        point2 = farVerts[2];\n      } else {\n        point2 = nearVerts[2];\n      }\n      let squaredBBWidth = point1.distanceTo(point2);\n      if (this.fade) {\n        const camera = this.camera;\n        const far = Math.max(camera.far, this.maxFar);\n        const linearDepth = frustum.vertices.far[0].z / (far - camera.near);\n        const margin = 0.25 * Math.pow(linearDepth, 2) * (far - camera.near);\n        squaredBBWidth += margin;\n      }\n      shadowCam.left = -squaredBBWidth / 2;\n      shadowCam.right = squaredBBWidth / 2;\n      shadowCam.top = squaredBBWidth / 2;\n      shadowCam.bottom = -squaredBBWidth / 2;\n      shadowCam.updateProjectionMatrix();\n    }\n  }\n  getBreaks() {\n    const camera = this.camera;\n    const far = Math.min(camera.far, this.maxFar);\n    this.breaks.length = 0;\n    switch (this.mode) {\n      case \"uniform\":\n        uniformSplit(this.cascades, camera.near, far, this.breaks);\n        break;\n      case \"logarithmic\":\n        logarithmicSplit(this.cascades, camera.near, far, this.breaks);\n        break;\n      case \"practical\":\n        practicalSplit(this.cascades, camera.near, far, 0.5, this.breaks);\n        break;\n      case \"custom\":\n        if (this.customSplitsCallback === void 0)\n          console.error(\"CSM: Custom split scheme callback not defined.\");\n        this.customSplitsCallback(this.cascades, camera.near, far, this.breaks);\n        break;\n    }\n    function uniformSplit(amount, near, far2, target) {\n      for (let i = 1; i < amount; i++) {\n        target.push((near + (far2 - near) * i / amount) / far2);\n      }\n      target.push(1);\n    }\n    function logarithmicSplit(amount, near, far2, target) {\n      for (let i = 1; i < amount; i++) {\n        target.push(near * (far2 / near) ** (i / amount) / far2);\n      }\n      target.push(1);\n    }\n    function practicalSplit(amount, near, far2, lambda, target) {\n      _uniformArray.length = 0;\n      _logArray.length = 0;\n      logarithmicSplit(amount, near, far2, _logArray);\n      uniformSplit(amount, near, far2, _uniformArray);\n      for (let i = 1; i < amount; i++) {\n        target.push(MathUtils.lerp(_uniformArray[i - 1], _logArray[i - 1], lambda));\n      }\n      target.push(1);\n    }\n  }\n  update() {\n    const camera = this.camera;\n    const frustums = this.frustums;\n    for (let i = 0; i < frustums.length; i++) {\n      const light = this.lights[i];\n      const shadowCam = light.shadow.camera;\n      const texelWidth = (shadowCam.right - shadowCam.left) / this.shadowMapSize;\n      const texelHeight = (shadowCam.top - shadowCam.bottom) / this.shadowMapSize;\n      light.shadow.camera.updateMatrixWorld(true);\n      _cameraToLightMatrix.multiplyMatrices(light.shadow.camera.matrixWorldInverse, camera.matrixWorld);\n      frustums[i].toSpace(_cameraToLightMatrix, _lightSpaceFrustum);\n      const nearVerts = _lightSpaceFrustum.vertices.near;\n      const farVerts = _lightSpaceFrustum.vertices.far;\n      _bbox.makeEmpty();\n      for (let j = 0; j < 4; j++) {\n        _bbox.expandByPoint(nearVerts[j]);\n        _bbox.expandByPoint(farVerts[j]);\n      }\n      _bbox.getCenter(_center);\n      _center.z = _bbox.max.z + this.lightMargin;\n      _center.x = Math.floor(_center.x / texelWidth) * texelWidth;\n      _center.y = Math.floor(_center.y / texelHeight) * texelHeight;\n      _center.applyMatrix4(light.shadow.camera.matrixWorld);\n      light.position.copy(_center);\n      light.target.position.copy(_center);\n      light.target.position.x += this.lightDirection.x;\n      light.target.position.y += this.lightDirection.y;\n      light.target.position.z += this.lightDirection.z;\n    }\n  }\n  injectInclude() {\n    ShaderChunk.lights_fragment_begin = CSMShader.lights_fragment_begin;\n    ShaderChunk.lights_pars_begin = CSMShader.lights_pars_begin;\n  }\n  setupMaterial(material) {\n    material.defines = material.defines || {};\n    material.defines.USE_CSM = 1;\n    material.defines.CSM_CASCADES = this.cascades;\n    if (this.fade) {\n      material.defines.CSM_FADE = \"\";\n    }\n    const breaksVec2 = [];\n    const scope = this;\n    const shaders = this.shaders;\n    material.onBeforeCompile = function(shader) {\n      const far = Math.min(scope.camera.far, scope.maxFar);\n      scope.getExtendedBreaks(breaksVec2);\n      shader.uniforms.CSM_cascades = { value: breaksVec2 };\n      shader.uniforms.cameraNear = { value: scope.camera.near };\n      shader.uniforms.shadowFar = { value: far };\n      shaders.set(material, shader);\n    };\n    shaders.set(material, null);\n  }\n  updateUniforms() {\n    const far = Math.min(this.camera.far, this.maxFar);\n    const shaders = this.shaders;\n    shaders.forEach(function(shader, material) {\n      if (shader !== null) {\n        const uniforms = shader.uniforms;\n        this.getExtendedBreaks(uniforms.CSM_cascades.value);\n        uniforms.cameraNear.value = this.camera.near;\n        uniforms.shadowFar.value = far;\n      }\n      if (!this.fade && \"CSM_FADE\" in material.defines) {\n        delete material.defines.CSM_FADE;\n        material.needsUpdate = true;\n      } else if (this.fade && !(\"CSM_FADE\" in material.defines)) {\n        material.defines.CSM_FADE = \"\";\n        material.needsUpdate = true;\n      }\n    }, this);\n  }\n  getExtendedBreaks(target) {\n    while (target.length < this.breaks.length) {\n      target.push(new Vector2());\n    }\n    target.length = this.breaks.length;\n    for (let i = 0; i < this.cascades; i++) {\n      const amount = this.breaks[i];\n      const prev = this.breaks[i - 1] || 0;\n      target[i].x = prev;\n      target[i].y = amount;\n    }\n  }\n  updateFrustums() {\n    this.getBreaks();\n    this.initCascades();\n    this.updateShadowBounds();\n    this.updateUniforms();\n  }\n  remove() {\n    for (let i = 0; i < this.lights.length; i++) {\n      this.parent.remove(this.lights[i]);\n    }\n  }\n  dispose() {\n    const shaders = this.shaders;\n    shaders.forEach(function(shader, material) {\n      delete material.onBeforeCompile;\n      delete material.defines.USE_CSM;\n      delete material.defines.CSM_CASCADES;\n      delete material.defines.CSM_FADE;\n      if (shader !== null) {\n        delete shader.uniforms.CSM_cascades;\n        delete shader.uniforms.cameraNear;\n        delete shader.uniforms.shadowFar;\n      }\n      material.needsUpdate = true;\n    });\n    shaders.clear();\n  }\n}\nexport {\n  CSM\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}