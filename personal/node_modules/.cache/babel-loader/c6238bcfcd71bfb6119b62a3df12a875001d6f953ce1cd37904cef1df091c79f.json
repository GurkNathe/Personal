{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Object3D, Vector3, Quaternion, AnimationMixer } from \"three\";\nimport { CCDIKSolver } from \"./CCDIKSolver.js\";\nimport { MMDPhysics } from \"./MMDPhysics.js\";\nvar MMDAnimationHelper = /*#__PURE__*/function () {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  function MMDAnimationHelper() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, MMDAnimationHelper);\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = \"target\";\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = /* @__PURE__ */new WeakMap();\n    this.configuration = {\n      sync: params.sync !== void 0 ? params.sync : true,\n      afterglow: params.afterglow !== void 0 ? params.afterglow : 0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== void 0 ? params.resetPhysicsOnLoop : true,\n      pmxAnimation: params.pmxAnimation !== void 0 ? params.pmxAnimation : false\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n    this.onBeforePhysics = function () {};\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n  /**\n   * Adds an Three.js Object to helper and setups animation.\n   * The anmation durations of added objects are synched\n   * if this.configuration.sync is true.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @param {Object} params - (optional)\n   * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n   * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n   * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n   * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n   * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n   * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n   * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n   * @return {MMDAnimationHelper}\n   */\n  _createClass(MMDAnimationHelper, [{\n    key: \"add\",\n    value: function add(object) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (object.isSkinnedMesh) {\n        this._addMesh(object, params);\n      } else if (object.isCamera) {\n        this._setupCamera(object, params);\n      } else if (object.type === \"Audio\") {\n        this._setupAudio(object, params);\n      } else {\n        throw new Error(\"THREE.MMDAnimationHelper.add: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\");\n      }\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    }\n    /**\n     * Removes an Three.js Object from helper.\n     *\n     * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n     * @return {MMDAnimationHelper}\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(object) {\n      if (object.isSkinnedMesh) {\n        this._removeMesh(object);\n      } else if (object.isCamera) {\n        this._clearCamera(object);\n      } else if (object.type === \"Audio\") {\n        this._clearAudio(object);\n      } else {\n        throw new Error(\"THREE.MMDAnimationHelper.remove: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\");\n      }\n      if (this.configuration.sync) this._syncDuration();\n      return this;\n    }\n    /**\n     * Updates the animation.\n     *\n     * @param {Number} delta\n     * @return {MMDAnimationHelper}\n     */\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.audioManager !== null) this.audioManager.control(delta);\n      for (var i = 0; i < this.meshes.length; i++) {\n        this._animateMesh(this.meshes[i], delta);\n      }\n      if (this.sharedPhysics) this._updateSharedPhysics(delta);\n      if (this.camera !== null) this._animateCamera(this.camera, delta);\n      return this;\n    }\n    /**\n     * Changes the pose of SkinnedMesh as VPD specifies.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @param {Object} vpd - VPD content parsed MMDParser\n     * @param {Object} params - (optional)\n     * @param {boolean} params.resetPose - Default is true.\n     * @param {boolean} params.ik - Default is true.\n     * @param {boolean} params.grant - Default is true.\n     * @return {MMDAnimationHelper}\n     */\n  }, {\n    key: \"pose\",\n    value: function pose(mesh, vpd) {\n      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (params.resetPose !== false) mesh.pose();\n      var bones = mesh.skeleton.bones;\n      var boneParams = vpd.bones;\n      var boneNameDictionary = {};\n      for (var i = 0, il = bones.length; i < il; i++) {\n        boneNameDictionary[bones[i].name] = i;\n      }\n      var vector = new Vector3();\n      var quaternion = new Quaternion();\n      for (var _i = 0, _il = boneParams.length; _i < _il; _i++) {\n        var boneParam = boneParams[_i];\n        var boneIndex = boneNameDictionary[boneParam.name];\n        if (boneIndex === void 0) continue;\n        var bone = bones[boneIndex];\n        bone.position.add(vector.fromArray(boneParam.translation));\n        bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n      }\n      mesh.updateMatrixWorld(true);\n      if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n        var sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n        var ikSolver = params.ik !== false ? this._createCCDIKSolver(mesh) : null;\n        var grantSolver = params.grant !== false ? this.createGrantSolver(mesh) : null;\n        this._animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver);\n      } else {\n        if (params.ik !== false) {\n          this._createCCDIKSolver(mesh).update();\n        }\n        if (params.grant !== false) {\n          this.createGrantSolver(mesh).update();\n        }\n      }\n      return this;\n    }\n    /**\n     * Enabes/Disables an animation feature.\n     *\n     * @param {string} key\n     * @param {boolean} enabled\n     * @return {MMDAnimationHelper}\n     */\n  }, {\n    key: \"enable\",\n    value: function enable(key, enabled) {\n      if (this.enabled[key] === void 0) {\n        throw new Error(\"THREE.MMDAnimationHelper.enable: unknown key \" + key);\n      }\n      this.enabled[key] = enabled;\n      if (key === \"physics\") {\n        for (var i = 0, il = this.meshes.length; i < il; i++) {\n          this._optimizeIK(this.meshes[i], enabled);\n        }\n      }\n      return this;\n    }\n    /**\n     * Creates an GrantSolver instance.\n     *\n     * @param {THREE.SkinnedMesh} mesh\n     * @return {GrantSolver}\n     */\n  }, {\n    key: \"createGrantSolver\",\n    value: function createGrantSolver(mesh) {\n      return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n    }\n    // private methods\n  }, {\n    key: \"_addMesh\",\n    value: function _addMesh(mesh, params) {\n      if (this.meshes.indexOf(mesh) >= 0) {\n        throw new Error(\"THREE.MMDAnimationHelper._addMesh: SkinnedMesh '\" + mesh.name + \"' has already been added.\");\n      }\n      this.meshes.push(mesh);\n      this.objects.set(mesh, {\n        looped: false\n      });\n      this._setupMeshAnimation(mesh, params.animation);\n      if (params.physics !== false) {\n        this._setupMeshPhysics(mesh, params);\n      }\n      return this;\n    }\n  }, {\n    key: \"_setupCamera\",\n    value: function _setupCamera(camera, params) {\n      if (this.camera === camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupCamera: Camera '\" + camera.name + \"' has already been set.\");\n      }\n      if (this.camera) this.clearCamera(this.camera);\n      this.camera = camera;\n      camera.add(this.cameraTarget);\n      this.objects.set(camera, {});\n      if (params.animation !== void 0) {\n        this._setupCameraAnimation(camera, params.animation);\n      }\n      return this;\n    }\n  }, {\n    key: \"_setupAudio\",\n    value: function _setupAudio(audio, params) {\n      if (this.audio === audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._setupAudio: Audio '\" + audio.name + \"' has already been set.\");\n      }\n      if (this.audio) this.clearAudio(this.audio);\n      this.audio = audio;\n      this.audioManager = new AudioManager(audio, params);\n      this.objects.set(this.audioManager, {\n        duration: this.audioManager.duration\n      });\n      return this;\n    }\n  }, {\n    key: \"_removeMesh\",\n    value: function _removeMesh(mesh) {\n      var found = false;\n      var writeIndex = 0;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        if (this.meshes[i] === mesh) {\n          this.objects.delete(mesh);\n          found = true;\n          continue;\n        }\n        this.meshes[writeIndex++] = this.meshes[i];\n      }\n      if (!found) {\n        throw new Error(\"THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '\" + mesh.name + \"' has not been added yet.\");\n      }\n      this.meshes.length = writeIndex;\n      return this;\n    }\n  }, {\n    key: \"_clearCamera\",\n    value: function _clearCamera(camera) {\n      if (camera !== this.camera) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearCamera: Camera '\" + camera.name + \"' has not been set yet.\");\n      }\n      this.camera.remove(this.cameraTarget);\n      this.objects.delete(this.camera);\n      this.camera = null;\n      return this;\n    }\n  }, {\n    key: \"_clearAudio\",\n    value: function _clearAudio(audio) {\n      if (audio !== this.audio) {\n        throw new Error(\"THREE.MMDAnimationHelper._clearAudio: Audio '\" + audio.name + \"' has not been set yet.\");\n      }\n      this.objects.delete(this.audioManager);\n      this.audio = null;\n      this.audioManager = null;\n      return this;\n    }\n  }, {\n    key: \"_setupMeshAnimation\",\n    value: function _setupMeshAnimation(mesh, animation) {\n      var objects = this.objects.get(mesh);\n      if (animation !== void 0) {\n        var animations = Array.isArray(animation) ? animation : [animation];\n        objects.mixer = new AnimationMixer(mesh);\n        for (var i = 0, il = animations.length; i < il; i++) {\n          objects.mixer.clipAction(animations[i]).play();\n        }\n        objects.mixer.addEventListener(\"loop\", function (event) {\n          var tracks = event.action._clip.tracks;\n          if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== \".bones\") return;\n          objects.looped = true;\n        });\n      }\n      objects.ikSolver = this._createCCDIKSolver(mesh);\n      objects.grantSolver = this.createGrantSolver(mesh);\n      return this;\n    }\n  }, {\n    key: \"_setupCameraAnimation\",\n    value: function _setupCameraAnimation(camera, animation) {\n      var animations = Array.isArray(animation) ? animation : [animation];\n      var objects = this.objects.get(camera);\n      objects.mixer = new AnimationMixer(camera);\n      for (var i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n    }\n  }, {\n    key: \"_setupMeshPhysics\",\n    value: function _setupMeshPhysics(mesh, params) {\n      var objects = this.objects.get(mesh);\n      if (params.world === void 0 && this.sharedPhysics) {\n        var masterPhysics = this._getMasterPhysics();\n        if (masterPhysics !== null) world = masterPhysics.world;\n      }\n      objects.physics = this._createMMDPhysics(mesh, params);\n      if (objects.mixer && params.animationWarmup !== false) {\n        this._animateMesh(mesh, 0);\n        objects.physics.reset();\n      }\n      objects.physics.warmup(params.warmup !== void 0 ? params.warmup : 60);\n      this._optimizeIK(mesh, true);\n    }\n  }, {\n    key: \"_animateMesh\",\n    value: function _animateMesh(mesh, delta) {\n      var objects = this.objects.get(mesh);\n      var mixer = objects.mixer;\n      var ikSolver = objects.ikSolver;\n      var grantSolver = objects.grantSolver;\n      var physics = objects.physics;\n      var looped = objects.looped;\n      if (mixer && this.enabled.animation) {\n        this._restoreBones(mesh);\n        mixer.update(delta);\n        this._saveBones(mesh);\n        if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n          if (!objects.sortedBonesData) objects.sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n          this._animatePMXMesh(mesh, objects.sortedBonesData, ikSolver && this.enabled.ik ? ikSolver : null, grantSolver && this.enabled.grant ? grantSolver : null);\n        } else {\n          if (ikSolver && this.enabled.ik) {\n            mesh.updateMatrixWorld(true);\n            ikSolver.update();\n          }\n          if (grantSolver && this.enabled.grant) {\n            grantSolver.update();\n          }\n        }\n      }\n      if (looped === true && this.enabled.physics) {\n        if (physics && this.configuration.resetPhysicsOnLoop) physics.reset();\n        objects.looped = false;\n      }\n      if (physics && this.enabled.physics && !this.sharedPhysics) {\n        this.onBeforePhysics(mesh);\n        physics.update(delta);\n      }\n    }\n    // Sort bones in order by 1. transformationClass and 2. bone index.\n    // In PMX animation system, bone transformations should be processed\n    // in this order.\n  }, {\n    key: \"_sortBoneDataArray\",\n    value: function _sortBoneDataArray(boneDataArray) {\n      return boneDataArray.sort(function (a, b) {\n        if (a.transformationClass !== b.transformationClass) {\n          return a.transformationClass - b.transformationClass;\n        } else {\n          return a.index - b.index;\n        }\n      });\n    }\n    // PMX Animation system is a bit too complex and doesn't great match to\n    // Three.js Animation system. This method attempts to simulate it as much as\n    // possible but doesn't perfectly simulate.\n    // This method is more costly than the regular one so\n    // you are recommended to set constructor parameter \"pmxAnimation: true\"\n    // only if your PMX model animation doesn't work well.\n    // If you need better method you would be required to write your own.\n  }, {\n    key: \"_animatePMXMesh\",\n    value: function _animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver) {\n      _quaternionIndex = 0;\n      _grantResultMap.clear();\n      for (var i = 0, il = sortedBonesData.length; i < il; i++) {\n        updateOne(mesh, sortedBonesData[i].index, ikSolver, grantSolver);\n      }\n      mesh.updateMatrixWorld(true);\n      return this;\n    }\n  }, {\n    key: \"_animateCamera\",\n    value: function _animateCamera(camera, delta) {\n      var mixer = this.objects.get(camera).mixer;\n      if (mixer && this.enabled.cameraAnimation) {\n        mixer.update(delta);\n        camera.updateProjectionMatrix();\n        camera.up.set(0, 1, 0);\n        camera.up.applyQuaternion(camera.quaternion);\n        camera.lookAt(this.cameraTarget.position);\n      }\n    }\n  }, {\n    key: \"_optimizeIK\",\n    value: function _optimizeIK(mesh, physicsEnabled) {\n      var iks = mesh.geometry.userData.MMD.iks;\n      var bones = mesh.geometry.userData.MMD.bones;\n      for (var i = 0, il = iks.length; i < il; i++) {\n        var ik = iks[i];\n        var links = ik.links;\n        for (var j = 0, jl = links.length; j < jl; j++) {\n          var link = links[j];\n          if (physicsEnabled === true) {\n            link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n          } else {\n            link.enabled = true;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_createCCDIKSolver\",\n    value: function _createCCDIKSolver(mesh) {\n      if (CCDIKSolver === void 0) {\n        throw new Error(\"THREE.MMDAnimationHelper: Import CCDIKSolver.\");\n      }\n      return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n    }\n  }, {\n    key: \"_createMMDPhysics\",\n    value: function _createMMDPhysics(mesh, params) {\n      if (MMDPhysics === void 0) {\n        throw new Error(\"THREE.MMDPhysics: Import MMDPhysics.\");\n      }\n      return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n    }\n    /*\n     * Detects the longest duration and then sets it to them to sync.\n     * TODO: Not to access private properties ( ._actions and ._clip )\n     */\n  }, {\n    key: \"_syncDuration\",\n    value: function _syncDuration() {\n      var max = 0;\n      var objects = this.objects;\n      var meshes = this.meshes;\n      var camera = this.camera;\n      var audioManager = this.audioManager;\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        var mixer = this.objects.get(meshes[i]).mixer;\n        if (mixer === void 0) continue;\n        for (var j = 0; j < mixer._actions.length; j++) {\n          var clip = mixer._actions[j]._clip;\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n      if (camera !== null) {\n        var _mixer = this.objects.get(camera).mixer;\n        if (_mixer !== void 0) {\n          for (var _i2 = 0, _il2 = _mixer._actions.length; _i2 < _il2; _i2++) {\n            var _clip = _mixer._actions[_i2]._clip;\n            if (!objects.has(_clip)) {\n              objects.set(_clip, {\n                duration: _clip.duration\n              });\n            }\n            max = Math.max(max, objects.get(_clip).duration);\n          }\n        }\n      }\n      if (audioManager !== null) {\n        max = Math.max(max, objects.get(audioManager).duration);\n      }\n      max += this.configuration.afterglow;\n      for (var _i3 = 0, _il3 = this.meshes.length; _i3 < _il3; _i3++) {\n        var _mixer2 = this.objects.get(this.meshes[_i3]).mixer;\n        if (_mixer2 === void 0) continue;\n        for (var _j = 0, jl = _mixer2._actions.length; _j < jl; _j++) {\n          _mixer2._actions[_j]._clip.duration = max;\n        }\n      }\n      if (camera !== null) {\n        var _mixer3 = this.objects.get(camera).mixer;\n        if (_mixer3 !== void 0) {\n          for (var _i4 = 0, _il4 = _mixer3._actions.length; _i4 < _il4; _i4++) {\n            _mixer3._actions[_i4]._clip.duration = max;\n          }\n        }\n      }\n      if (audioManager !== null) {\n        audioManager.duration = max;\n      }\n    }\n    // workaround\n  }, {\n    key: \"_updatePropertyMixersBuffer\",\n    value: function _updatePropertyMixersBuffer(mesh) {\n      var mixer = this.objects.get(mesh).mixer;\n      var propertyMixers = mixer._bindings;\n      var accuIndex = mixer._accuIndex;\n      for (var i = 0, il = propertyMixers.length; i < il; i++) {\n        var propertyMixer = propertyMixers[i];\n        var buffer = propertyMixer.buffer;\n        var stride = propertyMixer.valueSize;\n        var offset = (accuIndex + 1) * stride;\n        propertyMixer.binding.getValue(buffer, offset);\n      }\n    }\n    /*\n     * Avoiding these two issues by restore/save bones before/after mixer animation.\n     *\n     * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n     *    Calculating IK, Grant, and Physics after mixer animation can break\n     *    the cache coherency.\n     *\n     * 2. Applying Grant two or more times without reset the posing breaks model.\n     */\n  }, {\n    key: \"_saveBones\",\n    value: function _saveBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var bones = mesh.skeleton.bones;\n      var backupBones = objects.backupBones;\n      if (backupBones === void 0) {\n        backupBones = new Float32Array(bones.length * 7);\n        objects.backupBones = backupBones;\n      }\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.toArray(backupBones, i * 7);\n        bone.quaternion.toArray(backupBones, i * 7 + 3);\n      }\n    }\n  }, {\n    key: \"_restoreBones\",\n    value: function _restoreBones(mesh) {\n      var objects = this.objects.get(mesh);\n      var backupBones = objects.backupBones;\n      if (backupBones === void 0) return;\n      var bones = mesh.skeleton.bones;\n      for (var i = 0, il = bones.length; i < il; i++) {\n        var bone = bones[i];\n        bone.position.fromArray(backupBones, i * 7);\n        bone.quaternion.fromArray(backupBones, i * 7 + 3);\n      }\n    }\n    // experimental\n  }, {\n    key: \"_getMasterPhysics\",\n    value: function _getMasterPhysics() {\n      if (this.masterPhysics !== null) return this.masterPhysics;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var physics = this.meshes[i].physics;\n        if (physics !== void 0 && physics !== null) {\n          this.masterPhysics = physics;\n          return this.masterPhysics;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_updateSharedPhysics\",\n    value: function _updateSharedPhysics(delta) {\n      if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics) return;\n      var physics = this._getMasterPhysics();\n      if (physics === null) return;\n      for (var i = 0, il = this.meshes.length; i < il; i++) {\n        var p = this.meshes[i].physics;\n        if (p !== null && p !== void 0) {\n          p.updateRigidBodies();\n        }\n      }\n      physics.stepSimulation(delta);\n      for (var _i5 = 0, _il5 = this.meshes.length; _i5 < _il5; _i5++) {\n        var _p = this.meshes[_i5].physics;\n        if (_p !== null && _p !== void 0) {\n          _p.updateBones();\n        }\n      }\n    }\n  }]);\n  return MMDAnimationHelper;\n}();\nvar _quaternions = [];\nvar _quaternionIndex = 0;\nfunction getQuaternion() {\n  if (_quaternionIndex >= _quaternions.length) {\n    _quaternions.push(new Quaternion());\n  }\n  return _quaternions[_quaternionIndex++];\n}\nvar _grantResultMap = /* @__PURE__ */new Map();\nfunction updateOne(mesh, boneIndex, ikSolver, grantSolver) {\n  var bones = mesh.skeleton.bones;\n  var bonesData = mesh.geometry.userData.MMD.bones;\n  var boneData = bonesData[boneIndex];\n  var bone = bones[boneIndex];\n  if (_grantResultMap.has(boneIndex)) return;\n  var quaternion = getQuaternion();\n  _grantResultMap.set(boneIndex, quaternion.copy(bone.quaternion));\n  if (grantSolver && boneData.grant && !boneData.grant.isLocal && boneData.grant.affectRotation) {\n    var parentIndex = boneData.grant.parentIndex;\n    var ratio = boneData.grant.ratio;\n    if (!_grantResultMap.has(parentIndex)) {\n      updateOne(mesh, parentIndex, ikSolver, grantSolver);\n    }\n    grantSolver.addGrantRotation(bone, _grantResultMap.get(parentIndex), ratio);\n  }\n  if (ikSolver && boneData.ik) {\n    mesh.updateMatrixWorld(true);\n    ikSolver.updateOne(boneData.ik);\n    var links = boneData.ik.links;\n    for (var i = 0, il = links.length; i < il; i++) {\n      var link = links[i];\n      if (link.enabled === false) continue;\n      var linkIndex = link.index;\n      if (_grantResultMap.has(linkIndex)) {\n        _grantResultMap.set(linkIndex, _grantResultMap.get(linkIndex).copy(bones[linkIndex].quaternion));\n      }\n    }\n  }\n  quaternion.copy(bone.quaternion);\n}\nvar AudioManager = /*#__PURE__*/function () {\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n  function AudioManager(audio) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, AudioManager);\n    this.audio = audio;\n    this.elapsedTime = 0;\n    this.currentTime = 0;\n    this.delayTime = params.delayTime !== void 0 ? params.delayTime : 0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n  /**\n   * @param {Number} delta\n   * @return {AudioManager}\n   */\n  _createClass(AudioManager, [{\n    key: \"control\",\n    value: function control(delta) {\n      this.elapsed += delta;\n      this.currentTime += delta;\n      if (this._shouldStopAudio()) this.audio.stop();\n      if (this._shouldStartAudio()) this.audio.play();\n      return this;\n    }\n    // private methods\n  }, {\n    key: \"_shouldStartAudio\",\n    value: function _shouldStartAudio() {\n      if (this.audio.isPlaying) return false;\n      while (this.currentTime >= this.duration) {\n        this.currentTime -= this.duration;\n      }\n      if (this.currentTime < this.delayTime) return false;\n      if (this.currentTime - this.delayTime > this.audioDuration) return false;\n      return true;\n    }\n  }, {\n    key: \"_shouldStopAudio\",\n    value: function _shouldStopAudio() {\n      return this.audio.isPlaying && this.currentTime >= this.duration;\n    }\n  }]);\n  return AudioManager;\n}();\nvar _q = /* @__PURE__ */new Quaternion();\nvar GrantSolver = /*#__PURE__*/function () {\n  function GrantSolver(mesh) {\n    var grants = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, GrantSolver);\n    this.mesh = mesh;\n    this.grants = grants;\n  }\n  /**\n   * Solve all the grant bones\n   * @return {GrantSolver}\n   */\n  _createClass(GrantSolver, [{\n    key: \"update\",\n    value: function update() {\n      var grants = this.grants;\n      for (var i = 0, il = grants.length; i < il; i++) {\n        this.updateOne(grants[i]);\n      }\n      return this;\n    }\n    /**\n     * Solve a grant bone\n     * @param {Object} grant - grant parameter\n     * @return {GrantSolver}\n     */\n  }, {\n    key: \"updateOne\",\n    value: function updateOne(grant) {\n      var bones = this.mesh.skeleton.bones;\n      var bone = bones[grant.index];\n      var parentBone = bones[grant.parentIndex];\n      if (grant.isLocal) {\n        if (grant.affectPosition) {}\n        if (grant.affectRotation) {}\n      } else {\n        if (grant.affectPosition) {}\n        if (grant.affectRotation) {\n          this.addGrantRotation(bone, parentBone.quaternion, grant.ratio);\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"addGrantRotation\",\n    value: function addGrantRotation(bone, q, ratio) {\n      _q.set(0, 0, 0, 1);\n      _q.slerp(q, ratio);\n      bone.quaternion.multiply(_q);\n      return this;\n    }\n  }]);\n  return GrantSolver;\n}();\nexport { MMDAnimationHelper };","map":{"version":3,"names":["Object3D","Vector3","Quaternion","AnimationMixer","CCDIKSolver","MMDPhysics","MMDAnimationHelper","params","arguments","length","undefined","_classCallCheck","meshes","camera","cameraTarget","name","audio","audioManager","objects","WeakMap","configuration","sync","afterglow","resetPhysicsOnLoop","pmxAnimation","enabled","animation","ik","grant","physics","cameraAnimation","onBeforePhysics","sharedPhysics","masterPhysics","_createClass","key","value","add","object","isSkinnedMesh","_addMesh","isCamera","_setupCamera","type","_setupAudio","Error","_syncDuration","remove","_removeMesh","_clearCamera","_clearAudio","update","delta","control","i","_animateMesh","_updateSharedPhysics","_animateCamera","pose","mesh","vpd","resetPose","bones","skeleton","boneParams","boneNameDictionary","il","vector","quaternion","boneParam","boneIndex","bone","position","fromArray","translation","multiply","updateMatrixWorld","geometry","userData","MMD","format","sortedBonesData","_sortBoneDataArray","slice","ikSolver","_createCCDIKSolver","grantSolver","createGrantSolver","_animatePMXMesh","enable","_optimizeIK","GrantSolver","grants","indexOf","push","set","looped","_setupMeshAnimation","_setupMeshPhysics","clearCamera","_setupCameraAnimation","clearAudio","AudioManager","duration","found","writeIndex","delete","get","animations","Array","isArray","mixer","clipAction","play","addEventListener","event","tracks","action","_clip","world","_getMasterPhysics","_createMMDPhysics","animationWarmup","reset","warmup","_restoreBones","_saveBones","boneDataArray","sort","a","b","transformationClass","index","_quaternionIndex","_grantResultMap","clear","updateOne","updateProjectionMatrix","up","applyQuaternion","lookAt","physicsEnabled","iks","links","j","jl","link","rigidBodyType","rigidBodies","constraints","max","_actions","clip","has","Math","_updatePropertyMixersBuffer","propertyMixers","_bindings","accuIndex","_accuIndex","propertyMixer","buffer","stride","valueSize","offset","binding","getValue","backupBones","Float32Array","toArray","p","updateRigidBodies","stepSimulation","updateBones","_quaternions","getQuaternion","Map","bonesData","boneData","copy","isLocal","affectRotation","parentIndex","ratio","addGrantRotation","linkIndex","elapsedTime","currentTime","delayTime","audioDuration","elapsed","_shouldStopAudio","stop","_shouldStartAudio","isPlaying","_q","parentBone","affectPosition","q","slerp"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/animation/MMDAnimationHelper.js"],"sourcesContent":["import { Object3D, Vector3, Quaternion, AnimationMixer } from \"three\";\nimport { CCDIKSolver } from \"./CCDIKSolver.js\";\nimport { MMDPhysics } from \"./MMDPhysics.js\";\nclass MMDAnimationHelper {\n  /**\n   * @param {Object} params - (optional)\n   * @param {boolean} params.sync - Whether animation durations of added objects are synched. Default is true.\n   * @param {Number} params.afterglow - Default is 0.0.\n   * @param {boolean} params.resetPhysicsOnLoop - Default is true.\n   */\n  constructor(params = {}) {\n    this.meshes = [];\n    this.camera = null;\n    this.cameraTarget = new Object3D();\n    this.cameraTarget.name = \"target\";\n    this.audio = null;\n    this.audioManager = null;\n    this.objects = /* @__PURE__ */ new WeakMap();\n    this.configuration = {\n      sync: params.sync !== void 0 ? params.sync : true,\n      afterglow: params.afterglow !== void 0 ? params.afterglow : 0,\n      resetPhysicsOnLoop: params.resetPhysicsOnLoop !== void 0 ? params.resetPhysicsOnLoop : true,\n      pmxAnimation: params.pmxAnimation !== void 0 ? params.pmxAnimation : false\n    };\n    this.enabled = {\n      animation: true,\n      ik: true,\n      grant: true,\n      physics: true,\n      cameraAnimation: true\n    };\n    this.onBeforePhysics = function() {\n    };\n    this.sharedPhysics = false;\n    this.masterPhysics = null;\n  }\n  /**\n   * Adds an Three.js Object to helper and setups animation.\n   * The anmation durations of added objects are synched\n   * if this.configuration.sync is true.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @param {Object} params - (optional)\n   * @param {THREE.AnimationClip|Array<THREE.AnimationClip>} params.animation - Only for THREE.SkinnedMesh and THREE.Camera. Default is undefined.\n   * @param {boolean} params.physics - Only for THREE.SkinnedMesh. Default is true.\n   * @param {Integer} params.warmup - Only for THREE.SkinnedMesh and physics is true. Default is 60.\n   * @param {Number} params.unitStep - Only for THREE.SkinnedMesh and physics is true. Default is 1 / 65.\n   * @param {Integer} params.maxStepNum - Only for THREE.SkinnedMesh and physics is true. Default is 3.\n   * @param {Vector3} params.gravity - Only for THREE.SkinnedMesh and physics is true. Default ( 0, - 9.8 * 10, 0 ).\n   * @param {Number} params.delayTime - Only for THREE.Audio. Default is 0.0.\n   * @return {MMDAnimationHelper}\n   */\n  add(object, params = {}) {\n    if (object.isSkinnedMesh) {\n      this._addMesh(object, params);\n    } else if (object.isCamera) {\n      this._setupCamera(object, params);\n    } else if (object.type === \"Audio\") {\n      this._setupAudio(object, params);\n    } else {\n      throw new Error(\n        \"THREE.MMDAnimationHelper.add: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\"\n      );\n    }\n    if (this.configuration.sync)\n      this._syncDuration();\n    return this;\n  }\n  /**\n   * Removes an Three.js Object from helper.\n   *\n   * @param {THREE.SkinnedMesh|THREE.Camera|THREE.Audio} object\n   * @return {MMDAnimationHelper}\n   */\n  remove(object) {\n    if (object.isSkinnedMesh) {\n      this._removeMesh(object);\n    } else if (object.isCamera) {\n      this._clearCamera(object);\n    } else if (object.type === \"Audio\") {\n      this._clearAudio(object);\n    } else {\n      throw new Error(\n        \"THREE.MMDAnimationHelper.remove: accepts only THREE.SkinnedMesh or THREE.Camera or THREE.Audio instance.\"\n      );\n    }\n    if (this.configuration.sync)\n      this._syncDuration();\n    return this;\n  }\n  /**\n   * Updates the animation.\n   *\n   * @param {Number} delta\n   * @return {MMDAnimationHelper}\n   */\n  update(delta) {\n    if (this.audioManager !== null)\n      this.audioManager.control(delta);\n    for (let i = 0; i < this.meshes.length; i++) {\n      this._animateMesh(this.meshes[i], delta);\n    }\n    if (this.sharedPhysics)\n      this._updateSharedPhysics(delta);\n    if (this.camera !== null)\n      this._animateCamera(this.camera, delta);\n    return this;\n  }\n  /**\n   * Changes the pose of SkinnedMesh as VPD specifies.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @param {Object} vpd - VPD content parsed MMDParser\n   * @param {Object} params - (optional)\n   * @param {boolean} params.resetPose - Default is true.\n   * @param {boolean} params.ik - Default is true.\n   * @param {boolean} params.grant - Default is true.\n   * @return {MMDAnimationHelper}\n   */\n  pose(mesh, vpd, params = {}) {\n    if (params.resetPose !== false)\n      mesh.pose();\n    const bones = mesh.skeleton.bones;\n    const boneParams = vpd.bones;\n    const boneNameDictionary = {};\n    for (let i = 0, il = bones.length; i < il; i++) {\n      boneNameDictionary[bones[i].name] = i;\n    }\n    const vector = new Vector3();\n    const quaternion = new Quaternion();\n    for (let i = 0, il = boneParams.length; i < il; i++) {\n      const boneParam = boneParams[i];\n      const boneIndex = boneNameDictionary[boneParam.name];\n      if (boneIndex === void 0)\n        continue;\n      const bone = bones[boneIndex];\n      bone.position.add(vector.fromArray(boneParam.translation));\n      bone.quaternion.multiply(quaternion.fromArray(boneParam.quaternion));\n    }\n    mesh.updateMatrixWorld(true);\n    if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n      const sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n      const ikSolver = params.ik !== false ? this._createCCDIKSolver(mesh) : null;\n      const grantSolver = params.grant !== false ? this.createGrantSolver(mesh) : null;\n      this._animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver);\n    } else {\n      if (params.ik !== false) {\n        this._createCCDIKSolver(mesh).update();\n      }\n      if (params.grant !== false) {\n        this.createGrantSolver(mesh).update();\n      }\n    }\n    return this;\n  }\n  /**\n   * Enabes/Disables an animation feature.\n   *\n   * @param {string} key\n   * @param {boolean} enabled\n   * @return {MMDAnimationHelper}\n   */\n  enable(key, enabled) {\n    if (this.enabled[key] === void 0) {\n      throw new Error(\"THREE.MMDAnimationHelper.enable: unknown key \" + key);\n    }\n    this.enabled[key] = enabled;\n    if (key === \"physics\") {\n      for (let i = 0, il = this.meshes.length; i < il; i++) {\n        this._optimizeIK(this.meshes[i], enabled);\n      }\n    }\n    return this;\n  }\n  /**\n   * Creates an GrantSolver instance.\n   *\n   * @param {THREE.SkinnedMesh} mesh\n   * @return {GrantSolver}\n   */\n  createGrantSolver(mesh) {\n    return new GrantSolver(mesh, mesh.geometry.userData.MMD.grants);\n  }\n  // private methods\n  _addMesh(mesh, params) {\n    if (this.meshes.indexOf(mesh) >= 0) {\n      throw new Error(\"THREE.MMDAnimationHelper._addMesh: SkinnedMesh '\" + mesh.name + \"' has already been added.\");\n    }\n    this.meshes.push(mesh);\n    this.objects.set(mesh, { looped: false });\n    this._setupMeshAnimation(mesh, params.animation);\n    if (params.physics !== false) {\n      this._setupMeshPhysics(mesh, params);\n    }\n    return this;\n  }\n  _setupCamera(camera, params) {\n    if (this.camera === camera) {\n      throw new Error(\"THREE.MMDAnimationHelper._setupCamera: Camera '\" + camera.name + \"' has already been set.\");\n    }\n    if (this.camera)\n      this.clearCamera(this.camera);\n    this.camera = camera;\n    camera.add(this.cameraTarget);\n    this.objects.set(camera, {});\n    if (params.animation !== void 0) {\n      this._setupCameraAnimation(camera, params.animation);\n    }\n    return this;\n  }\n  _setupAudio(audio, params) {\n    if (this.audio === audio) {\n      throw new Error(\"THREE.MMDAnimationHelper._setupAudio: Audio '\" + audio.name + \"' has already been set.\");\n    }\n    if (this.audio)\n      this.clearAudio(this.audio);\n    this.audio = audio;\n    this.audioManager = new AudioManager(audio, params);\n    this.objects.set(this.audioManager, {\n      duration: this.audioManager.duration\n    });\n    return this;\n  }\n  _removeMesh(mesh) {\n    let found = false;\n    let writeIndex = 0;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      if (this.meshes[i] === mesh) {\n        this.objects.delete(mesh);\n        found = true;\n        continue;\n      }\n      this.meshes[writeIndex++] = this.meshes[i];\n    }\n    if (!found) {\n      throw new Error(\n        \"THREE.MMDAnimationHelper._removeMesh: SkinnedMesh '\" + mesh.name + \"' has not been added yet.\"\n      );\n    }\n    this.meshes.length = writeIndex;\n    return this;\n  }\n  _clearCamera(camera) {\n    if (camera !== this.camera) {\n      throw new Error(\"THREE.MMDAnimationHelper._clearCamera: Camera '\" + camera.name + \"' has not been set yet.\");\n    }\n    this.camera.remove(this.cameraTarget);\n    this.objects.delete(this.camera);\n    this.camera = null;\n    return this;\n  }\n  _clearAudio(audio) {\n    if (audio !== this.audio) {\n      throw new Error(\"THREE.MMDAnimationHelper._clearAudio: Audio '\" + audio.name + \"' has not been set yet.\");\n    }\n    this.objects.delete(this.audioManager);\n    this.audio = null;\n    this.audioManager = null;\n    return this;\n  }\n  _setupMeshAnimation(mesh, animation) {\n    const objects = this.objects.get(mesh);\n    if (animation !== void 0) {\n      const animations = Array.isArray(animation) ? animation : [animation];\n      objects.mixer = new AnimationMixer(mesh);\n      for (let i = 0, il = animations.length; i < il; i++) {\n        objects.mixer.clipAction(animations[i]).play();\n      }\n      objects.mixer.addEventListener(\"loop\", function(event) {\n        const tracks = event.action._clip.tracks;\n        if (tracks.length > 0 && tracks[0].name.slice(0, 6) !== \".bones\")\n          return;\n        objects.looped = true;\n      });\n    }\n    objects.ikSolver = this._createCCDIKSolver(mesh);\n    objects.grantSolver = this.createGrantSolver(mesh);\n    return this;\n  }\n  _setupCameraAnimation(camera, animation) {\n    const animations = Array.isArray(animation) ? animation : [animation];\n    const objects = this.objects.get(camera);\n    objects.mixer = new AnimationMixer(camera);\n    for (let i = 0, il = animations.length; i < il; i++) {\n      objects.mixer.clipAction(animations[i]).play();\n    }\n  }\n  _setupMeshPhysics(mesh, params) {\n    const objects = this.objects.get(mesh);\n    if (params.world === void 0 && this.sharedPhysics) {\n      const masterPhysics = this._getMasterPhysics();\n      if (masterPhysics !== null)\n        world = masterPhysics.world;\n    }\n    objects.physics = this._createMMDPhysics(mesh, params);\n    if (objects.mixer && params.animationWarmup !== false) {\n      this._animateMesh(mesh, 0);\n      objects.physics.reset();\n    }\n    objects.physics.warmup(params.warmup !== void 0 ? params.warmup : 60);\n    this._optimizeIK(mesh, true);\n  }\n  _animateMesh(mesh, delta) {\n    const objects = this.objects.get(mesh);\n    const mixer = objects.mixer;\n    const ikSolver = objects.ikSolver;\n    const grantSolver = objects.grantSolver;\n    const physics = objects.physics;\n    const looped = objects.looped;\n    if (mixer && this.enabled.animation) {\n      this._restoreBones(mesh);\n      mixer.update(delta);\n      this._saveBones(mesh);\n      if (this.configuration.pmxAnimation && mesh.geometry.userData.MMD && mesh.geometry.userData.MMD.format === \"pmx\") {\n        if (!objects.sortedBonesData)\n          objects.sortedBonesData = this._sortBoneDataArray(mesh.geometry.userData.MMD.bones.slice());\n        this._animatePMXMesh(\n          mesh,\n          objects.sortedBonesData,\n          ikSolver && this.enabled.ik ? ikSolver : null,\n          grantSolver && this.enabled.grant ? grantSolver : null\n        );\n      } else {\n        if (ikSolver && this.enabled.ik) {\n          mesh.updateMatrixWorld(true);\n          ikSolver.update();\n        }\n        if (grantSolver && this.enabled.grant) {\n          grantSolver.update();\n        }\n      }\n    }\n    if (looped === true && this.enabled.physics) {\n      if (physics && this.configuration.resetPhysicsOnLoop)\n        physics.reset();\n      objects.looped = false;\n    }\n    if (physics && this.enabled.physics && !this.sharedPhysics) {\n      this.onBeforePhysics(mesh);\n      physics.update(delta);\n    }\n  }\n  // Sort bones in order by 1. transformationClass and 2. bone index.\n  // In PMX animation system, bone transformations should be processed\n  // in this order.\n  _sortBoneDataArray(boneDataArray) {\n    return boneDataArray.sort(function(a, b) {\n      if (a.transformationClass !== b.transformationClass) {\n        return a.transformationClass - b.transformationClass;\n      } else {\n        return a.index - b.index;\n      }\n    });\n  }\n  // PMX Animation system is a bit too complex and doesn't great match to\n  // Three.js Animation system. This method attempts to simulate it as much as\n  // possible but doesn't perfectly simulate.\n  // This method is more costly than the regular one so\n  // you are recommended to set constructor parameter \"pmxAnimation: true\"\n  // only if your PMX model animation doesn't work well.\n  // If you need better method you would be required to write your own.\n  _animatePMXMesh(mesh, sortedBonesData, ikSolver, grantSolver) {\n    _quaternionIndex = 0;\n    _grantResultMap.clear();\n    for (let i = 0, il = sortedBonesData.length; i < il; i++) {\n      updateOne(mesh, sortedBonesData[i].index, ikSolver, grantSolver);\n    }\n    mesh.updateMatrixWorld(true);\n    return this;\n  }\n  _animateCamera(camera, delta) {\n    const mixer = this.objects.get(camera).mixer;\n    if (mixer && this.enabled.cameraAnimation) {\n      mixer.update(delta);\n      camera.updateProjectionMatrix();\n      camera.up.set(0, 1, 0);\n      camera.up.applyQuaternion(camera.quaternion);\n      camera.lookAt(this.cameraTarget.position);\n    }\n  }\n  _optimizeIK(mesh, physicsEnabled) {\n    const iks = mesh.geometry.userData.MMD.iks;\n    const bones = mesh.geometry.userData.MMD.bones;\n    for (let i = 0, il = iks.length; i < il; i++) {\n      const ik = iks[i];\n      const links = ik.links;\n      for (let j = 0, jl = links.length; j < jl; j++) {\n        const link = links[j];\n        if (physicsEnabled === true) {\n          link.enabled = bones[link.index].rigidBodyType > 0 ? false : true;\n        } else {\n          link.enabled = true;\n        }\n      }\n    }\n  }\n  _createCCDIKSolver(mesh) {\n    if (CCDIKSolver === void 0) {\n      throw new Error(\"THREE.MMDAnimationHelper: Import CCDIKSolver.\");\n    }\n    return new CCDIKSolver(mesh, mesh.geometry.userData.MMD.iks);\n  }\n  _createMMDPhysics(mesh, params) {\n    if (MMDPhysics === void 0) {\n      throw new Error(\"THREE.MMDPhysics: Import MMDPhysics.\");\n    }\n    return new MMDPhysics(mesh, mesh.geometry.userData.MMD.rigidBodies, mesh.geometry.userData.MMD.constraints, params);\n  }\n  /*\n   * Detects the longest duration and then sets it to them to sync.\n   * TODO: Not to access private properties ( ._actions and ._clip )\n   */\n  _syncDuration() {\n    let max = 0;\n    const objects = this.objects;\n    const meshes = this.meshes;\n    const camera = this.camera;\n    const audioManager = this.audioManager;\n    for (let i = 0, il = meshes.length; i < il; i++) {\n      const mixer = this.objects.get(meshes[i]).mixer;\n      if (mixer === void 0)\n        continue;\n      for (let j = 0; j < mixer._actions.length; j++) {\n        const clip = mixer._actions[j]._clip;\n        if (!objects.has(clip)) {\n          objects.set(clip, {\n            duration: clip.duration\n          });\n        }\n        max = Math.max(max, objects.get(clip).duration);\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== void 0) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          const clip = mixer._actions[i]._clip;\n          if (!objects.has(clip)) {\n            objects.set(clip, {\n              duration: clip.duration\n            });\n          }\n          max = Math.max(max, objects.get(clip).duration);\n        }\n      }\n    }\n    if (audioManager !== null) {\n      max = Math.max(max, objects.get(audioManager).duration);\n    }\n    max += this.configuration.afterglow;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const mixer = this.objects.get(this.meshes[i]).mixer;\n      if (mixer === void 0)\n        continue;\n      for (let j = 0, jl = mixer._actions.length; j < jl; j++) {\n        mixer._actions[j]._clip.duration = max;\n      }\n    }\n    if (camera !== null) {\n      const mixer = this.objects.get(camera).mixer;\n      if (mixer !== void 0) {\n        for (let i = 0, il = mixer._actions.length; i < il; i++) {\n          mixer._actions[i]._clip.duration = max;\n        }\n      }\n    }\n    if (audioManager !== null) {\n      audioManager.duration = max;\n    }\n  }\n  // workaround\n  _updatePropertyMixersBuffer(mesh) {\n    const mixer = this.objects.get(mesh).mixer;\n    const propertyMixers = mixer._bindings;\n    const accuIndex = mixer._accuIndex;\n    for (let i = 0, il = propertyMixers.length; i < il; i++) {\n      const propertyMixer = propertyMixers[i];\n      const buffer = propertyMixer.buffer;\n      const stride = propertyMixer.valueSize;\n      const offset = (accuIndex + 1) * stride;\n      propertyMixer.binding.getValue(buffer, offset);\n    }\n  }\n  /*\n   * Avoiding these two issues by restore/save bones before/after mixer animation.\n   *\n   * 1. PropertyMixer used by AnimationMixer holds cache value in .buffer.\n   *    Calculating IK, Grant, and Physics after mixer animation can break\n   *    the cache coherency.\n   *\n   * 2. Applying Grant two or more times without reset the posing breaks model.\n   */\n  _saveBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const bones = mesh.skeleton.bones;\n    let backupBones = objects.backupBones;\n    if (backupBones === void 0) {\n      backupBones = new Float32Array(bones.length * 7);\n      objects.backupBones = backupBones;\n    }\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.toArray(backupBones, i * 7);\n      bone.quaternion.toArray(backupBones, i * 7 + 3);\n    }\n  }\n  _restoreBones(mesh) {\n    const objects = this.objects.get(mesh);\n    const backupBones = objects.backupBones;\n    if (backupBones === void 0)\n      return;\n    const bones = mesh.skeleton.bones;\n    for (let i = 0, il = bones.length; i < il; i++) {\n      const bone = bones[i];\n      bone.position.fromArray(backupBones, i * 7);\n      bone.quaternion.fromArray(backupBones, i * 7 + 3);\n    }\n  }\n  // experimental\n  _getMasterPhysics() {\n    if (this.masterPhysics !== null)\n      return this.masterPhysics;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const physics = this.meshes[i].physics;\n      if (physics !== void 0 && physics !== null) {\n        this.masterPhysics = physics;\n        return this.masterPhysics;\n      }\n    }\n    return null;\n  }\n  _updateSharedPhysics(delta) {\n    if (this.meshes.length === 0 || !this.enabled.physics || !this.sharedPhysics)\n      return;\n    const physics = this._getMasterPhysics();\n    if (physics === null)\n      return;\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== void 0) {\n        p.updateRigidBodies();\n      }\n    }\n    physics.stepSimulation(delta);\n    for (let i = 0, il = this.meshes.length; i < il; i++) {\n      const p = this.meshes[i].physics;\n      if (p !== null && p !== void 0) {\n        p.updateBones();\n      }\n    }\n  }\n}\nconst _quaternions = [];\nlet _quaternionIndex = 0;\nfunction getQuaternion() {\n  if (_quaternionIndex >= _quaternions.length) {\n    _quaternions.push(new Quaternion());\n  }\n  return _quaternions[_quaternionIndex++];\n}\nconst _grantResultMap = /* @__PURE__ */ new Map();\nfunction updateOne(mesh, boneIndex, ikSolver, grantSolver) {\n  const bones = mesh.skeleton.bones;\n  const bonesData = mesh.geometry.userData.MMD.bones;\n  const boneData = bonesData[boneIndex];\n  const bone = bones[boneIndex];\n  if (_grantResultMap.has(boneIndex))\n    return;\n  const quaternion = getQuaternion();\n  _grantResultMap.set(boneIndex, quaternion.copy(bone.quaternion));\n  if (grantSolver && boneData.grant && !boneData.grant.isLocal && boneData.grant.affectRotation) {\n    const parentIndex = boneData.grant.parentIndex;\n    const ratio = boneData.grant.ratio;\n    if (!_grantResultMap.has(parentIndex)) {\n      updateOne(mesh, parentIndex, ikSolver, grantSolver);\n    }\n    grantSolver.addGrantRotation(bone, _grantResultMap.get(parentIndex), ratio);\n  }\n  if (ikSolver && boneData.ik) {\n    mesh.updateMatrixWorld(true);\n    ikSolver.updateOne(boneData.ik);\n    const links = boneData.ik.links;\n    for (let i = 0, il = links.length; i < il; i++) {\n      const link = links[i];\n      if (link.enabled === false)\n        continue;\n      const linkIndex = link.index;\n      if (_grantResultMap.has(linkIndex)) {\n        _grantResultMap.set(linkIndex, _grantResultMap.get(linkIndex).copy(bones[linkIndex].quaternion));\n      }\n    }\n  }\n  quaternion.copy(bone.quaternion);\n}\nclass AudioManager {\n  /**\n   * @param {THREE.Audio} audio\n   * @param {Object} params - (optional)\n   * @param {Nuumber} params.delayTime\n   */\n  constructor(audio, params = {}) {\n    this.audio = audio;\n    this.elapsedTime = 0;\n    this.currentTime = 0;\n    this.delayTime = params.delayTime !== void 0 ? params.delayTime : 0;\n    this.audioDuration = this.audio.buffer.duration;\n    this.duration = this.audioDuration + this.delayTime;\n  }\n  /**\n   * @param {Number} delta\n   * @return {AudioManager}\n   */\n  control(delta) {\n    this.elapsed += delta;\n    this.currentTime += delta;\n    if (this._shouldStopAudio())\n      this.audio.stop();\n    if (this._shouldStartAudio())\n      this.audio.play();\n    return this;\n  }\n  // private methods\n  _shouldStartAudio() {\n    if (this.audio.isPlaying)\n      return false;\n    while (this.currentTime >= this.duration) {\n      this.currentTime -= this.duration;\n    }\n    if (this.currentTime < this.delayTime)\n      return false;\n    if (this.currentTime - this.delayTime > this.audioDuration)\n      return false;\n    return true;\n  }\n  _shouldStopAudio() {\n    return this.audio.isPlaying && this.currentTime >= this.duration;\n  }\n}\nconst _q = /* @__PURE__ */ new Quaternion();\nclass GrantSolver {\n  constructor(mesh, grants = []) {\n    this.mesh = mesh;\n    this.grants = grants;\n  }\n  /**\n   * Solve all the grant bones\n   * @return {GrantSolver}\n   */\n  update() {\n    const grants = this.grants;\n    for (let i = 0, il = grants.length; i < il; i++) {\n      this.updateOne(grants[i]);\n    }\n    return this;\n  }\n  /**\n   * Solve a grant bone\n   * @param {Object} grant - grant parameter\n   * @return {GrantSolver}\n   */\n  updateOne(grant) {\n    const bones = this.mesh.skeleton.bones;\n    const bone = bones[grant.index];\n    const parentBone = bones[grant.parentIndex];\n    if (grant.isLocal) {\n      if (grant.affectPosition) {\n      }\n      if (grant.affectRotation) {\n      }\n    } else {\n      if (grant.affectPosition) {\n      }\n      if (grant.affectRotation) {\n        this.addGrantRotation(bone, parentBone.quaternion, grant.ratio);\n      }\n    }\n    return this;\n  }\n  addGrantRotation(bone, q, ratio) {\n    _q.set(0, 0, 0, 1);\n    _q.slerp(q, ratio);\n    bone.quaternion.multiply(_q);\n    return this;\n  }\n}\nexport {\n  MMDAnimationHelper\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}