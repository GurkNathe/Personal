{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst _VRButton = class {\n  static createButton(renderer) {\n    let sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const button = document.createElement(\"button\");\n    function showEnterVR() {\n      let currentSession = null;\n      async function onSessionStarted(session) {\n        session.addEventListener(\"end\", onSessionEnded);\n        await renderer.xr.setSession(session);\n        button.textContent = \"EXIT VR\";\n        currentSession = session;\n      }\n      function onSessionEnded() {\n        currentSession.removeEventListener(\"end\", onSessionEnded);\n        button.textContent = \"ENTER VR\";\n        currentSession = null;\n      }\n      button.style.display = \"\";\n      button.style.cursor = \"pointer\";\n      button.style.left = \"calc(50% - 50px)\";\n      button.style.width = \"100px\";\n      button.textContent = \"ENTER VR\";\n      button.onmouseenter = () => {\n        button.style.opacity = \"1.0\";\n      };\n      button.onmouseleave = () => {\n        button.style.opacity = \"0.5\";\n      };\n      button.onclick = () => {\n        var _a;\n        if (currentSession === null) {\n          const optionalFeatures = [sessionInit.optionalFeatures, \"local-floor\", \"bounded-floor\", \"hand-tracking\"].flat().filter(Boolean);\n          (_a = navigator.xr) == null ? void 0 : _a.requestSession(\"immersive-vr\", {\n            ...sessionInit,\n            optionalFeatures\n          }).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n    function disableButton() {\n      button.style.display = \"\";\n      button.style.cursor = \"auto\";\n      button.style.left = \"calc(50% - 75px)\";\n      button.style.width = \"150px\";\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n    function showWebXRNotFound() {\n      disableButton();\n      button.textContent = \"VR NOT SUPPORTED\";\n    }\n    function stylizeElement(element) {\n      element.style.position = \"absolute\";\n      element.style.bottom = \"20px\";\n      element.style.padding = \"12px 6px\";\n      element.style.border = \"1px solid #fff\";\n      element.style.borderRadius = \"4px\";\n      element.style.background = \"rgba(0,0,0,0.1)\";\n      element.style.color = \"#fff\";\n      element.style.font = \"normal 13px sans-serif\";\n      element.style.textAlign = \"center\";\n      element.style.opacity = \"0.5\";\n      element.style.outline = \"none\";\n      element.style.zIndex = \"999\";\n    }\n    if (\"xr\" in navigator) {\n      stylizeElement(button);\n      button.id = \"VRButton\";\n      button.style.display = \"none\";\n      navigator.xr.isSessionSupported(\"immersive-vr\").then(supported => {\n        supported ? showEnterVR() : showWebXRNotFound();\n        if (supported && _VRButton.xrSessionIsGranted) {\n          button.click();\n        }\n      });\n      return button;\n    } else {\n      const message = document.createElement(\"a\");\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, \"https:\");\n        message.innerHTML = \"WEBXR NEEDS HTTPS\";\n      } else {\n        message.href = \"https://immersiveweb.dev/\";\n        message.innerHTML = \"WEBXR NOT AVAILABLE\";\n      }\n      message.style.left = \"calc(50% - 90px)\";\n      message.style.width = \"180px\";\n      message.style.textDecoration = \"none\";\n      stylizeElement(message);\n      return message;\n    }\n  }\n  static registerSessionGrantedListener() {\n    if (\"xr\" in navigator) {\n      ;\n      navigator.xr.addEventListener(\"sessiongranted\", () => {\n        _VRButton.xrSessionIsGranted = true;\n      });\n    }\n  }\n};\nlet VRButton = _VRButton;\n__publicField(VRButton, \"xrSessionIsGranted\", false);\nexport { VRButton };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","_VRButton","createButton","renderer","sessionInit","arguments","length","undefined","button","document","createElement","showEnterVR","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","xr","setSession","textContent","removeEventListener","style","display","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","_a","optionalFeatures","flat","filter","Boolean","navigator","requestSession","then","end","disableButton","showWebXRNotFound","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","xrSessionIsGranted","click","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","registerSessionGrantedListener","VRButton"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/webxr/VRButton.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst _VRButton = class {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement(\"button\");\n    function showEnterVR() {\n      let currentSession = null;\n      async function onSessionStarted(session) {\n        session.addEventListener(\"end\", onSessionEnded);\n        await renderer.xr.setSession(session);\n        button.textContent = \"EXIT VR\";\n        currentSession = session;\n      }\n      function onSessionEnded() {\n        currentSession.removeEventListener(\"end\", onSessionEnded);\n        button.textContent = \"ENTER VR\";\n        currentSession = null;\n      }\n      button.style.display = \"\";\n      button.style.cursor = \"pointer\";\n      button.style.left = \"calc(50% - 50px)\";\n      button.style.width = \"100px\";\n      button.textContent = \"ENTER VR\";\n      button.onmouseenter = () => {\n        button.style.opacity = \"1.0\";\n      };\n      button.onmouseleave = () => {\n        button.style.opacity = \"0.5\";\n      };\n      button.onclick = () => {\n        var _a;\n        if (currentSession === null) {\n          const optionalFeatures = [sessionInit.optionalFeatures, \"local-floor\", \"bounded-floor\", \"hand-tracking\"].flat().filter(Boolean);\n          (_a = navigator.xr) == null ? void 0 : _a.requestSession(\"immersive-vr\", { ...sessionInit, optionalFeatures }).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n    function disableButton() {\n      button.style.display = \"\";\n      button.style.cursor = \"auto\";\n      button.style.left = \"calc(50% - 75px)\";\n      button.style.width = \"150px\";\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n    function showWebXRNotFound() {\n      disableButton();\n      button.textContent = \"VR NOT SUPPORTED\";\n    }\n    function stylizeElement(element) {\n      element.style.position = \"absolute\";\n      element.style.bottom = \"20px\";\n      element.style.padding = \"12px 6px\";\n      element.style.border = \"1px solid #fff\";\n      element.style.borderRadius = \"4px\";\n      element.style.background = \"rgba(0,0,0,0.1)\";\n      element.style.color = \"#fff\";\n      element.style.font = \"normal 13px sans-serif\";\n      element.style.textAlign = \"center\";\n      element.style.opacity = \"0.5\";\n      element.style.outline = \"none\";\n      element.style.zIndex = \"999\";\n    }\n    if (\"xr\" in navigator) {\n      stylizeElement(button);\n      button.id = \"VRButton\";\n      button.style.display = \"none\";\n      navigator.xr.isSessionSupported(\"immersive-vr\").then((supported) => {\n        supported ? showEnterVR() : showWebXRNotFound();\n        if (supported && _VRButton.xrSessionIsGranted) {\n          button.click();\n        }\n      });\n      return button;\n    } else {\n      const message = document.createElement(\"a\");\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, \"https:\");\n        message.innerHTML = \"WEBXR NEEDS HTTPS\";\n      } else {\n        message.href = \"https://immersiveweb.dev/\";\n        message.innerHTML = \"WEBXR NOT AVAILABLE\";\n      }\n      message.style.left = \"calc(50% - 90px)\";\n      message.style.width = \"180px\";\n      message.style.textDecoration = \"none\";\n      stylizeElement(message);\n      return message;\n    }\n  }\n  static registerSessionGrantedListener() {\n    if (\"xr\" in navigator) {\n      ;\n      navigator.xr.addEventListener(\"sessiongranted\", () => {\n        _VRButton.xrSessionIsGranted = true;\n      });\n    }\n  }\n};\nlet VRButton = _VRButton;\n__publicField(VRButton, \"xrSessionIsGranted\", false);\nexport {\n  VRButton\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}