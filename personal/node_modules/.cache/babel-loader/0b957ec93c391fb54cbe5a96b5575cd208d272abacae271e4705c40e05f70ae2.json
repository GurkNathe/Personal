{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Frustum, Vector3 } from \"three\";\nvar frustum = /* @__PURE__ */new Frustum();\nvar center = /* @__PURE__ */new Vector3();\nvar tmpPoint = /* @__PURE__ */new Vector3();\nvar vecNear = /* @__PURE__ */new Vector3();\nvar vecTopLeft = /* @__PURE__ */new Vector3();\nvar vecTopRight = /* @__PURE__ */new Vector3();\nvar vecDownRight = /* @__PURE__ */new Vector3();\nvar vecDownLeft = /* @__PURE__ */new Vector3();\nvar vecFarTopLeft = /* @__PURE__ */new Vector3();\nvar vecFarTopRight = /* @__PURE__ */new Vector3();\nvar vecFarDownRight = /* @__PURE__ */new Vector3();\nvar vecFarDownLeft = /* @__PURE__ */new Vector3();\nvar vectemp1 = /* @__PURE__ */new Vector3();\nvar vectemp2 = /* @__PURE__ */new Vector3();\nvar vectemp3 = /* @__PURE__ */new Vector3();\nvar SelectionBox = /*#__PURE__*/function () {\n  function SelectionBox(camera, scene, deep) {\n    _classCallCheck(this, SelectionBox);\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new Vector3();\n    this.endPoint = new Vector3();\n    this.collection = [];\n    this.deep = deep || Number.MAX_VALUE;\n  }\n  _createClass(SelectionBox, [{\n    key: \"select\",\n    value: function select(startPoint, endPoint) {\n      this.startPoint = startPoint || this.startPoint;\n      this.endPoint = endPoint || this.endPoint;\n      this.collection = [];\n      this.updateFrustum(this.startPoint, this.endPoint);\n      this.searchChildInFrustum(frustum, this.scene);\n      return this.collection;\n    }\n  }, {\n    key: \"updateFrustum\",\n    value: function updateFrustum(startPoint, endPoint) {\n      startPoint = startPoint || this.startPoint;\n      endPoint = endPoint || this.endPoint;\n      if (startPoint.x === endPoint.x) {\n        endPoint.x += Number.EPSILON;\n      }\n      if (startPoint.y === endPoint.y) {\n        endPoint.y += Number.EPSILON;\n      }\n      this.camera.updateProjectionMatrix();\n      this.camera.updateMatrixWorld();\n      if (this.camera.isPerspectiveCamera) {\n        tmpPoint.copy(startPoint);\n        tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n        tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n        endPoint.x = Math.max(startPoint.x, endPoint.x);\n        endPoint.y = Math.min(startPoint.y, endPoint.y);\n        vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n        vecTopLeft.copy(tmpPoint);\n        vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n        vecDownRight.copy(endPoint);\n        vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n        vecTopLeft.unproject(this.camera);\n        vecTopRight.unproject(this.camera);\n        vecDownRight.unproject(this.camera);\n        vecDownLeft.unproject(this.camera);\n        vectemp1.copy(vecTopLeft).sub(vecNear);\n        vectemp2.copy(vecTopRight).sub(vecNear);\n        vectemp3.copy(vecDownRight).sub(vecNear);\n        vectemp1.normalize();\n        vectemp2.normalize();\n        vectemp3.normalize();\n        vectemp1.multiplyScalar(this.deep);\n        vectemp2.multiplyScalar(this.deep);\n        vectemp3.multiplyScalar(this.deep);\n        vectemp1.add(vecNear);\n        vectemp2.add(vecNear);\n        vectemp3.add(vecNear);\n        var planes = frustum.planes;\n        planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n        planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n        planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n        planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n        planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n        planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n        planes[5].normal.multiplyScalar(-1);\n      } else if (this.camera.isOrthographicCamera) {\n        var left = Math.min(startPoint.x, endPoint.x);\n        var top = Math.max(startPoint.y, endPoint.y);\n        var right = Math.max(startPoint.x, endPoint.x);\n        var down = Math.min(startPoint.y, endPoint.y);\n        vecTopLeft.set(left, top, -1);\n        vecTopRight.set(right, top, -1);\n        vecDownRight.set(right, down, -1);\n        vecDownLeft.set(left, down, -1);\n        vecFarTopLeft.set(left, top, 1);\n        vecFarTopRight.set(right, top, 1);\n        vecFarDownRight.set(right, down, 1);\n        vecFarDownLeft.set(left, down, 1);\n        vecTopLeft.unproject(this.camera);\n        vecTopRight.unproject(this.camera);\n        vecDownRight.unproject(this.camera);\n        vecDownLeft.unproject(this.camera);\n        vecFarTopLeft.unproject(this.camera);\n        vecFarTopRight.unproject(this.camera);\n        vecFarDownRight.unproject(this.camera);\n        vecFarDownLeft.unproject(this.camera);\n        var planes = frustum.planes;\n        planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n        planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n        planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n        planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n        planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n        planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n        planes[5].normal.multiplyScalar(-1);\n      } else {\n        console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n      }\n    }\n  }, {\n    key: \"searchChildInFrustum\",\n    value: function searchChildInFrustum(frustum2, object) {\n      if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.material !== void 0) {\n          if (object.geometry.boundingSphere === null) object.geometry.computeBoundingSphere();\n          center.copy(object.geometry.boundingSphere.center);\n          center.applyMatrix4(object.matrixWorld);\n          if (frustum2.containsPoint(center)) {\n            this.collection.push(object);\n          }\n        }\n      }\n      if (object.children.length > 0) {\n        for (var x = 0; x < object.children.length; x++) {\n          this.searchChildInFrustum(frustum2, object.children[x]);\n        }\n      }\n    }\n  }]);\n  return SelectionBox;\n}();\nexport { SelectionBox };","map":{"version":3,"names":["Frustum","Vector3","frustum","center","tmpPoint","vecNear","vecTopLeft","vecTopRight","vecDownRight","vecDownLeft","vecFarTopLeft","vecFarTopRight","vecFarDownRight","vecFarDownLeft","vectemp1","vectemp2","vectemp3","SelectionBox","camera","scene","deep","_classCallCheck","startPoint","endPoint","collection","Number","MAX_VALUE","_createClass","key","value","select","updateFrustum","searchChildInFrustum","x","EPSILON","y","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","copy","Math","min","max","setFromMatrixPosition","matrixWorld","set","unproject","sub","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","left","top","right","down","console","error","frustum2","object","isMesh","isLine","isPoints","material","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","containsPoint","push","children","length"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/interactive/SelectionBox.js"],"sourcesContent":["import { Frustum, Vector3 } from \"three\";\nconst frustum = /* @__PURE__ */ new Frustum();\nconst center = /* @__PURE__ */ new Vector3();\nconst tmpPoint = /* @__PURE__ */ new Vector3();\nconst vecNear = /* @__PURE__ */ new Vector3();\nconst vecTopLeft = /* @__PURE__ */ new Vector3();\nconst vecTopRight = /* @__PURE__ */ new Vector3();\nconst vecDownRight = /* @__PURE__ */ new Vector3();\nconst vecDownLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownLeft = /* @__PURE__ */ new Vector3();\nconst vectemp1 = /* @__PURE__ */ new Vector3();\nconst vectemp2 = /* @__PURE__ */ new Vector3();\nconst vectemp3 = /* @__PURE__ */ new Vector3();\nclass SelectionBox {\n  constructor(camera, scene, deep) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new Vector3();\n    this.endPoint = new Vector3();\n    this.collection = [];\n    this.deep = deep || Number.MAX_VALUE;\n  }\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(frustum, this.scene);\n    return this.collection;\n  }\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint;\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n    if (this.camera.isPerspectiveCamera) {\n      tmpPoint.copy(startPoint);\n      tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n      vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n      vecTopLeft.copy(tmpPoint);\n      vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n      vecDownRight.copy(endPoint);\n      vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vectemp1.copy(vecTopLeft).sub(vecNear);\n      vectemp2.copy(vecTopRight).sub(vecNear);\n      vectemp3.copy(vecDownRight).sub(vecNear);\n      vectemp1.normalize();\n      vectemp2.normalize();\n      vectemp3.normalize();\n      vectemp1.multiplyScalar(this.deep);\n      vectemp2.multiplyScalar(this.deep);\n      vectemp3.multiplyScalar(this.deep);\n      vectemp1.add(vecNear);\n      vectemp2.add(vecNear);\n      vectemp3.add(vecNear);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n      planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n      planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n      planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n      vecTopLeft.set(left, top, -1);\n      vecTopRight.set(right, top, -1);\n      vecDownRight.set(right, down, -1);\n      vecDownLeft.set(left, down, -1);\n      vecFarTopLeft.set(left, top, 1);\n      vecFarTopRight.set(right, top, 1);\n      vecFarDownRight.set(right, down, 1);\n      vecFarDownLeft.set(left, down, 1);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vecFarTopLeft.unproject(this.camera);\n      vecFarTopRight.unproject(this.camera);\n      vecFarDownRight.unproject(this.camera);\n      vecFarDownLeft.unproject(this.camera);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n      planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n      planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n      planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n  searchChildInFrustum(frustum2, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.material !== void 0) {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n        center.copy(object.geometry.boundingSphere.center);\n        center.applyMatrix4(object.matrixWorld);\n        if (frustum2.containsPoint(center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum2, object.children[x]);\n      }\n    }\n  }\n}\nexport {\n  SelectionBox\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}