{"ast":null,"code":"import { WebGLRenderTarget, HalfFloatType } from \"three\";\nimport { SSAARenderPass } from \"./SSAARenderPass.js\";\nclass TAARenderPass extends SSAARenderPass {\n  constructor(scene, camera, clearColor, clearAlpha) {\n    super(scene, camera, clearColor, clearAlpha);\n    this.sampleLevel = 0;\n    this.accumulate = false;\n  }\n  render(renderer, writeBuffer, readBuffer, deltaTime) {\n    if (this.accumulate === false) {\n      super.render(renderer, writeBuffer, readBuffer, deltaTime);\n      this.accumulateIndex = -1;\n      return;\n    }\n    const jitterOffsets = _JitterVectors[5];\n    if (this.sampleRenderTarget === void 0) {\n      this.sampleRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n        type: HalfFloatType\n      });\n      this.sampleRenderTarget.texture.name = \"TAARenderPass.sample\";\n    }\n    if (this.holdRenderTarget === void 0) {\n      this.holdRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n        type: HalfFloatType\n      });\n      this.holdRenderTarget.texture.name = \"TAARenderPass.hold\";\n    }\n    if (this.accumulateIndex === -1) {\n      super.render(renderer, this.holdRenderTarget, readBuffer, deltaTime);\n      this.accumulateIndex = 0;\n    }\n    const autoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    const sampleWeight = 1 / jitterOffsets.length;\n    if (this.accumulateIndex >= 0 && this.accumulateIndex < jitterOffsets.length) {\n      this.copyUniforms[\"opacity\"].value = sampleWeight;\n      this.copyUniforms[\"tDiffuse\"].value = writeBuffer.texture;\n      const numSamplesPerFrame = Math.pow(2, this.sampleLevel);\n      for (let i = 0; i < numSamplesPerFrame; i++) {\n        const j = this.accumulateIndex;\n        const jitterOffset = jitterOffsets[j];\n        if (this.camera.setViewOffset) {\n          this.camera.setViewOffset(readBuffer.width, readBuffer.height, jitterOffset[0] * 0.0625, jitterOffset[1] * 0.0625,\n          // 0.0625 = 1 / 16\n          readBuffer.width, readBuffer.height);\n        }\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        renderer.render(this.scene, this.camera);\n        renderer.setRenderTarget(this.sampleRenderTarget);\n        if (this.accumulateIndex === 0) renderer.clear();\n        this.fsQuad.render(renderer);\n        this.accumulateIndex++;\n        if (this.accumulateIndex >= jitterOffsets.length) break;\n      }\n      if (this.camera.clearViewOffset) this.camera.clearViewOffset();\n    }\n    const accumulationWeight = this.accumulateIndex * sampleWeight;\n    if (accumulationWeight > 0) {\n      this.copyUniforms[\"opacity\"].value = 1;\n      this.copyUniforms[\"tDiffuse\"].value = this.sampleRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    if (accumulationWeight < 1) {\n      this.copyUniforms[\"opacity\"].value = 1 - accumulationWeight;\n      this.copyUniforms[\"tDiffuse\"].value = this.holdRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      if (accumulationWeight === 0) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    renderer.autoClear = autoClear;\n  }\n  dispose() {\n    super.dispose();\n    if (this.sampleRenderTarget !== void 0) this.sampleRenderTarget.dispose();\n    if (this.holdRenderTarget !== void 0) this.holdRenderTarget.dispose();\n  }\n}\nconst _JitterVectors = [[[0, 0]], [[4, 4], [-4, -4]], [[-2, -6], [6, -2], [-6, 2], [2, 6]], [[1, -3], [-1, 3], [5, 1], [-3, -5], [-5, 5], [-7, -1], [3, 7], [7, -7]], [[1, 1], [-1, -3], [-3, 2], [4, -1], [-5, -2], [2, 5], [5, 3], [3, -5], [-2, 6], [0, -7], [-4, -6], [-6, 4], [-8, 0], [7, -4], [6, 7], [-7, -8]], [[-4, -7], [-7, -5], [-3, -5], [-5, -4], [-1, -4], [-2, -2], [-6, -1], [-4, 0], [-7, 1], [-1, 2], [-6, 3], [-3, 3], [-7, 6], [-3, 6], [-5, 7], [-1, 7], [5, -7], [1, -6], [6, -5], [4, -4], [2, -3], [7, -2], [1, -1], [4, -1], [2, 1], [6, 2], [0, 4], [4, 4], [2, 5], [7, 5], [5, 6], [3, 7]]];\nexport { TAARenderPass };","map":{"version":3,"names":["WebGLRenderTarget","HalfFloatType","SSAARenderPass","TAARenderPass","constructor","scene","camera","clearColor","clearAlpha","sampleLevel","accumulate","render","renderer","writeBuffer","readBuffer","deltaTime","accumulateIndex","jitterOffsets","_JitterVectors","sampleRenderTarget","width","height","type","texture","name","holdRenderTarget","autoClear","sampleWeight","length","copyUniforms","value","numSamplesPerFrame","Math","pow","i","j","jitterOffset","setViewOffset","setRenderTarget","clear","fsQuad","clearViewOffset","accumulationWeight","dispose"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/TAARenderPass.js"],"sourcesContent":["import { WebGLRenderTarget, HalfFloatType } from \"three\";\nimport { SSAARenderPass } from \"./SSAARenderPass.js\";\nclass TAARenderPass extends SSAARenderPass {\n  constructor(scene, camera, clearColor, clearAlpha) {\n    super(scene, camera, clearColor, clearAlpha);\n    this.sampleLevel = 0;\n    this.accumulate = false;\n  }\n  render(renderer, writeBuffer, readBuffer, deltaTime) {\n    if (this.accumulate === false) {\n      super.render(renderer, writeBuffer, readBuffer, deltaTime);\n      this.accumulateIndex = -1;\n      return;\n    }\n    const jitterOffsets = _JitterVectors[5];\n    if (this.sampleRenderTarget === void 0) {\n      this.sampleRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, { type: HalfFloatType });\n      this.sampleRenderTarget.texture.name = \"TAARenderPass.sample\";\n    }\n    if (this.holdRenderTarget === void 0) {\n      this.holdRenderTarget = new WebGLRenderTarget(readBuffer.width, readBuffer.height, { type: HalfFloatType });\n      this.holdRenderTarget.texture.name = \"TAARenderPass.hold\";\n    }\n    if (this.accumulateIndex === -1) {\n      super.render(renderer, this.holdRenderTarget, readBuffer, deltaTime);\n      this.accumulateIndex = 0;\n    }\n    const autoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    const sampleWeight = 1 / jitterOffsets.length;\n    if (this.accumulateIndex >= 0 && this.accumulateIndex < jitterOffsets.length) {\n      this.copyUniforms[\"opacity\"].value = sampleWeight;\n      this.copyUniforms[\"tDiffuse\"].value = writeBuffer.texture;\n      const numSamplesPerFrame = Math.pow(2, this.sampleLevel);\n      for (let i = 0; i < numSamplesPerFrame; i++) {\n        const j = this.accumulateIndex;\n        const jitterOffset = jitterOffsets[j];\n        if (this.camera.setViewOffset) {\n          this.camera.setViewOffset(\n            readBuffer.width,\n            readBuffer.height,\n            jitterOffset[0] * 0.0625,\n            jitterOffset[1] * 0.0625,\n            // 0.0625 = 1 / 16\n            readBuffer.width,\n            readBuffer.height\n          );\n        }\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        renderer.render(this.scene, this.camera);\n        renderer.setRenderTarget(this.sampleRenderTarget);\n        if (this.accumulateIndex === 0)\n          renderer.clear();\n        this.fsQuad.render(renderer);\n        this.accumulateIndex++;\n        if (this.accumulateIndex >= jitterOffsets.length)\n          break;\n      }\n      if (this.camera.clearViewOffset)\n        this.camera.clearViewOffset();\n    }\n    const accumulationWeight = this.accumulateIndex * sampleWeight;\n    if (accumulationWeight > 0) {\n      this.copyUniforms[\"opacity\"].value = 1;\n      this.copyUniforms[\"tDiffuse\"].value = this.sampleRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    if (accumulationWeight < 1) {\n      this.copyUniforms[\"opacity\"].value = 1 - accumulationWeight;\n      this.copyUniforms[\"tDiffuse\"].value = this.holdRenderTarget.texture;\n      renderer.setRenderTarget(writeBuffer);\n      if (accumulationWeight === 0)\n        renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    renderer.autoClear = autoClear;\n  }\n  dispose() {\n    super.dispose();\n    if (this.sampleRenderTarget !== void 0)\n      this.sampleRenderTarget.dispose();\n    if (this.holdRenderTarget !== void 0)\n      this.holdRenderTarget.dispose();\n  }\n}\nconst _JitterVectors = [\n  [\n    [0, 0]\n  ],\n  [\n    [4, 4],\n    [-4, -4]\n  ],\n  [\n    [-2, -6],\n    [6, -2],\n    [-6, 2],\n    [2, 6]\n  ],\n  [\n    [1, -3],\n    [-1, 3],\n    [5, 1],\n    [-3, -5],\n    [-5, 5],\n    [-7, -1],\n    [3, 7],\n    [7, -7]\n  ],\n  [\n    [1, 1],\n    [-1, -3],\n    [-3, 2],\n    [4, -1],\n    [-5, -2],\n    [2, 5],\n    [5, 3],\n    [3, -5],\n    [-2, 6],\n    [0, -7],\n    [-4, -6],\n    [-6, 4],\n    [-8, 0],\n    [7, -4],\n    [6, 7],\n    [-7, -8]\n  ],\n  [\n    [-4, -7],\n    [-7, -5],\n    [-3, -5],\n    [-5, -4],\n    [-1, -4],\n    [-2, -2],\n    [-6, -1],\n    [-4, 0],\n    [-7, 1],\n    [-1, 2],\n    [-6, 3],\n    [-3, 3],\n    [-7, 6],\n    [-3, 6],\n    [-5, 7],\n    [-1, 7],\n    [5, -7],\n    [1, -6],\n    [6, -5],\n    [4, -4],\n    [2, -3],\n    [7, -2],\n    [1, -1],\n    [4, -1],\n    [2, 1],\n    [6, 2],\n    [0, 4],\n    [4, 4],\n    [2, 5],\n    [7, 5],\n    [5, 6],\n    [3, 7]\n  ]\n];\nexport {\n  TAARenderPass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}