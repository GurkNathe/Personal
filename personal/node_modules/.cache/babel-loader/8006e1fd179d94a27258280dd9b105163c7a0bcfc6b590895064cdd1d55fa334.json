{"ast":null,"code":"import { Vector3 } from \"three\";\nvar ColorCorrectionShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    powRGB: {\n      value: /* @__PURE__ */new Vector3(2, 2, 2)\n    },\n    mulRGB: {\n      value: /* @__PURE__ */new Vector3(1, 1, 1)\n    },\n    addRGB: {\n      value: /* @__PURE__ */new Vector3(0, 0, 0)\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 powRGB;\", \"uniform vec3 mulRGB;\", \"uniform vec3 addRGB;\", \"varying vec2 vUv;\", \"void main() {\", \"\tgl_FragColor = texture2D( tDiffuse, vUv );\", \"\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\", \"}\"].join(\"\\n\")\n};\nexport { ColorCorrectionShader };","map":{"version":3,"names":["Vector3","ColorCorrectionShader","uniforms","tDiffuse","value","powRGB","mulRGB","addRGB","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/ColorCorrectionShader.js"],"sourcesContent":["import { Vector3 } from \"three\";\nconst ColorCorrectionShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    powRGB: { value: /* @__PURE__ */ new Vector3(2, 2, 2) },\n    mulRGB: { value: /* @__PURE__ */ new Vector3(1, 1, 1) },\n    addRGB: { value: /* @__PURE__ */ new Vector3(0, 0, 0) }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform vec3 powRGB;\",\n    \"uniform vec3 mulRGB;\",\n    \"uniform vec3 addRGB;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tgl_FragColor = texture2D( tDiffuse, vUv );\",\n    \"\tgl_FragColor.rgb = mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  ColorCorrectionShader\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,IAAMC,qBAAqB,GAAG;EAC5BC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IACzBC,MAAM,EAAE;MAAED,KAAK,EAAE,eAAgB,IAAIJ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAC;IACvDM,MAAM,EAAE;MAAEF,KAAK,EAAE,eAAgB,IAAIJ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAC;IACvDO,MAAM,EAAE;MAAEH,KAAK,EAAE,eAAgB,IAAIJ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;EACxD,CAAC;EACDQ,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,6BAA6B,EAC7B,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,mBAAmB,EACnB,eAAe,EACf,6CAA6C,EAC7C,4EAA4E,EAC5E,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACER,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}