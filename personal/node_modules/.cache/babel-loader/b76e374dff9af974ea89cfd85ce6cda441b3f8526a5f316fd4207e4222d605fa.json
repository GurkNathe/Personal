{"ast":null,"code":"import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from \"three\";\nimport { BokehDepthShader, BokehShader2 } from \"../shaders/BokehShader2.js\";\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = \"CinematicCamera\";\n    this.postprocessing = {\n      enabled: true\n    };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms[\"mNear\"].value = near;\n    this.materialDepth.uniforms[\"mFar\"].value = far;\n    this.setLens();\n    this.initPostProcessing();\n  }\n  // providing fnumber and coc(Circle of Confusion) as extra arguments\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    if (focalLength === void 0) focalLength = 35;\n    if (filmGauge !== void 0) this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    if (fNumber === void 0) fNumber = 8;\n    if (coc === void 0) coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc;\n    this.aperture = focalLength / this.fNumber;\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  // function for focusing at a distance from the camera\n  focusAt(focusDistance) {\n    if (focusDistance === void 0) focusDistance = 20;\n    const focalLength = this.getFocalLength();\n    this.focus = focusDistance;\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n    this.depthOfField = this.farPoint - this.nearPoint;\n    if (this.depthOfField < 0) this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = this.ldistance;\n  }\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, -1e4, 1e4);\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms[\"tColor\"].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms[\"tDepth\"].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms[\"manualdof\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"shaderFocus\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"fstop\"].value = 2.8;\n      this.postprocessing.bokeh_uniforms[\"showFocus\"].value = 1;\n      this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = 0.1;\n      this.postprocessing.bokeh_uniforms[\"znear\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"zfar\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"textureWidth\"].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms[\"textureHeight\"].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(new PlaneGeometry(window.innerWidth, window.innerHeight), this.postprocessing.materialBokeh);\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n}\nexport { CinematicCamera };","map":{"version":3,"names":["PerspectiveCamera","ShaderMaterial","Scene","OrthographicCamera","WebGLRenderTarget","UniformsUtils","Mesh","PlaneGeometry","BokehDepthShader","BokehShader2","CinematicCamera","constructor","fov","aspect","near","far","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","uniforms","vertexShader","fragmentShader","value","setLens","initPostProcessing","focalLength","filmGauge","fNumber","coc","setFocalLength","aperture","hyperFocal","linearize","depth","zfar","znear","smoothstep","x","saturate","Math","max","min","focusAt","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","ldistance","bokeh_uniforms","scene","camera","window","innerWidth","innerHeight","add","rtTextureDepth","rtTextureColor","bokeh_shader","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","position","z","renderCinematic","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","render"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/cameras/CinematicCamera.js"],"sourcesContent":["import { PerspectiveCamera, ShaderMaterial, Scene, OrthographicCamera, WebGLRenderTarget, UniformsUtils, Mesh, PlaneGeometry } from \"three\";\nimport { BokehDepthShader, BokehShader2 } from \"../shaders/BokehShader2.js\";\nclass CinematicCamera extends PerspectiveCamera {\n  constructor(fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.type = \"CinematicCamera\";\n    this.postprocessing = { enabled: true };\n    this.shaderSettings = {\n      rings: 3,\n      samples: 4\n    };\n    const depthShader = BokehDepthShader;\n    this.materialDepth = new ShaderMaterial({\n      uniforms: depthShader.uniforms,\n      vertexShader: depthShader.vertexShader,\n      fragmentShader: depthShader.fragmentShader\n    });\n    this.materialDepth.uniforms[\"mNear\"].value = near;\n    this.materialDepth.uniforms[\"mFar\"].value = far;\n    this.setLens();\n    this.initPostProcessing();\n  }\n  // providing fnumber and coc(Circle of Confusion) as extra arguments\n  setLens(focalLength, filmGauge, fNumber, coc) {\n    if (focalLength === void 0)\n      focalLength = 35;\n    if (filmGauge !== void 0)\n      this.filmGauge = filmGauge;\n    this.setFocalLength(focalLength);\n    if (fNumber === void 0)\n      fNumber = 8;\n    if (coc === void 0)\n      coc = 0.019;\n    this.fNumber = fNumber;\n    this.coc = coc;\n    this.aperture = focalLength / this.fNumber;\n    this.hyperFocal = focalLength * focalLength / (this.aperture * this.coc);\n  }\n  linearize(depth) {\n    const zfar = this.far;\n    const znear = this.near;\n    return -zfar * znear / (depth * (zfar - znear) - zfar);\n  }\n  smoothstep(near, far, depth) {\n    const x = this.saturate((depth - near) / (far - near));\n    return x * x * (3 - 2 * x);\n  }\n  saturate(x) {\n    return Math.max(0, Math.min(1, x));\n  }\n  // function for focusing at a distance from the camera\n  focusAt(focusDistance) {\n    if (focusDistance === void 0)\n      focusDistance = 20;\n    const focalLength = this.getFocalLength();\n    this.focus = focusDistance;\n    this.nearPoint = this.hyperFocal * this.focus / (this.hyperFocal + (this.focus - focalLength));\n    this.farPoint = this.hyperFocal * this.focus / (this.hyperFocal - (this.focus - focalLength));\n    this.depthOfField = this.farPoint - this.nearPoint;\n    if (this.depthOfField < 0)\n      this.depthOfField = 0;\n    this.sdistance = this.smoothstep(this.near, this.far, this.focus);\n    this.ldistance = this.linearize(1 - this.sdistance);\n    this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = this.ldistance;\n  }\n  initPostProcessing() {\n    if (this.postprocessing.enabled) {\n      this.postprocessing.scene = new Scene();\n      this.postprocessing.camera = new OrthographicCamera(\n        window.innerWidth / -2,\n        window.innerWidth / 2,\n        window.innerHeight / 2,\n        window.innerHeight / -2,\n        -1e4,\n        1e4\n      );\n      this.postprocessing.scene.add(this.postprocessing.camera);\n      this.postprocessing.rtTextureDepth = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.postprocessing.rtTextureColor = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      const bokeh_shader = BokehShader2;\n      this.postprocessing.bokeh_uniforms = UniformsUtils.clone(bokeh_shader.uniforms);\n      this.postprocessing.bokeh_uniforms[\"tColor\"].value = this.postprocessing.rtTextureColor.texture;\n      this.postprocessing.bokeh_uniforms[\"tDepth\"].value = this.postprocessing.rtTextureDepth.texture;\n      this.postprocessing.bokeh_uniforms[\"manualdof\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"shaderFocus\"].value = 0;\n      this.postprocessing.bokeh_uniforms[\"fstop\"].value = 2.8;\n      this.postprocessing.bokeh_uniforms[\"showFocus\"].value = 1;\n      this.postprocessing.bokeh_uniforms[\"focalDepth\"].value = 0.1;\n      this.postprocessing.bokeh_uniforms[\"znear\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"zfar\"].value = this.near;\n      this.postprocessing.bokeh_uniforms[\"textureWidth\"].value = window.innerWidth;\n      this.postprocessing.bokeh_uniforms[\"textureHeight\"].value = window.innerHeight;\n      this.postprocessing.materialBokeh = new ShaderMaterial({\n        uniforms: this.postprocessing.bokeh_uniforms,\n        vertexShader: bokeh_shader.vertexShader,\n        fragmentShader: bokeh_shader.fragmentShader,\n        defines: {\n          RINGS: this.shaderSettings.rings,\n          SAMPLES: this.shaderSettings.samples,\n          DEPTH_PACKING: 1\n        }\n      });\n      this.postprocessing.quad = new Mesh(\n        new PlaneGeometry(window.innerWidth, window.innerHeight),\n        this.postprocessing.materialBokeh\n      );\n      this.postprocessing.quad.position.z = -500;\n      this.postprocessing.scene.add(this.postprocessing.quad);\n    }\n  }\n  renderCinematic(scene, renderer) {\n    if (this.postprocessing.enabled) {\n      const currentRenderTarget = renderer.getRenderTarget();\n      renderer.clear();\n      scene.overrideMaterial = null;\n      renderer.setRenderTarget(this.postprocessing.rtTextureColor);\n      renderer.clear();\n      renderer.render(scene, this);\n      scene.overrideMaterial = this.materialDepth;\n      renderer.setRenderTarget(this.postprocessing.rtTextureDepth);\n      renderer.clear();\n      renderer.render(scene, this);\n      renderer.setRenderTarget(null);\n      renderer.render(this.postprocessing.scene, this.postprocessing.camera);\n      renderer.setRenderTarget(currentRenderTarget);\n    }\n  }\n}\nexport {\n  CinematicCamera\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}