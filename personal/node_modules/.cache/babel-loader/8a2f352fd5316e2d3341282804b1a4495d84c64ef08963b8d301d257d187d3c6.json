{"ast":null,"code":"import _regeneratorRuntime from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { runMultipleHook, runSingleHook } from '../components/hooks.js';\nimport { createError } from '../errors.js';\nimport { innerInsertMultiple, insert } from './insert.js';\nimport { remove, removeMultiple } from './remove.js';\nexport function update(_x, _x2, _x3, _x4, _x5) {\n  return _update.apply(this, arguments);\n}\nfunction _update() {\n  _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(orama, id, doc, language, skipHooks) {\n    var newId;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(!skipHooks && orama.beforeUpdate)) {\n            _context.next = 3;\n            break;\n          }\n          _context.next = 3;\n          return runSingleHook(orama.beforeUpdate, orama, id);\n        case 3:\n          _context.next = 5;\n          return remove(orama, id, language, skipHooks);\n        case 5:\n          _context.next = 7;\n          return insert(orama, doc, language, skipHooks);\n        case 7:\n          newId = _context.sent;\n          if (!(!skipHooks && orama.afterUpdate)) {\n            _context.next = 11;\n            break;\n          }\n          _context.next = 11;\n          return runSingleHook(orama.afterUpdate, orama, newId);\n        case 11:\n          return _context.abrupt(\"return\", newId);\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _update.apply(this, arguments);\n}\nexport function updateMultiple(_x6, _x7, _x8, _x9, _x10, _x11) {\n  return _updateMultiple.apply(this, arguments);\n}\nfunction _updateMultiple() {\n  _updateMultiple = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(orama, ids, docs, batchSize, language, skipHooks) {\n    var docsLength, i, errorProperty, newIds;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (skipHooks) {\n            _context2.next = 3;\n            break;\n          }\n          _context2.next = 3;\n          return runMultipleHook(orama.beforeMultipleUpdate, orama, ids);\n        case 3:\n          // Validate all documents before the insertion\n          docsLength = docs.length;\n          i = 0;\n        case 5:\n          if (!(i < docsLength)) {\n            _context2.next = 14;\n            break;\n          }\n          _context2.next = 8;\n          return orama.validateSchema(docs[i], orama.schema);\n        case 8:\n          errorProperty = _context2.sent;\n          if (!errorProperty) {\n            _context2.next = 11;\n            break;\n          }\n          throw createError('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        case 11:\n          i++;\n          _context2.next = 5;\n          break;\n        case 14:\n          _context2.next = 16;\n          return removeMultiple(orama, ids, batchSize, language, skipHooks);\n        case 16:\n          _context2.next = 18;\n          return innerInsertMultiple(orama, docs, batchSize, language, skipHooks);\n        case 18:\n          newIds = _context2.sent;\n          if (skipHooks) {\n            _context2.next = 22;\n            break;\n          }\n          _context2.next = 22;\n          return runMultipleHook(orama.afterMultipleUpdate, orama, newIds);\n        case 22:\n          return _context2.abrupt(\"return\", newIds);\n        case 23:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _updateMultiple.apply(this, arguments);\n}","map":{"version":3,"names":["runMultipleHook","runSingleHook","createError","innerInsertMultiple","insert","remove","removeMultiple","update","_x","_x2","_x3","_x4","_x5","_update","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orama","id","doc","language","skipHooks","newId","wrap","_callee$","_context","prev","next","beforeUpdate","sent","afterUpdate","abrupt","stop","updateMultiple","_x6","_x7","_x8","_x9","_x10","_x11","_updateMultiple","_callee2","ids","docs","batchSize","docsLength","i","errorProperty","newIds","_callee2$","_context2","beforeMultipleUpdate","length","validateSchema","schema","afterMultipleUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.0.3/node_modules/@orama/orama/src/methods/update.ts"],"sourcesContent":["import { runMultipleHook, runSingleHook } from '../components/hooks.js'\nimport { createError } from '../errors.js'\nimport { Document, Orama } from '../types.js'\nimport { innerInsertMultiple, insert } from './insert.js'\nimport { remove, removeMultiple } from './remove.js'\n\nexport async function update(\n  orama: Orama,\n  id: string,\n  doc: Document,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string> {\n  if (!skipHooks && orama.beforeUpdate) {\n    await runSingleHook(orama.beforeUpdate, orama, id)\n  }\n\n  await remove(orama, id, language, skipHooks)\n  const newId = await insert(orama, doc, language, skipHooks)\n\n  if (!skipHooks && orama.afterUpdate) {\n    await runSingleHook(orama.afterUpdate, orama, newId)\n  }\n\n  return newId\n}\n\nexport async function updateMultiple(\n  orama: Orama,\n  ids: string[],\n  docs: Document[],\n  batchSize?: number,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string[]> {\n  if (!skipHooks) {\n    await runMultipleHook(orama.beforeMultipleUpdate, orama, ids)\n  }\n\n  // Validate all documents before the insertion\n  const docsLength = docs.length\n  for (let i = 0; i < docsLength; i++) {\n    const errorProperty = await orama.validateSchema(docs[i], orama.schema)\n    if (errorProperty) {\n      throw createError('SCHEMA_VALIDATION_FAILURE', errorProperty)\n    }\n  }\n\n  await removeMultiple(orama, ids, batchSize, language, skipHooks)\n  const newIds = await innerInsertMultiple(orama, docs, batchSize, language, skipHooks)\n\n  if (!skipHooks) {\n    await runMultipleHook(orama.afterMultipleUpdate, orama, newIds)\n  }\n\n  return newIds\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}