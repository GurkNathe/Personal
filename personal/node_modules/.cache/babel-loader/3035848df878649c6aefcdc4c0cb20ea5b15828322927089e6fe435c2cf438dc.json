{"ast":null,"code":"class LWO3Parser {\n  constructor(IFFParser) {\n    this.IFF = IFFParser;\n  }\n  parseBlock() {\n    this.IFF.debugger.offset = this.IFF.reader.offset;\n    this.IFF.debugger.closeForms();\n    const blockID = this.IFF.reader.getIDTag();\n    const length = this.IFF.reader.getUint32();\n    this.IFF.debugger.dataOffset = this.IFF.reader.offset;\n    this.IFF.debugger.length = length;\n    switch (blockID) {\n      case \"FORM\":\n        this.IFF.parseForm(length);\n        break;\n      case \"ICON\":\n      case \"VMPA\":\n      case \"BBOX\":\n      case \"NORM\":\n      case \"PRE \":\n      case \"POST\":\n      case \"KEY \":\n      case \"SPAN\":\n      case \"TIME\":\n      case \"CLRS\":\n      case \"CLRA\":\n      case \"FILT\":\n      case \"DITH\":\n      case \"CONT\":\n      case \"BRIT\":\n      case \"SATR\":\n      case \"HUE \":\n      case \"GAMM\":\n      case \"NEGA\":\n      case \"IFLT\":\n      case \"PFLT\":\n      case \"PROJ\":\n      case \"AXIS\":\n      case \"AAST\":\n      case \"PIXB\":\n      case \"STCK\":\n      case \"VALU\":\n      case \"PNAM\":\n      case \"INAM\":\n      case \"GRST\":\n      case \"GREN\":\n      case \"GRPT\":\n      case \"FKEY\":\n      case \"IKEY\":\n      case \"CSYS\":\n      case \"OPAQ\":\n      case \"CMAP\":\n      case \"NLOC\":\n      case \"NZOM\":\n      case \"NVER\":\n      case \"NSRV\":\n      case \"NCRD\":\n      case \"NMOD\":\n      case \"NSEL\":\n      case \"NPRW\":\n      case \"NPLA\":\n      case \"VERS\":\n      case \"ENUM\":\n      case \"TAG \":\n      case \"CGMD\":\n      case \"CGTY\":\n      case \"CGST\":\n      case \"CGEN\":\n      case \"CGTS\":\n      case \"CGTE\":\n      case \"OSMP\":\n      case \"OMDE\":\n      case \"OUTR\":\n      case \"FLAG\":\n      case \"TRNL\":\n      case \"SHRP\":\n      case \"RFOP\":\n      case \"RSAN\":\n      case \"TROP\":\n      case \"RBLR\":\n      case \"TBLR\":\n      case \"CLRH\":\n      case \"CLRF\":\n      case \"ADTR\":\n      case \"GLOW\":\n      case \"LINE\":\n      case \"ALPH\":\n      case \"VCOL\":\n      case \"ENAB\":\n        this.IFF.debugger.skipped = true;\n        this.IFF.reader.skip(length);\n        break;\n      case \"IPIX\":\n      case \"IMIP\":\n      case \"IMOD\":\n      case \"AMOD\":\n      case \"IINV\":\n      case \"INCR\":\n      case \"IAXS\":\n      case \"IFOT\":\n      case \"ITIM\":\n      case \"IWRL\":\n      case \"IUTI\":\n      case \"IINX\":\n      case \"IINY\":\n      case \"IINZ\":\n      case \"IREF\":\n        if (length === 4) this.IFF.currentNode[blockID] = this.IFF.reader.getInt32();else this.IFF.reader.skip(length);\n        break;\n      case \"OTAG\":\n        this.IFF.parseObjectTag();\n        break;\n      case \"LAYR\":\n        this.IFF.parseLayer(length);\n        break;\n      case \"PNTS\":\n        this.IFF.parsePoints(length);\n        break;\n      case \"VMAP\":\n        this.IFF.parseVertexMapping(length);\n        break;\n      case \"POLS\":\n        this.IFF.parsePolygonList(length);\n        break;\n      case \"TAGS\":\n        this.IFF.parseTagStrings(length);\n        break;\n      case \"PTAG\":\n        this.IFF.parsePolygonTagMapping(length);\n        break;\n      case \"VMAD\":\n        this.IFF.parseVertexMapping(length, true);\n        break;\n      case \"DESC\":\n        this.IFF.currentForm.description = this.IFF.reader.getString();\n        break;\n      case \"TEXT\":\n      case \"CMNT\":\n      case \"NCOM\":\n        this.IFF.currentForm.comment = this.IFF.reader.getString();\n        break;\n      case \"NAME\":\n        this.IFF.currentForm.channelName = this.IFF.reader.getString();\n        break;\n      case \"WRAP\":\n        this.IFF.currentForm.wrap = {\n          w: this.IFF.reader.getUint16(),\n          h: this.IFF.reader.getUint16()\n        };\n        break;\n      case \"IMAG\":\n        const index = this.IFF.reader.getVariableLengthIndex();\n        this.IFF.currentForm.imageIndex = index;\n        break;\n      case \"OREF\":\n        this.IFF.currentForm.referenceObject = this.IFF.reader.getString();\n        break;\n      case \"ROID\":\n        this.IFF.currentForm.referenceObjectID = this.IFF.reader.getUint32();\n        break;\n      case \"SSHN\":\n        this.IFF.currentSurface.surfaceShaderName = this.IFF.reader.getString();\n        break;\n      case \"AOVN\":\n        this.IFF.currentSurface.surfaceCustomAOVName = this.IFF.reader.getString();\n        break;\n      case \"NSTA\":\n        this.IFF.currentForm.disabled = this.IFF.reader.getUint16();\n        break;\n      case \"NRNM\":\n        this.IFF.currentForm.realName = this.IFF.reader.getString();\n        break;\n      case \"NNME\":\n        this.IFF.currentForm.refName = this.IFF.reader.getString();\n        this.IFF.currentSurface.nodes[this.IFF.currentForm.refName] = this.IFF.currentForm;\n        break;\n      case \"INME\":\n        if (!this.IFF.currentForm.nodeName) this.IFF.currentForm.nodeName = [];\n        this.IFF.currentForm.nodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINN\":\n        if (!this.IFF.currentForm.inputNodeName) this.IFF.currentForm.inputNodeName = [];\n        this.IFF.currentForm.inputNodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINM\":\n        if (!this.IFF.currentForm.inputName) this.IFF.currentForm.inputName = [];\n        this.IFF.currentForm.inputName.push(this.IFF.reader.getString());\n        break;\n      case \"IONM\":\n        if (!this.IFF.currentForm.inputOutputName) this.IFF.currentForm.inputOutputName = [];\n        this.IFF.currentForm.inputOutputName.push(this.IFF.reader.getString());\n        break;\n      case \"FNAM\":\n        this.IFF.currentForm.fileName = this.IFF.reader.getString();\n        break;\n      case \"CHAN\":\n        if (length === 4) this.IFF.currentForm.textureChannel = this.IFF.reader.getIDTag();else this.IFF.reader.skip(length);\n        break;\n      case \"SMAN\":\n        const maxSmoothingAngle = this.IFF.reader.getFloat32();\n        this.IFF.currentSurface.attributes.smooth = maxSmoothingAngle < 0 ? false : true;\n        break;\n      case \"COLR\":\n        this.IFF.currentSurface.attributes.Color = {\n          value: this.IFF.reader.getFloat32Array(3)\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"LUMI\":\n        this.IFF.currentSurface.attributes.Luminosity = {\n          value: this.IFF.reader.getFloat32()\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"SPEC\":\n        this.IFF.currentSurface.attributes.Specular = {\n          value: this.IFF.reader.getFloat32()\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"DIFF\":\n        this.IFF.currentSurface.attributes.Diffuse = {\n          value: this.IFF.reader.getFloat32()\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"REFL\":\n        this.IFF.currentSurface.attributes.Reflection = {\n          value: this.IFF.reader.getFloat32()\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"GLOS\":\n        this.IFF.currentSurface.attributes.Glossiness = {\n          value: this.IFF.reader.getFloat32()\n        };\n        this.IFF.reader.skip(2);\n        break;\n      case \"TRAN\":\n        this.IFF.currentSurface.attributes.opacity = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"BUMP\":\n        this.IFF.currentSurface.attributes.bumpStrength = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"SIDE\":\n        this.IFF.currentSurface.attributes.side = this.IFF.reader.getUint16();\n        break;\n      case \"RIMG\":\n        this.IFF.currentSurface.attributes.reflectionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"RIND\":\n        this.IFF.currentSurface.attributes.refractiveIndex = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"TIMG\":\n        this.IFF.currentSurface.attributes.refractionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"IMAP\":\n        this.IFF.currentSurface.attributes.imageMapIndex = this.IFF.reader.getUint32();\n        break;\n      case \"IUVI\":\n        this.IFF.currentNode.UVChannel = this.IFF.reader.getString(length);\n        break;\n      case \"IUTL\":\n        this.IFF.currentNode.widthWrappingMode = this.IFF.reader.getUint32();\n        break;\n      case \"IVTL\":\n        this.IFF.currentNode.heightWrappingMode = this.IFF.reader.getUint32();\n        break;\n      default:\n        this.IFF.parseUnknownCHUNK(blockID, length);\n    }\n    if (blockID != \"FORM\") {\n      this.IFF.debugger.node = 1;\n      this.IFF.debugger.nodeID = blockID;\n      this.IFF.debugger.log();\n    }\n    if (this.IFF.reader.offset >= this.IFF.currentFormEnd) {\n      this.IFF.currentForm = this.IFF.parentForm;\n    }\n  }\n}\nexport { LWO3Parser };","map":{"version":3,"names":["LWO3Parser","constructor","IFFParser","IFF","parseBlock","debugger","offset","reader","closeForms","blockID","getIDTag","length","getUint32","dataOffset","parseForm","skipped","skip","currentNode","getInt32","parseObjectTag","parseLayer","parsePoints","parseVertexMapping","parsePolygonList","parseTagStrings","parsePolygonTagMapping","currentForm","description","getString","comment","channelName","wrap","w","getUint16","h","index","getVariableLengthIndex","imageIndex","referenceObject","referenceObjectID","currentSurface","surfaceShaderName","surfaceCustomAOVName","disabled","realName","refName","nodes","nodeName","push","inputNodeName","inputName","inputOutputName","fileName","textureChannel","maxSmoothingAngle","getFloat32","attributes","smooth","Color","value","getFloat32Array","Luminosity","Specular","Diffuse","Reflection","Glossiness","opacity","bumpStrength","side","reflectionMap","refractiveIndex","refractionMap","imageMapIndex","UVChannel","widthWrappingMode","heightWrappingMode","parseUnknownCHUNK","node","nodeID","log","currentFormEnd","parentForm"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/lwo/LWO3Parser.js"],"sourcesContent":["class LWO3Parser {\n  constructor(IFFParser) {\n    this.IFF = IFFParser;\n  }\n  parseBlock() {\n    this.IFF.debugger.offset = this.IFF.reader.offset;\n    this.IFF.debugger.closeForms();\n    const blockID = this.IFF.reader.getIDTag();\n    const length = this.IFF.reader.getUint32();\n    this.IFF.debugger.dataOffset = this.IFF.reader.offset;\n    this.IFF.debugger.length = length;\n    switch (blockID) {\n      case \"FORM\":\n        this.IFF.parseForm(length);\n        break;\n      case \"ICON\":\n      case \"VMPA\":\n      case \"BBOX\":\n      case \"NORM\":\n      case \"PRE \":\n      case \"POST\":\n      case \"KEY \":\n      case \"SPAN\":\n      case \"TIME\":\n      case \"CLRS\":\n      case \"CLRA\":\n      case \"FILT\":\n      case \"DITH\":\n      case \"CONT\":\n      case \"BRIT\":\n      case \"SATR\":\n      case \"HUE \":\n      case \"GAMM\":\n      case \"NEGA\":\n      case \"IFLT\":\n      case \"PFLT\":\n      case \"PROJ\":\n      case \"AXIS\":\n      case \"AAST\":\n      case \"PIXB\":\n      case \"STCK\":\n      case \"VALU\":\n      case \"PNAM\":\n      case \"INAM\":\n      case \"GRST\":\n      case \"GREN\":\n      case \"GRPT\":\n      case \"FKEY\":\n      case \"IKEY\":\n      case \"CSYS\":\n      case \"OPAQ\":\n      case \"CMAP\":\n      case \"NLOC\":\n      case \"NZOM\":\n      case \"NVER\":\n      case \"NSRV\":\n      case \"NCRD\":\n      case \"NMOD\":\n      case \"NSEL\":\n      case \"NPRW\":\n      case \"NPLA\":\n      case \"VERS\":\n      case \"ENUM\":\n      case \"TAG \":\n      case \"CGMD\":\n      case \"CGTY\":\n      case \"CGST\":\n      case \"CGEN\":\n      case \"CGTS\":\n      case \"CGTE\":\n      case \"OSMP\":\n      case \"OMDE\":\n      case \"OUTR\":\n      case \"FLAG\":\n      case \"TRNL\":\n      case \"SHRP\":\n      case \"RFOP\":\n      case \"RSAN\":\n      case \"TROP\":\n      case \"RBLR\":\n      case \"TBLR\":\n      case \"CLRH\":\n      case \"CLRF\":\n      case \"ADTR\":\n      case \"GLOW\":\n      case \"LINE\":\n      case \"ALPH\":\n      case \"VCOL\":\n      case \"ENAB\":\n        this.IFF.debugger.skipped = true;\n        this.IFF.reader.skip(length);\n        break;\n      case \"IPIX\":\n      case \"IMIP\":\n      case \"IMOD\":\n      case \"AMOD\":\n      case \"IINV\":\n      case \"INCR\":\n      case \"IAXS\":\n      case \"IFOT\":\n      case \"ITIM\":\n      case \"IWRL\":\n      case \"IUTI\":\n      case \"IINX\":\n      case \"IINY\":\n      case \"IINZ\":\n      case \"IREF\":\n        if (length === 4)\n          this.IFF.currentNode[blockID] = this.IFF.reader.getInt32();\n        else\n          this.IFF.reader.skip(length);\n        break;\n      case \"OTAG\":\n        this.IFF.parseObjectTag();\n        break;\n      case \"LAYR\":\n        this.IFF.parseLayer(length);\n        break;\n      case \"PNTS\":\n        this.IFF.parsePoints(length);\n        break;\n      case \"VMAP\":\n        this.IFF.parseVertexMapping(length);\n        break;\n      case \"POLS\":\n        this.IFF.parsePolygonList(length);\n        break;\n      case \"TAGS\":\n        this.IFF.parseTagStrings(length);\n        break;\n      case \"PTAG\":\n        this.IFF.parsePolygonTagMapping(length);\n        break;\n      case \"VMAD\":\n        this.IFF.parseVertexMapping(length, true);\n        break;\n      case \"DESC\":\n        this.IFF.currentForm.description = this.IFF.reader.getString();\n        break;\n      case \"TEXT\":\n      case \"CMNT\":\n      case \"NCOM\":\n        this.IFF.currentForm.comment = this.IFF.reader.getString();\n        break;\n      case \"NAME\":\n        this.IFF.currentForm.channelName = this.IFF.reader.getString();\n        break;\n      case \"WRAP\":\n        this.IFF.currentForm.wrap = { w: this.IFF.reader.getUint16(), h: this.IFF.reader.getUint16() };\n        break;\n      case \"IMAG\":\n        const index = this.IFF.reader.getVariableLengthIndex();\n        this.IFF.currentForm.imageIndex = index;\n        break;\n      case \"OREF\":\n        this.IFF.currentForm.referenceObject = this.IFF.reader.getString();\n        break;\n      case \"ROID\":\n        this.IFF.currentForm.referenceObjectID = this.IFF.reader.getUint32();\n        break;\n      case \"SSHN\":\n        this.IFF.currentSurface.surfaceShaderName = this.IFF.reader.getString();\n        break;\n      case \"AOVN\":\n        this.IFF.currentSurface.surfaceCustomAOVName = this.IFF.reader.getString();\n        break;\n      case \"NSTA\":\n        this.IFF.currentForm.disabled = this.IFF.reader.getUint16();\n        break;\n      case \"NRNM\":\n        this.IFF.currentForm.realName = this.IFF.reader.getString();\n        break;\n      case \"NNME\":\n        this.IFF.currentForm.refName = this.IFF.reader.getString();\n        this.IFF.currentSurface.nodes[this.IFF.currentForm.refName] = this.IFF.currentForm;\n        break;\n      case \"INME\":\n        if (!this.IFF.currentForm.nodeName)\n          this.IFF.currentForm.nodeName = [];\n        this.IFF.currentForm.nodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINN\":\n        if (!this.IFF.currentForm.inputNodeName)\n          this.IFF.currentForm.inputNodeName = [];\n        this.IFF.currentForm.inputNodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINM\":\n        if (!this.IFF.currentForm.inputName)\n          this.IFF.currentForm.inputName = [];\n        this.IFF.currentForm.inputName.push(this.IFF.reader.getString());\n        break;\n      case \"IONM\":\n        if (!this.IFF.currentForm.inputOutputName)\n          this.IFF.currentForm.inputOutputName = [];\n        this.IFF.currentForm.inputOutputName.push(this.IFF.reader.getString());\n        break;\n      case \"FNAM\":\n        this.IFF.currentForm.fileName = this.IFF.reader.getString();\n        break;\n      case \"CHAN\":\n        if (length === 4)\n          this.IFF.currentForm.textureChannel = this.IFF.reader.getIDTag();\n        else\n          this.IFF.reader.skip(length);\n        break;\n      case \"SMAN\":\n        const maxSmoothingAngle = this.IFF.reader.getFloat32();\n        this.IFF.currentSurface.attributes.smooth = maxSmoothingAngle < 0 ? false : true;\n        break;\n      case \"COLR\":\n        this.IFF.currentSurface.attributes.Color = { value: this.IFF.reader.getFloat32Array(3) };\n        this.IFF.reader.skip(2);\n        break;\n      case \"LUMI\":\n        this.IFF.currentSurface.attributes.Luminosity = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"SPEC\":\n        this.IFF.currentSurface.attributes.Specular = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"DIFF\":\n        this.IFF.currentSurface.attributes.Diffuse = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"REFL\":\n        this.IFF.currentSurface.attributes.Reflection = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"GLOS\":\n        this.IFF.currentSurface.attributes.Glossiness = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"TRAN\":\n        this.IFF.currentSurface.attributes.opacity = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"BUMP\":\n        this.IFF.currentSurface.attributes.bumpStrength = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"SIDE\":\n        this.IFF.currentSurface.attributes.side = this.IFF.reader.getUint16();\n        break;\n      case \"RIMG\":\n        this.IFF.currentSurface.attributes.reflectionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"RIND\":\n        this.IFF.currentSurface.attributes.refractiveIndex = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"TIMG\":\n        this.IFF.currentSurface.attributes.refractionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"IMAP\":\n        this.IFF.currentSurface.attributes.imageMapIndex = this.IFF.reader.getUint32();\n        break;\n      case \"IUVI\":\n        this.IFF.currentNode.UVChannel = this.IFF.reader.getString(length);\n        break;\n      case \"IUTL\":\n        this.IFF.currentNode.widthWrappingMode = this.IFF.reader.getUint32();\n        break;\n      case \"IVTL\":\n        this.IFF.currentNode.heightWrappingMode = this.IFF.reader.getUint32();\n        break;\n      default:\n        this.IFF.parseUnknownCHUNK(blockID, length);\n    }\n    if (blockID != \"FORM\") {\n      this.IFF.debugger.node = 1;\n      this.IFF.debugger.nodeID = blockID;\n      this.IFF.debugger.log();\n    }\n    if (this.IFF.reader.offset >= this.IFF.currentFormEnd) {\n      this.IFF.currentForm = this.IFF.parentForm;\n    }\n  }\n}\nexport {\n  LWO3Parser\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}