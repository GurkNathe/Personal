{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, Mesh, SkinnedMesh } from \"three\";\nvar STLExporter = /*#__PURE__*/function () {\n  function STLExporter() {\n    _classCallCheck(this, STLExporter);\n    __publicField(this, \"binary\");\n    __publicField(this, \"output\");\n    __publicField(this, \"offset\");\n    __publicField(this, \"objects\");\n    __publicField(this, \"triangles\");\n    __publicField(this, \"vA\");\n    __publicField(this, \"vB\");\n    __publicField(this, \"vC\");\n    __publicField(this, \"cb\");\n    __publicField(this, \"ab\");\n    __publicField(this, \"normal\");\n    this.binary = false;\n    this.output = \"\";\n    this.offset = 80;\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n  _createClass(STLExporter, [{\n    key: \"parse\",\n    value: function parse(scene, options) {\n      var _this = this;\n      this.binary = options.binary !== void 0 ? options.binary : false;\n      scene.traverse(function (object) {\n        if (object instanceof Mesh && object.isMesh) {\n          var geometry = object.geometry;\n          if (!geometry.isBufferGeometry) {\n            throw new Error(\"THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.\");\n          }\n          var index = geometry.index;\n          var positionAttribute = geometry.getAttribute(\"position\");\n          _this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n          _this.objects.push({\n            object3d: object,\n            geometry: geometry\n          });\n        }\n      });\n      if (this.binary) {\n        var bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n        var arrayBuffer = new ArrayBuffer(bufferLength);\n        this.output = new DataView(arrayBuffer);\n        this.output.setUint32(this.offset, this.triangles, true);\n        this.offset += 4;\n      } else {\n        this.output = \"\";\n        this.output += \"solid exported\\n\";\n      }\n      for (var i = 0, il = this.objects.length; i < il; i++) {\n        var object = this.objects[i].object3d;\n        var geometry = this.objects[i].geometry;\n        var index = geometry.index;\n        var positionAttribute = geometry.getAttribute(\"position\");\n        if (object instanceof SkinnedMesh) {\n          if (index !== null) {\n            for (var j = 0; j < index.count; j += 3) {\n              var a = index.getX(j + 0);\n              var b = index.getX(j + 1);\n              var c = index.getX(j + 2);\n              this.writeFace(a, b, c, positionAttribute, object);\n            }\n          } else {\n            for (var _j = 0; _j < positionAttribute.count; _j += 3) {\n              var _a = _j + 0;\n              var _b = _j + 1;\n              var _c = _j + 2;\n              this.writeFace(_a, _b, _c, positionAttribute, object);\n            }\n          }\n        }\n      }\n      if (!this.binary) {\n        this.output += \"endsolid exported\\n\";\n      }\n      return this.output;\n    }\n  }, {\n    key: \"writeFace\",\n    value: function writeFace(a, b, c, positionAttribute, object) {\n      this.vA.fromBufferAttribute(positionAttribute, a);\n      this.vB.fromBufferAttribute(positionAttribute, b);\n      this.vC.fromBufferAttribute(positionAttribute, c);\n      if (object.isSkinnedMesh) {\n        object.boneTransform(a, this.vA);\n        object.boneTransform(b, this.vB);\n        object.boneTransform(c, this.vC);\n      }\n      this.vA.applyMatrix4(object.matrixWorld);\n      this.vB.applyMatrix4(object.matrixWorld);\n      this.vC.applyMatrix4(object.matrixWorld);\n      this.writeNormal(this.vA, this.vB, this.vC);\n      this.writeVertex(this.vA);\n      this.writeVertex(this.vB);\n      this.writeVertex(this.vC);\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setUint16(this.offset, 0, true);\n        this.offset += 2;\n      } else {\n        this.output += \"\t\tendloop\\n\";\n        this.output += \"\tendfacet\\n\";\n      }\n    }\n  }, {\n    key: \"writeNormal\",\n    value: function writeNormal(vA, vB, vC) {\n      this.cb.subVectors(vC, vB);\n      this.ab.subVectors(vA, vB);\n      this.cb.cross(this.ab).normalize();\n      this.normal.copy(this.cb).normalize();\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, this.normal.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, this.normal.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\tfacet normal \".concat(this.normal.x, \" \").concat(this.normal.y, \" \").concat(this.normal.z, \"\\n\");\n        this.output += \"\t\touter loop\\n\";\n      }\n    }\n  }, {\n    key: \"writeVertex\",\n    value: function writeVertex(vertex) {\n      if (this.binary && this.output instanceof DataView) {\n        this.output.setFloat32(this.offset, vertex.x, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.y, true);\n        this.offset += 4;\n        this.output.setFloat32(this.offset, vertex.z, true);\n        this.offset += 4;\n      } else {\n        this.output += \"\\t\\t\\tvertex vertex.x vertex.y vertex.z\\n\";\n      }\n    }\n  }]);\n  return STLExporter;\n}();\nexport { STLExporter };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Vector3","Mesh","SkinnedMesh","STLExporter","_classCallCheck","binary","output","offset","objects","triangles","vA","vB","vC","cb","ab","normal","_createClass","parse","scene","options","_this","traverse","object","isMesh","geometry","isBufferGeometry","Error","index","positionAttribute","getAttribute","count","push","object3d","bufferLength","arrayBuffer","ArrayBuffer","DataView","setUint32","i","il","length","j","a","getX","b","c","writeFace","fromBufferAttribute","isSkinnedMesh","boneTransform","applyMatrix4","matrixWorld","writeNormal","writeVertex","setUint16","subVectors","cross","normalize","copy","setFloat32","x","y","z","concat","vertex"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/exporters/STLExporter.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Vector3, Mesh, SkinnedMesh } from \"three\";\nclass STLExporter {\n  constructor() {\n    __publicField(this, \"binary\");\n    __publicField(this, \"output\");\n    __publicField(this, \"offset\");\n    __publicField(this, \"objects\");\n    __publicField(this, \"triangles\");\n    __publicField(this, \"vA\");\n    __publicField(this, \"vB\");\n    __publicField(this, \"vC\");\n    __publicField(this, \"cb\");\n    __publicField(this, \"ab\");\n    __publicField(this, \"normal\");\n    this.binary = false;\n    this.output = \"\";\n    this.offset = 80;\n    this.objects = [];\n    this.triangles = 0;\n    this.vA = new Vector3();\n    this.vB = new Vector3();\n    this.vC = new Vector3();\n    this.cb = new Vector3();\n    this.ab = new Vector3();\n    this.normal = new Vector3();\n  }\n  parse(scene, options) {\n    this.binary = options.binary !== void 0 ? options.binary : false;\n    scene.traverse((object) => {\n      if (object instanceof Mesh && object.isMesh) {\n        const geometry = object.geometry;\n        if (!geometry.isBufferGeometry) {\n          throw new Error(\"THREE.STLExporter: Geometry is not of type THREE.BufferGeometry.\");\n        }\n        const index = geometry.index;\n        const positionAttribute = geometry.getAttribute(\"position\");\n        this.triangles += index !== null ? index.count / 3 : positionAttribute.count / 3;\n        this.objects.push({\n          object3d: object,\n          geometry\n        });\n      }\n    });\n    if (this.binary) {\n      const bufferLength = this.triangles * 2 + this.triangles * 3 * 4 * 4 + 80 + 4;\n      const arrayBuffer = new ArrayBuffer(bufferLength);\n      this.output = new DataView(arrayBuffer);\n      this.output.setUint32(this.offset, this.triangles, true);\n      this.offset += 4;\n    } else {\n      this.output = \"\";\n      this.output += \"solid exported\\n\";\n    }\n    for (let i = 0, il = this.objects.length; i < il; i++) {\n      const object = this.objects[i].object3d;\n      const geometry = this.objects[i].geometry;\n      const index = geometry.index;\n      const positionAttribute = geometry.getAttribute(\"position\");\n      if (object instanceof SkinnedMesh) {\n        if (index !== null) {\n          for (let j = 0; j < index.count; j += 3) {\n            const a = index.getX(j + 0);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        } else {\n          for (let j = 0; j < positionAttribute.count; j += 3) {\n            const a = j + 0;\n            const b = j + 1;\n            const c = j + 2;\n            this.writeFace(a, b, c, positionAttribute, object);\n          }\n        }\n      }\n    }\n    if (!this.binary) {\n      this.output += \"endsolid exported\\n\";\n    }\n    return this.output;\n  }\n  writeFace(a, b, c, positionAttribute, object) {\n    this.vA.fromBufferAttribute(positionAttribute, a);\n    this.vB.fromBufferAttribute(positionAttribute, b);\n    this.vC.fromBufferAttribute(positionAttribute, c);\n    if (object.isSkinnedMesh) {\n      object.boneTransform(a, this.vA);\n      object.boneTransform(b, this.vB);\n      object.boneTransform(c, this.vC);\n    }\n    this.vA.applyMatrix4(object.matrixWorld);\n    this.vB.applyMatrix4(object.matrixWorld);\n    this.vC.applyMatrix4(object.matrixWorld);\n    this.writeNormal(this.vA, this.vB, this.vC);\n    this.writeVertex(this.vA);\n    this.writeVertex(this.vB);\n    this.writeVertex(this.vC);\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setUint16(this.offset, 0, true);\n      this.offset += 2;\n    } else {\n      this.output += \"\t\tendloop\\n\";\n      this.output += \"\tendfacet\\n\";\n    }\n  }\n  writeNormal(vA, vB, vC) {\n    this.cb.subVectors(vC, vB);\n    this.ab.subVectors(vA, vB);\n    this.cb.cross(this.ab).normalize();\n    this.normal.copy(this.cb).normalize();\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, this.normal.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, this.normal.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\tfacet normal ${this.normal.x} ${this.normal.y} ${this.normal.z}\n`;\n      this.output += \"\t\touter loop\\n\";\n    }\n  }\n  writeVertex(vertex) {\n    if (this.binary && this.output instanceof DataView) {\n      this.output.setFloat32(this.offset, vertex.x, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.y, true);\n      this.offset += 4;\n      this.output.setFloat32(this.offset, vertex.z, true);\n      this.offset += 4;\n    } else {\n      this.output += `\t\t\tvertex vertex.x vertex.y vertex.z\n`;\n    }\n  }\n}\nexport {\n  STLExporter\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}