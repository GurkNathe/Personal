{"ast":null,"code":"var _jsxFileName = \"/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/RSS.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport * as RSS from \"rss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const articleLoader = async () => {\n  const res = await fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");\n  const articles = res.json();\n  return articles;\n};\nexport default function RSSFeed() {\n  _s();\n  const data = useLoaderData();\n  const [xml, setXML] = useState(\"\"); // Needs typing\n\n  useEffect(() => {\n    let feed = new RSS({\n      title: \"Ethan's Blog\",\n      description: \"A catalogue of my various articles.\",\n      site_url: \"https://gurknathe.github.io/Personal/#/rss.xml\",\n      copyright: \"2023 Ethan Krug\",\n      language: \"en\"\n    });\n    data.forEach(item => {\n      feed.item({\n        title: item.title,\n        description: item.summary,\n        url: `https://gurknathe.github.io/Personal/#/blog/${item.contentUrl}/article`,\n        categories: item.tags,\n        author: 'Ethan Krug',\n        date: item.timestamp\n      });\n    });\n    setXML(feed.xml());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: xml\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this); // error: Type 'undefined' is not assignable to type 'string | TrustedHTML'.ts(2322)\n}\n_s(RSSFeed, \"NU6FkSSiqnj4BT//jI5rYitBpZ0=\", false, function () {\n  return [useLoaderData];\n});\n_c = RSSFeed;\nvar _c;\n$RefreshReg$(_c, \"RSSFeed\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","RSS","jsxDEV","_jsxDEV","articleLoader","res","fetch","articles","json","RSSFeed","_s","data","xml","setXML","feed","title","description","site_url","copyright","language","forEach","item","summary","url","contentUrl","categories","tags","author","date","timestamp","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/RSS.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { LoadedArticle } from \"./BlogPost\";\nimport * as RSS from \"rss\";\n\nexport const articleLoader = async (): Promise<any> => {\n    const res = await fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");\n    const articles = res.json();\n    return articles;\n};\n\nexport default function RSSFeed() {\n    const data = useLoaderData() as LoadedArticle[];\n    const [xml, setXML] = useState<string>(\"\"); // Needs typing\n\n    useEffect(() => {\n        let feed = new RSS({\n            title: \"Ethan's Blog\",\n            description: \"A catalogue of my various articles.\",\n            site_url: \"https://gurknathe.github.io/Personal/#/rss.xml\",\n            copyright: \"2023 Ethan Krug\",\n            language: \"en\"\n        });\n\n        data.forEach((item) => {\n            feed.item({\n                title:  item.title,\n                description: item.summary,\n                url: `https://gurknathe.github.io/Personal/#/blog/${item.contentUrl}/article`,\n                categories: item.tags,\n                author: 'Ethan Krug',\n                date: item.timestamp\n            });\n        })\n\n        setXML(feed.xml());\n    }, []);\n\n    return(<div dangerouslySetInnerHTML={{ __html: xml }}/>) // error: Type 'undefined' is not assignable to type 'string | TrustedHTML'.ts(2322)\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAA0B;EACnD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kFAAkF,CAAC;EAC3G,MAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC3B,OAAOD,QAAQ;AACnB,CAAC;AAED,eAAe,SAASE,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAoB;EAC/C,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAIgB,IAAI,GAAG,IAAIb,GAAG,CAAC;MACfc,KAAK,EAAE,cAAc;MACrBC,WAAW,EAAE,qCAAqC;MAClDC,QAAQ,EAAE,gDAAgD;MAC1DC,SAAS,EAAE,iBAAiB;MAC5BC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEFR,IAAI,CAACS,OAAO,CAAEC,IAAI,IAAK;MACnBP,IAAI,CAACO,IAAI,CAAC;QACNN,KAAK,EAAGM,IAAI,CAACN,KAAK;QAClBC,WAAW,EAAEK,IAAI,CAACC,OAAO;QACzBC,GAAG,EAAG,+CAA8CF,IAAI,CAACG,UAAW,UAAS;QAC7EC,UAAU,EAAEJ,IAAI,CAACK,IAAI;QACrBC,MAAM,EAAE,YAAY;QACpBC,IAAI,EAAEP,IAAI,CAACQ;MACf,CAAC,CAAC;IACN,CAAC,CAAC;IAEFhB,MAAM,CAACC,IAAI,CAACF,GAAG,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOT,OAAA;IAAK2B,uBAAuB,EAAE;MAAEC,MAAM,EAAEnB;IAAI;EAAE;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC,CAAC;AAC7D;AAACzB,EAAA,CA5BuBD,OAAO;EAAA,QACdT,aAAa;AAAA;AAAAoC,EAAA,GADN3B,OAAO;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}