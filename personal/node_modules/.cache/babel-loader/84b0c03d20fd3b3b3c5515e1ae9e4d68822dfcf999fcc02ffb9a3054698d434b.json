{"ast":null,"code":"import _slicedToArray from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport clamp from 'lodash.clamp';\nimport { context } from './context.js';\nvar clickDir = new THREE.Vector3();\nvar intersectionDir = new THREE.Vector3();\nvar toDegrees = function toDegrees(radians) {\n  return radians * 180 / Math.PI;\n};\nvar toRadians = function toRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\nvar calculateAngle = function calculateAngle(clickPoint, intersectionPoint, origin, e1, e2) {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  var dote1e1 = e1.dot(e1);\n  var dote2e2 = e2.dot(e2);\n  var uClick = clickDir.dot(e1) / dote1e1;\n  var vClick = clickDir.dot(e2) / dote2e2;\n  var uIntersection = intersectionDir.dot(e1) / dote1e1;\n  var vIntersection = intersectionDir.dot(e2) / dote2e2;\n  var angleClick = Math.atan2(vClick, uClick);\n  var angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\nvar fmod = function fmod(num, denom) {\n  var k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\nvar minimizeAngle = function minimizeAngle(angle) {\n  var result = fmod(angle, 2 * Math.PI);\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n  return result;\n};\nvar rotMatrix = new THREE.Matrix4();\nvar posNew = new THREE.Vector3();\nvar ray = new THREE.Ray();\nvar intersection = new THREE.Vector3();\nvar AxisRotator = function AxisRotator(_ref) {\n  var dir1 = _ref.dir1,\n    dir2 = _ref.dir2,\n    axis = _ref.axis;\n  var _React$useContext = React.useContext(context),\n    rotationLimits = _React$useContext.rotationLimits,\n    annotations = _React$useContext.annotations,\n    annotationsClass = _React$useContext.annotationsClass,\n    depthTest = _React$useContext.depthTest,\n    scale = _React$useContext.scale,\n    lineWidth = _React$useContext.lineWidth,\n    fixed = _React$useContext.fixed,\n    axisColors = _React$useContext.axisColors,\n    hoveredColor = _React$useContext.hoveredColor,\n    opacity = _React$useContext.opacity,\n    onDragStart = _React$useContext.onDragStart,\n    onDrag = _React$useContext.onDrag,\n    onDragEnd = _React$useContext.onDragEnd,\n    userData = _React$useContext.userData; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  var camControls = useThree(function (state) {\n    return state.controls;\n  });\n  var divRef = React.useRef(null);\n  var objRef = React.useRef(null);\n  var angle0 = React.useRef(0);\n  var angle = React.useRef(0);\n  var clickInfo = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isHovered = _React$useState2[0],\n    setIsHovered = _React$useState2[1];\n  var onPointerDown = React.useCallback(function (e) {\n    if (annotations) {\n      divRef.current.innerText = \"\".concat(toDegrees(angle.current).toFixed(0), \"\\xBA\");\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    var clickPoint = e.point.clone();\n    var origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    var e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    var e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    var normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    var plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint: clickPoint,\n      origin: origin,\n      e1: e1,\n      e2: e2,\n      normal: normal,\n      plane: plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis: axis,\n      origin: origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  var onPointerMove = React.useCallback(function (e) {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      var _clickInfo$current = clickInfo.current,\n        clickPoint = _clickInfo$current.clickPoint,\n        origin = _clickInfo$current.origin,\n        e1 = _clickInfo$current.e1,\n        e2 = _clickInfo$current.e2,\n        normal = _clickInfo$current.normal,\n        plane = _clickInfo$current.plane;\n      var _ref2 = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined],\n        _ref3 = _slicedToArray(_ref2, 2),\n        min = _ref3[0],\n        max = _ref3[1];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      var deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      var degrees = toDegrees(deltaAngle); // @ts-ignore\n\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = \"\".concat(degrees.toFixed(0), \"\\xBA\");\n      }\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  var onPointerUp = React.useCallback(function (e) {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  var onPointerOut = React.useCallback(function (e) {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  var matrixL = React.useMemo(function () {\n    var dir1N = dir1.clone().normalize();\n    var dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  var r = fixed ? 0.65 : scale * 0.65;\n  var arc = React.useMemo(function () {\n    var segments = 32;\n    var points = [];\n    for (var j = 0; j <= segments; j++) {\n      var _angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(_angle) * r, Math.sin(_angle) * r, 0));\n    }\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: function raycast() {\n      return null;\n    },\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\nexport { AxisRotator };","map":{"version":3,"names":["React","THREE","useThree","Line","Html","clamp","context","clickDir","Vector3","intersectionDir","toDegrees","radians","Math","PI","toRadians","degrees","calculateAngle","clickPoint","intersectionPoint","origin","e1","e2","copy","sub","dote1e1","dot","dote2e2","uClick","vClick","uIntersection","vIntersection","angleClick","atan2","angleIntersection","fmod","num","denom","k","floor","minimizeAngle","angle","result","abs","rotMatrix","Matrix4","posNew","ray","Ray","intersection","AxisRotator","_ref","dir1","dir2","axis","_React$useContext","useContext","rotationLimits","annotations","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","camControls","state","controls","divRef","useRef","objRef","angle0","clickInfo","_React$useState","useState","_React$useState2","_slicedToArray","isHovered","setIsHovered","onPointerDown","useCallback","e","current","innerText","concat","toFixed","style","display","stopPropagation","point","clone","setFromMatrixPosition","matrixWorld","setFromMatrixColumn","normalize","normal","plane","Plane","setFromNormalAndCoplanarPoint","component","directions","enabled","target","setPointerCapture","pointerId","onPointerMove","_clickInfo$current","_ref2","undefined","_ref3","min","max","intersectPlane","direction","negate","deltaAngle","shiftKey","round","makeRotationAxis","applyMatrix4","setPosition","onPointerUp","releasePointerCapture","onPointerOut","matrixL","useMemo","dir1N","dir2N","makeBasis","cross","r","arc","segments","points","j","push","cos","sin","createElement","ref","matrix","matrixAutoUpdate","position","background","color","padding","borderRadius","whiteSpace","className","visible","transparent","raycast","polygonOffset","polygonOffsetFactor","fog"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/web/pivotControls/AxisRotator.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport clamp from 'lodash.clamp';\nimport { context } from './context.js';\n\nconst clickDir = new THREE.Vector3();\nconst intersectionDir = new THREE.Vector3();\n\nconst toDegrees = radians => radians * 180 / Math.PI;\n\nconst toRadians = degrees => degrees * Math.PI / 180;\n\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\n\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\n\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n\n  return result;\n};\n\nconst rotMatrix = new THREE.Matrix4();\nconst posNew = new THREE.Vector3();\nconst ray = new THREE.Ray();\nconst intersection = new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false); // @ts-ignore\n\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle); // @ts-ignore\n\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true); // @ts-ignore\n\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\n\nexport { AxisRotator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}