{"ast":null,"code":"import _objectSpread from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\", \"smooth\", \"color\", \"depthWrite\", \"renderOrder\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n  var _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 10 : _ref$scale,\n    _ref$frames = _ref.frames,\n    frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? 1 : _ref$width,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 1 : _ref$height,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? 1 : _ref$blur,\n    _ref$far = _ref.far,\n    far = _ref$far === void 0 ? 10 : _ref$far,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 512 : _ref$resolution,\n    _ref$smooth = _ref.smooth,\n    smooth = _ref$smooth === void 0 ? true : _ref$smooth,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? '#000000' : _ref$color,\n    _ref$depthWrite = _ref.depthWrite,\n    depthWrite = _ref$depthWrite === void 0 ? false : _ref$depthWrite,\n    renderOrder = _ref.renderOrder,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ref = React.useRef(null);\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  var _React$useMemo = React.useMemo(function () {\n      var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n      var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n      renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n      var planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n      var blurPlane = new THREE.Mesh(planeGeometry);\n      var depthMaterial = new THREE.MeshDepthMaterial();\n      depthMaterial.depthTest = depthMaterial.depthWrite = false;\n      depthMaterial.onBeforeCompile = function (shader) {\n        shader.uniforms = _objectSpread(_objectSpread({}, shader.uniforms), {}, {\n          ucolor: {\n            value: new THREE.Color(color)\n          }\n        });\n        shader.fragmentShader = shader.fragmentShader.replace(\"void main() {\", //\n        \"uniform vec3 ucolor;\\n           void main() {\\n          \");\n        shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n        // Colorize the shadow, multiply by the falloff so that the center can remain darker\n        'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n      };\n      var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n      var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n      verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n      return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n    }, [resolution, width, height, scale, color]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n    renderTarget = _React$useMemo2[0],\n    planeGeometry = _React$useMemo2[1],\n    depthMaterial = _React$useMemo2[2],\n    blurPlane = _React$useMemo2[3],\n    horizontalBlurMaterial = _React$useMemo2[4],\n    verticalBlurMaterial = _React$useMemo2[5],\n    renderTargetBlur = _React$useMemo2[6];\n  var blurShadows = function blurShadows(blur) {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n  var count = 0;\n  var initialBackground;\n  var initialOverrideMaterial;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","_ref","fref","_ref$scale","scale","_ref$frames","frames","Infinity","_ref$opacity","opacity","_ref$width","width","_ref$height","height","_ref$blur","blur","_ref$far","far","_ref$resolution","resolution","_ref$smooth","smooth","_ref$color","color","_ref$depthWrite","depthWrite","renderOrder","props","_objectWithoutProperties","_excluded","ref","useRef","scene","state","gl","shadowCamera","Array","isArray","_React$useMemo","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","onBeforeCompile","shader","uniforms","_objectSpread","ucolor","value","Color","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","_React$useMemo2","_slicedToArray","blurShadows","visible","material","tDiffuse","h","setRenderTarget","render","current","v","count","initialBackground","initialOverrideMaterial","background","overrideMaterial","useImperativeHandle","createElement","geometry","rotation","transparent","map","args"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  let initialBackground;\n  let initialOverrideMaterial;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}