{"ast":null,"code":"import _slicedToArray from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport * as React from \"react\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nfunction traverseFiber(fiber, ascending, selector) {\n  if (!fiber) return;\n  if (selector(fiber) === true) return fiber;\n  var child = ascending ? fiber.return : fiber.child;\n  while (child) {\n    var match = traverseFiber(child, ascending, selector);\n    if (match) return match;\n    child = ascending ? null : child.sibling;\n  }\n}\nfunction wrapContext(context) {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get: function get() {\n          return null;\n        },\n        set: function set() {}\n      },\n      _currentRenderer2: {\n        get: function get() {\n          return null;\n        },\n        set: function set() {}\n      }\n    });\n  } catch (_) {\n    return context;\n  }\n}\nvar FiberContext = wrapContext(React.createContext(null));\nvar FiberProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(FiberProvider, _React$Component);\n  var _super = _createSuper(FiberProvider);\n  function FiberProvider() {\n    _classCallCheck(this, FiberProvider);\n    return _super.apply(this, arguments);\n  }\n  _createClass(FiberProvider, [{\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */React.createElement(FiberContext.Provider, {\n        value: this._reactInternals\n      }, this.props.children);\n    }\n  }]);\n  return FiberProvider;\n}(React.Component);\nvar _React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  ReactCurrentOwner = _React$__SECRET_INTER.ReactCurrentOwner,\n  ReactCurrentDispatcher = _React$__SECRET_INTER.ReactCurrentDispatcher;\nfunction useFiber() {\n  var root = React.useContext(FiberContext);\n  if (root === null) throw new Error(\"its-fine: useFiber must be called within a <FiberProvider />!\");\n  var id = React.useId();\n  var fiber = React.useMemo(function () {\n    for (var _i = 0, _arr = [ReactCurrentOwner == null ? void 0 : ReactCurrentOwner.current, root, root == null ? void 0 : root.alternate]; _i < _arr.length; _i++) {\n      var maybeFiber = _arr[_i];\n      if (!maybeFiber) continue;\n      var fiber2 = traverseFiber(maybeFiber, false, function (node) {\n        var state = node.memoizedState;\n        while (state) {\n          if (state.memoizedState === id) return true;\n          state = state.next;\n        }\n      });\n      if (fiber2) return fiber2;\n    }\n  }, [root, id]);\n  return fiber;\n}\nfunction useContainer() {\n  var fiber = useFiber();\n  var root = React.useMemo(function () {\n    return traverseFiber(fiber, true, function (node) {\n      var _a;\n      return ((_a = node.stateNode) == null ? void 0 : _a.containerInfo) != null;\n    });\n  }, [fiber]);\n  return root == null ? void 0 : root.stateNode.containerInfo;\n}\nfunction useNearestChild(type) {\n  var fiber = useFiber();\n  var childRef = React.useRef();\n  React.useLayoutEffect(function () {\n    var _a;\n    childRef.current = (_a = traverseFiber(fiber, false, function (node) {\n      return typeof node.type === \"string\" && (type === void 0 || node.type === type);\n    })) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return childRef;\n}\nfunction useNearestParent(type) {\n  var fiber = useFiber();\n  var parentRef = React.useRef();\n  React.useLayoutEffect(function () {\n    var _a;\n    parentRef.current = (_a = traverseFiber(fiber, true, function (node) {\n      return typeof node.type === \"string\" && (type === void 0 || node.type === type);\n    })) == null ? void 0 : _a.stateNode;\n  }, [fiber]);\n  return parentRef;\n}\nfunction useContextMap() {\n  var _a, _b;\n  var fiber = useFiber();\n  var _React$useState = React.useState(function () {\n      return /* @__PURE__ */new Map();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    contextMap = _React$useState2[0];\n  contextMap.clear();\n  var node = fiber;\n  while (node) {\n    var context = (_a = node.type) == null ? void 0 : _a._context;\n    if (context && context !== FiberContext && !contextMap.has(context)) {\n      contextMap.set(context, (_b = ReactCurrentDispatcher == null ? void 0 : ReactCurrentDispatcher.current) == null ? void 0 : _b.readContext(wrapContext(context)));\n    }\n    node = node.return;\n  }\n  return contextMap;\n}\nfunction useContextBridge() {\n  var contextMap = useContextMap();\n  return React.useMemo(function () {\n    return Array.from(contextMap.keys()).reduce(function (Prev, context) {\n      return function (props) {\n        return /* @__PURE__ */React.createElement(Prev, null, /* @__PURE__ */React.createElement(context.Provider, __spreadProps(__spreadValues({}, props), {\n          value: contextMap.get(context)\n        })));\n      };\n    }, function (props) {\n      return /* @__PURE__ */React.createElement(FiberProvider, __spreadValues({}, props));\n    });\n  }, [contextMap]);\n}\nexport { FiberProvider, traverseFiber, useContainer, useContextBridge, useContextMap, useFiber, useNearestChild, useNearestParent };","map":{"version":3,"names":["traverseFiber","fiber","ascending","selector","child","return","match","sibling","wrapContext","context","Object","defineProperties","_currentRenderer","get","set","_currentRenderer2","_","FiberContext","React","createContext","FiberProvider","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","createElement","Provider","_reactInternals","props","children","Component","_React$__SECRET_INTER","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","ReactCurrentDispatcher","useFiber","root","useContext","Error","id","useId","useMemo","_i","_arr","current","alternate","length","maybeFiber","fiber2","node","state","memoizedState","next","useContainer","_a","stateNode","containerInfo","useNearestChild","type","childRef","useRef","useLayoutEffect","useNearestParent","parentRef","useContextMap","_b","_React$useState","useState","Map","_React$useState2","_slicedToArray","contextMap","clear","_context","has","readContext","useContextBridge","Array","from","keys","reduce","Prev","__spreadProps","__spreadValues"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/its-fine@1.1.1_react@18.2.0/node_modules/its-fine/src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport type ReactReconciler from 'react-reconciler'\n\n/**\n * Represents a react-internal Fiber node.\n */\nexport type Fiber<T = any> = Omit<ReactReconciler.Fiber, 'stateNode'> & { stateNode: T }\n\n/**\n * Represents a {@link Fiber} node selector for traversal.\n */\nexport type FiberSelector<T = any> = (\n  /** The current {@link Fiber} node. */\n  node: Fiber<T | null>,\n) => boolean | void\n\n/**\n * Traverses up or down a {@link Fiber}, return `true` to stop and select a node.\n */\nexport function traverseFiber<T = any>(\n  /** Input {@link Fiber} to traverse. */\n  fiber: Fiber | undefined,\n  /** Whether to ascend and walk up the tree. Will walk down if `false`. */\n  ascending: boolean,\n  /** A {@link Fiber} node selector, returns the first match when `true` is passed. */\n  selector: FiberSelector<T>,\n): Fiber<T> | undefined {\n  if (!fiber) return\n  if (selector(fiber) === true) return fiber\n\n  let child = ascending ? fiber.return : fiber.child\n  while (child) {\n    const match = traverseFiber(child, ascending, selector)\n    if (match) return match\n\n    child = ascending ? null : child.sibling\n  }\n}\n\n// In development, React will warn about using contexts between renderers.\n// Hide the warning because its-fine fixes this issue\n// https://github.com/facebook/react/pull/12779\nfunction wrapContext<T>(context: React.Context<T>): React.Context<T> {\n  try {\n    return Object.defineProperties(context, {\n      _currentRenderer: {\n        get() {\n          return null\n        },\n        set() {},\n      },\n      _currentRenderer2: {\n        get() {\n          return null\n        },\n        set() {},\n      },\n    })\n  } catch (_) {\n    return context\n  }\n}\n\nconst FiberContext = wrapContext(React.createContext<Fiber>(null!))\n\n/**\n * A react-internal {@link Fiber} provider. This component binds React children to the React Fiber tree. Call its-fine hooks within this.\n */\nexport class FiberProvider extends React.Component<{ children?: React.ReactNode }> {\n  private _reactInternals!: Fiber\n\n  render() {\n    return <FiberContext.Provider value={this._reactInternals}>{this.props.children}</FiberContext.Provider>\n  }\n}\n\ninterface ReactInternal {\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: React.RefObject<Fiber>\n    ReactCurrentDispatcher: React.RefObject<{ readContext<T>(context: React.Context<T>): T }>\n  }\n}\n\nconst { ReactCurrentOwner, ReactCurrentDispatcher } = (React as unknown as ReactInternal)\n  .__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n\n/**\n * Returns the current react-internal {@link Fiber}. This is an implementation detail of [react-reconciler](https://github.com/facebook/react/tree/main/packages/react-reconciler).\n */\nexport function useFiber(): Fiber<null> | undefined {\n  const root = React.useContext(FiberContext)\n  if (root === null) throw new Error('its-fine: useFiber must be called within a <FiberProvider />!')\n\n  // In development mode, React will expose the current component's Fiber as ReactCurrentOwner.\n  // In production, we don't have this luxury and must traverse from FiberProvider via useId\n  const id = React.useId()\n  const fiber = React.useMemo(() => {\n    for (const maybeFiber of [ReactCurrentOwner?.current, root, root?.alternate]) {\n      if (!maybeFiber) continue\n      const fiber = traverseFiber<null>(maybeFiber, false, (node) => {\n        let state = node.memoizedState\n        while (state) {\n          if (state.memoizedState === id) return true\n          state = state.next\n        }\n      })\n      if (fiber) return fiber\n    }\n  }, [root, id])\n\n  return fiber\n}\n\n/**\n * Represents a react-reconciler container instance.\n */\nexport interface ContainerInstance<T = any> {\n  containerInfo: T\n}\n\n/**\n * Returns the current react-reconciler container info passed to {@link ReactReconciler.Reconciler.createContainer}.\n *\n * In react-dom, a container will point to the root DOM element; in react-three-fiber, it will point to the root Zustand store.\n */\nexport function useContainer<T = any>(): T | undefined {\n  const fiber = useFiber()\n  const root = React.useMemo(\n    () => traverseFiber<ContainerInstance<T>>(fiber, true, (node) => node.stateNode?.containerInfo != null),\n    [fiber],\n  )\n\n  return root?.stateNode.containerInfo\n}\n\n/**\n * Returns the nearest react-reconciler child instance or the node created from {@link ReactReconciler.HostConfig.createInstance}.\n *\n * In react-dom, this would be a DOM element; in react-three-fiber this would be an instance descriptor.\n */\nexport function useNearestChild<T = any>(\n  /** An optional element type to filter to. */\n  type?: keyof JSX.IntrinsicElements,\n): React.MutableRefObject<T | undefined> {\n  const fiber = useFiber()\n  const childRef = React.useRef<T>()\n\n  React.useLayoutEffect(() => {\n    childRef.current = traverseFiber<T>(\n      fiber,\n      false,\n      (node) => typeof node.type === 'string' && (type === undefined || node.type === type),\n    )?.stateNode\n  }, [fiber])\n\n  return childRef\n}\n\n/**\n * Returns the nearest react-reconciler parent instance or the node created from {@link ReactReconciler.HostConfig.createInstance}.\n *\n * In react-dom, this would be a DOM element; in react-three-fiber this would be an instance descriptor.\n */\nexport function useNearestParent<T = any>(\n  /** An optional element type to filter to. */\n  type?: keyof JSX.IntrinsicElements,\n): React.MutableRefObject<T | undefined> {\n  const fiber = useFiber()\n  const parentRef = React.useRef<T>()\n\n  React.useLayoutEffect(() => {\n    parentRef.current = traverseFiber<T>(\n      fiber,\n      true,\n      (node) => typeof node.type === 'string' && (type === undefined || node.type === type),\n    )?.stateNode\n  }, [fiber])\n\n  return parentRef\n}\n\nexport type ContextMap = Map<React.Context<any>, any> & {\n  get<T>(context: React.Context<T>): T | undefined\n}\n\n/**\n * Returns a map of all contexts and their values.\n */\nexport function useContextMap(): ContextMap {\n  const fiber = useFiber()\n  const [contextMap] = React.useState(() => new Map<React.Context<any>, any>())\n\n  // Collect live context\n  contextMap.clear()\n  let node = fiber\n  while (node) {\n    const context = node.type?._context\n    if (context && context !== FiberContext && !contextMap.has(context)) {\n      contextMap.set(context, ReactCurrentDispatcher?.current?.readContext(wrapContext(context)))\n    }\n    node = node.return!\n  }\n\n  return contextMap\n}\n\n/**\n * Represents a react-context bridge provider component.\n */\nexport type ContextBridge = React.FC<React.PropsWithChildren<{}>>\n\n/**\n * React Context currently cannot be shared across [React renderers](https://reactjs.org/docs/codebase-overview.html#renderers) but explicitly forwarded between providers (see [react#17275](https://github.com/facebook/react/issues/17275)). This hook returns a {@link ContextBridge} of live context providers to pierce Context across renderers.\n *\n * Pass {@link ContextBridge} as a component to a secondary renderer to enable context-sharing within its children.\n */\nexport function useContextBridge(): ContextBridge {\n  const contextMap = useContextMap()\n\n  // Flatten context and their memoized values into a `ContextBridge` provider\n  return React.useMemo(\n    () =>\n      Array.from(contextMap.keys()).reduce(\n        (Prev, context) => (props) =>\n          (\n            <Prev>\n              <context.Provider {...props} value={contextMap.get(context)} />\n            </Prev>\n          ),\n        (props) => <FiberProvider {...props} />,\n      ),\n    [contextMap],\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}