{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, LineBasicMaterial, BufferGeometry, Float32BufferAttribute, LineSegments, Group, Euler } from \"three\";\nvar GCodeLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(GCodeLoader, _Loader);\n  var _super = _createSuper(GCodeLoader);\n  function GCodeLoader(manager) {\n    var _this;\n    _classCallCheck(this, GCodeLoader);\n    _this = _super.call(this, manager);\n    _this.splitLayer = false;\n    return _this;\n  }\n  _createClass(GCodeLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var state = {\n        x: 0,\n        y: 0,\n        z: 0,\n        e: 0,\n        f: 0,\n        extruding: false,\n        relative: false\n      };\n      var layers = [];\n      var currentLayer = void 0;\n      var pathMaterial = new LineBasicMaterial({\n        color: 16711680\n      });\n      pathMaterial.name = \"path\";\n      var extrudingMaterial = new LineBasicMaterial({\n        color: 65280\n      });\n      extrudingMaterial.name = \"extruded\";\n      function newLayer(line) {\n        currentLayer = {\n          vertex: [],\n          pathVertex: [],\n          z: line.z\n        };\n        layers.push(currentLayer);\n      }\n      function addSegment(p1, p2) {\n        if (currentLayer === void 0) {\n          newLayer(p1);\n        }\n        if (state.extruding) {\n          currentLayer.vertex.push(p1.x, p1.y, p1.z);\n          currentLayer.vertex.push(p2.x, p2.y, p2.z);\n        } else {\n          currentLayer.pathVertex.push(p1.x, p1.y, p1.z);\n          currentLayer.pathVertex.push(p2.x, p2.y, p2.z);\n        }\n      }\n      function delta(v1, v2) {\n        return state.relative ? v2 : v2 - v1;\n      }\n      function absolute(v1, v2) {\n        return state.relative ? v1 + v2 : v2;\n      }\n      var lines = data.replace(/;.+/g, \"\").split(\"\\n\");\n      var _loop = function _loop() {\n        var tokens = lines[i].split(\" \");\n        var cmd = tokens[0].toUpperCase();\n        var args = {};\n        tokens.splice(1).forEach(function (token) {\n          if (token[0] !== void 0) {\n            var key = token[0].toLowerCase();\n            var value = parseFloat(token.substring(1));\n            args[key] = value;\n          }\n        });\n        if (cmd === \"G0\" || cmd === \"G1\") {\n          var line = {\n            x: args.x !== void 0 ? absolute(state.x, args.x) : state.x,\n            y: args.y !== void 0 ? absolute(state.y, args.y) : state.y,\n            z: args.z !== void 0 ? absolute(state.z, args.z) : state.z,\n            e: args.e !== void 0 ? absolute(state.e, args.e) : state.e,\n            f: args.f !== void 0 ? absolute(state.f, args.f) : state.f\n          };\n          if (delta(state.e, line.e) > 0) {\n            line.extruding = delta(state.e, line.e) > 0;\n            if (currentLayer == void 0 || line.z != currentLayer.z) {\n              newLayer(line);\n            }\n          }\n          addSegment(state, line);\n          state = line;\n        } else if (cmd === \"G2\" || cmd === \"G3\") {} else if (cmd === \"G90\") {\n          state.relative = false;\n        } else if (cmd === \"G91\") {\n          state.relative = true;\n        } else if (cmd === \"G92\") {\n          var _line = state;\n          _line.x = args.x !== void 0 ? args.x : _line.x;\n          _line.y = args.y !== void 0 ? args.y : _line.y;\n          _line.z = args.z !== void 0 ? args.z : _line.z;\n          _line.e = args.e !== void 0 ? args.e : _line.e;\n          state = _line;\n        } else {}\n      };\n      for (var i = 0; i < lines.length; i++) {\n        _loop();\n      }\n      function addObject(vertex, extruding, i) {\n        var geometry = new BufferGeometry();\n        geometry.setAttribute(\"position\", new Float32BufferAttribute(vertex, 3));\n        var segments = new LineSegments(geometry, extruding ? extrudingMaterial : pathMaterial);\n        segments.name = \"layer\" + i;\n        object.add(segments);\n      }\n      var object = new Group();\n      object.name = \"gcode\";\n      if (this.splitLayer) {\n        for (var _i = 0; _i < layers.length; _i++) {\n          var layer = layers[_i];\n          addObject(layer.vertex, true, _i);\n          addObject(layer.pathVertex, false, _i);\n        }\n      } else {\n        var vertex = [],\n          pathVertex = [];\n        for (var _i2 = 0; _i2 < layers.length; _i2++) {\n          var _layer = layers[_i2];\n          var layerVertex = _layer.vertex;\n          var layerPathVertex = _layer.pathVertex;\n          for (var j = 0; j < layerVertex.length; j++) {\n            vertex.push(layerVertex[j]);\n          }\n          for (var _j = 0; _j < layerPathVertex.length; _j++) {\n            pathVertex.push(layerPathVertex[_j]);\n          }\n        }\n        addObject(vertex, true, layers.length);\n        addObject(pathVertex, false, layers.length);\n      }\n      object.quaternion.setFromEuler(new Euler(-Math.PI / 2, 0, 0));\n      return object;\n    }\n  }]);\n  return GCodeLoader;\n}(Loader);\nexport { GCodeLoader };","map":{"version":3,"names":["Loader","FileLoader","LineBasicMaterial","BufferGeometry","Float32BufferAttribute","LineSegments","Group","Euler","GCodeLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","splitLayer","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","state","x","y","z","f","extruding","relative","layers","currentLayer","pathMaterial","color","name","extrudingMaterial","newLayer","line","vertex","pathVertex","push","addSegment","p1","p2","delta","v1","v2","absolute","lines","replace","split","_loop","tokens","i","cmd","toUpperCase","args","splice","forEach","token","toLowerCase","parseFloat","substring","length","addObject","geometry","setAttribute","segments","object","add","layer","layerVertex","layerPathVertex","j","quaternion","setFromEuler","Math","PI"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/GCodeLoader.js"],"sourcesContent":["import { Loader, FileLoader, LineBasicMaterial, BufferGeometry, Float32BufferAttribute, LineSegments, Group, Euler } from \"three\";\nclass GCodeLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.splitLayer = false;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    let state = { x: 0, y: 0, z: 0, e: 0, f: 0, extruding: false, relative: false };\n    let layers = [];\n    let currentLayer = void 0;\n    const pathMaterial = new LineBasicMaterial({ color: 16711680 });\n    pathMaterial.name = \"path\";\n    const extrudingMaterial = new LineBasicMaterial({ color: 65280 });\n    extrudingMaterial.name = \"extruded\";\n    function newLayer(line) {\n      currentLayer = { vertex: [], pathVertex: [], z: line.z };\n      layers.push(currentLayer);\n    }\n    function addSegment(p1, p2) {\n      if (currentLayer === void 0) {\n        newLayer(p1);\n      }\n      if (state.extruding) {\n        currentLayer.vertex.push(p1.x, p1.y, p1.z);\n        currentLayer.vertex.push(p2.x, p2.y, p2.z);\n      } else {\n        currentLayer.pathVertex.push(p1.x, p1.y, p1.z);\n        currentLayer.pathVertex.push(p2.x, p2.y, p2.z);\n      }\n    }\n    function delta(v1, v2) {\n      return state.relative ? v2 : v2 - v1;\n    }\n    function absolute(v1, v2) {\n      return state.relative ? v1 + v2 : v2;\n    }\n    let lines = data.replace(/;.+/g, \"\").split(\"\\n\");\n    for (let i = 0; i < lines.length; i++) {\n      let tokens = lines[i].split(\" \");\n      let cmd = tokens[0].toUpperCase();\n      let args = {};\n      tokens.splice(1).forEach(function(token) {\n        if (token[0] !== void 0) {\n          let key = token[0].toLowerCase();\n          let value = parseFloat(token.substring(1));\n          args[key] = value;\n        }\n      });\n      if (cmd === \"G0\" || cmd === \"G1\") {\n        let line = {\n          x: args.x !== void 0 ? absolute(state.x, args.x) : state.x,\n          y: args.y !== void 0 ? absolute(state.y, args.y) : state.y,\n          z: args.z !== void 0 ? absolute(state.z, args.z) : state.z,\n          e: args.e !== void 0 ? absolute(state.e, args.e) : state.e,\n          f: args.f !== void 0 ? absolute(state.f, args.f) : state.f\n        };\n        if (delta(state.e, line.e) > 0) {\n          line.extruding = delta(state.e, line.e) > 0;\n          if (currentLayer == void 0 || line.z != currentLayer.z) {\n            newLayer(line);\n          }\n        }\n        addSegment(state, line);\n        state = line;\n      } else if (cmd === \"G2\" || cmd === \"G3\") {\n      } else if (cmd === \"G90\") {\n        state.relative = false;\n      } else if (cmd === \"G91\") {\n        state.relative = true;\n      } else if (cmd === \"G92\") {\n        let line = state;\n        line.x = args.x !== void 0 ? args.x : line.x;\n        line.y = args.y !== void 0 ? args.y : line.y;\n        line.z = args.z !== void 0 ? args.z : line.z;\n        line.e = args.e !== void 0 ? args.e : line.e;\n        state = line;\n      } else {\n      }\n    }\n    function addObject(vertex, extruding, i) {\n      let geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertex, 3));\n      let segments = new LineSegments(geometry, extruding ? extrudingMaterial : pathMaterial);\n      segments.name = \"layer\" + i;\n      object.add(segments);\n    }\n    const object = new Group();\n    object.name = \"gcode\";\n    if (this.splitLayer) {\n      for (let i = 0; i < layers.length; i++) {\n        let layer = layers[i];\n        addObject(layer.vertex, true, i);\n        addObject(layer.pathVertex, false, i);\n      }\n    } else {\n      const vertex = [], pathVertex = [];\n      for (let i = 0; i < layers.length; i++) {\n        let layer = layers[i];\n        let layerVertex = layer.vertex;\n        let layerPathVertex = layer.pathVertex;\n        for (let j = 0; j < layerVertex.length; j++) {\n          vertex.push(layerVertex[j]);\n        }\n        for (let j = 0; j < layerPathVertex.length; j++) {\n          pathVertex.push(layerPathVertex[j]);\n        }\n      }\n      addObject(vertex, true, layers.length);\n      addObject(pathVertex, false, layers.length);\n    }\n    object.quaternion.setFromEuler(new Euler(-Math.PI / 2, 0, 0));\n    return object;\n  }\n}\nexport {\n  GCodeLoader\n};\n"],"mappings":";;;;AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,sBAAsB,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,QAAQ,OAAO;AAAC,IAC5HC,WAAW,0BAAAC,OAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,OAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,WAAA;EACf,SAAAA,YAAYK,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,WAAA;IACnBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKG,UAAU,GAAG,KAAK;IAAC,OAAAH,KAAA;EAC1B;EAACI,YAAA,CAAAV,WAAA;IAAAW,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;MACrC,IAAMC,KAAK,GAAG,IAAI;MAClB,IAAMC,MAAM,GAAG,IAAI1B,UAAU,CAACyB,KAAK,CAACb,OAAO,CAAC;MAC5Cc,MAAM,CAACC,OAAO,CAACF,KAAK,CAACG,IAAI,CAAC;MAC1BF,MAAM,CAACG,gBAAgB,CAACJ,KAAK,CAACK,aAAa,CAAC;MAC5CJ,MAAM,CAACK,kBAAkB,CAACN,KAAK,CAACO,eAAe,CAAC;MAChDN,MAAM,CAACN,IAAI,CACTC,GAAG,EACH,UAASY,IAAI,EAAE;QACb,IAAI;UACFX,MAAM,CAACG,KAAK,CAACS,KAAK,CAACD,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAIX,OAAO,EAAE;YACXA,OAAO,CAACW,CAAC,CAAC;UACZ,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAClB;UACAV,KAAK,CAACb,OAAO,CAAC0B,SAAS,CAACjB,GAAG,CAAC;QAC9B;MACF,CAAC,EACDE,UAAU,EACVC,OACF,CAAC;IACH;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAe,MAAMK,IAAI,EAAE;MACV,IAAIC,KAAK,GAAG;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAER,CAAC,EAAE,CAAC;QAAES,CAAC,EAAE,CAAC;QAAEC,SAAS,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAM,CAAC;MAC/E,IAAIC,MAAM,GAAG,EAAE;MACf,IAAIC,YAAY,GAAG,KAAK,CAAC;MACzB,IAAMC,YAAY,GAAG,IAAIhD,iBAAiB,CAAC;QAAEiD,KAAK,EAAE;MAAS,CAAC,CAAC;MAC/DD,YAAY,CAACE,IAAI,GAAG,MAAM;MAC1B,IAAMC,iBAAiB,GAAG,IAAInD,iBAAiB,CAAC;QAAEiD,KAAK,EAAE;MAAM,CAAC,CAAC;MACjEE,iBAAiB,CAACD,IAAI,GAAG,UAAU;MACnC,SAASE,QAAQA,CAACC,IAAI,EAAE;QACtBN,YAAY,GAAG;UAAEO,MAAM,EAAE,EAAE;UAAEC,UAAU,EAAE,EAAE;UAAEb,CAAC,EAAEW,IAAI,CAACX;QAAE,CAAC;QACxDI,MAAM,CAACU,IAAI,CAACT,YAAY,CAAC;MAC3B;MACA,SAASU,UAAUA,CAACC,EAAE,EAAEC,EAAE,EAAE;QAC1B,IAAIZ,YAAY,KAAK,KAAK,CAAC,EAAE;UAC3BK,QAAQ,CAACM,EAAE,CAAC;QACd;QACA,IAAInB,KAAK,CAACK,SAAS,EAAE;UACnBG,YAAY,CAACO,MAAM,CAACE,IAAI,CAACE,EAAE,CAAClB,CAAC,EAAEkB,EAAE,CAACjB,CAAC,EAAEiB,EAAE,CAAChB,CAAC,CAAC;UAC1CK,YAAY,CAACO,MAAM,CAACE,IAAI,CAACG,EAAE,CAACnB,CAAC,EAAEmB,EAAE,CAAClB,CAAC,EAAEkB,EAAE,CAACjB,CAAC,CAAC;QAC5C,CAAC,MAAM;UACLK,YAAY,CAACQ,UAAU,CAACC,IAAI,CAACE,EAAE,CAAClB,CAAC,EAAEkB,EAAE,CAACjB,CAAC,EAAEiB,EAAE,CAAChB,CAAC,CAAC;UAC9CK,YAAY,CAACQ,UAAU,CAACC,IAAI,CAACG,EAAE,CAACnB,CAAC,EAAEmB,EAAE,CAAClB,CAAC,EAAEkB,EAAE,CAACjB,CAAC,CAAC;QAChD;MACF;MACA,SAASkB,KAAKA,CAACC,EAAE,EAAEC,EAAE,EAAE;QACrB,OAAOvB,KAAK,CAACM,QAAQ,GAAGiB,EAAE,GAAGA,EAAE,GAAGD,EAAE;MACtC;MACA,SAASE,QAAQA,CAACF,EAAE,EAAEC,EAAE,EAAE;QACxB,OAAOvB,KAAK,CAACM,QAAQ,GAAGgB,EAAE,GAAGC,EAAE,GAAGA,EAAE;MACtC;MACA,IAAIE,KAAK,GAAG1B,IAAI,CAAC2B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;MAAC,IAAAC,KAAA,YAAAA,MAAA,EACV;QACrC,IAAIC,MAAM,GAAGJ,KAAK,CAACK,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC;QAChC,IAAII,GAAG,GAAGF,MAAM,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QACjC,IAAIC,IAAI,GAAG,CAAC,CAAC;QACbJ,MAAM,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;UACvC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;YACvB,IAAI1D,GAAG,GAAG0D,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;YAChC,IAAI1D,KAAK,GAAG2D,UAAU,CAACF,KAAK,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC1CN,IAAI,CAACvD,GAAG,CAAC,GAAGC,KAAK;UACnB;QACF,CAAC,CAAC;QACF,IAAIoD,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;UAChC,IAAIjB,IAAI,GAAG;YACTb,CAAC,EAAEgC,IAAI,CAAChC,CAAC,KAAK,KAAK,CAAC,GAAGuB,QAAQ,CAACxB,KAAK,CAACC,CAAC,EAAEgC,IAAI,CAAChC,CAAC,CAAC,GAAGD,KAAK,CAACC,CAAC;YAC1DC,CAAC,EAAE+B,IAAI,CAAC/B,CAAC,KAAK,KAAK,CAAC,GAAGsB,QAAQ,CAACxB,KAAK,CAACE,CAAC,EAAE+B,IAAI,CAAC/B,CAAC,CAAC,GAAGF,KAAK,CAACE,CAAC;YAC1DC,CAAC,EAAE8B,IAAI,CAAC9B,CAAC,KAAK,KAAK,CAAC,GAAGqB,QAAQ,CAACxB,KAAK,CAACG,CAAC,EAAE8B,IAAI,CAAC9B,CAAC,CAAC,GAAGH,KAAK,CAACG,CAAC;YAC1DR,CAAC,EAAEsC,IAAI,CAACtC,CAAC,KAAK,KAAK,CAAC,GAAG6B,QAAQ,CAACxB,KAAK,CAACL,CAAC,EAAEsC,IAAI,CAACtC,CAAC,CAAC,GAAGK,KAAK,CAACL,CAAC;YAC1DS,CAAC,EAAE6B,IAAI,CAAC7B,CAAC,KAAK,KAAK,CAAC,GAAGoB,QAAQ,CAACxB,KAAK,CAACI,CAAC,EAAE6B,IAAI,CAAC7B,CAAC,CAAC,GAAGJ,KAAK,CAACI;UAC3D,CAAC;UACD,IAAIiB,KAAK,CAACrB,KAAK,CAACL,CAAC,EAAEmB,IAAI,CAACnB,CAAC,CAAC,GAAG,CAAC,EAAE;YAC9BmB,IAAI,CAACT,SAAS,GAAGgB,KAAK,CAACrB,KAAK,CAACL,CAAC,EAAEmB,IAAI,CAACnB,CAAC,CAAC,GAAG,CAAC;YAC3C,IAAIa,YAAY,IAAI,KAAK,CAAC,IAAIM,IAAI,CAACX,CAAC,IAAIK,YAAY,CAACL,CAAC,EAAE;cACtDU,QAAQ,CAACC,IAAI,CAAC;YAChB;UACF;UACAI,UAAU,CAAClB,KAAK,EAAEc,IAAI,CAAC;UACvBd,KAAK,GAAGc,IAAI;QACd,CAAC,MAAM,IAAIiB,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE,CACzC,CAAC,MAAM,IAAIA,GAAG,KAAK,KAAK,EAAE;UACxB/B,KAAK,CAACM,QAAQ,GAAG,KAAK;QACxB,CAAC,MAAM,IAAIyB,GAAG,KAAK,KAAK,EAAE;UACxB/B,KAAK,CAACM,QAAQ,GAAG,IAAI;QACvB,CAAC,MAAM,IAAIyB,GAAG,KAAK,KAAK,EAAE;UACxB,IAAIjB,KAAI,GAAGd,KAAK;UAChBc,KAAI,CAACb,CAAC,GAAGgC,IAAI,CAAChC,CAAC,KAAK,KAAK,CAAC,GAAGgC,IAAI,CAAChC,CAAC,GAAGa,KAAI,CAACb,CAAC;UAC5Ca,KAAI,CAACZ,CAAC,GAAG+B,IAAI,CAAC/B,CAAC,KAAK,KAAK,CAAC,GAAG+B,IAAI,CAAC/B,CAAC,GAAGY,KAAI,CAACZ,CAAC;UAC5CY,KAAI,CAACX,CAAC,GAAG8B,IAAI,CAAC9B,CAAC,KAAK,KAAK,CAAC,GAAG8B,IAAI,CAAC9B,CAAC,GAAGW,KAAI,CAACX,CAAC;UAC5CW,KAAI,CAACnB,CAAC,GAAGsC,IAAI,CAACtC,CAAC,KAAK,KAAK,CAAC,GAAGsC,IAAI,CAACtC,CAAC,GAAGmB,KAAI,CAACnB,CAAC;UAC5CK,KAAK,GAAGc,KAAI;QACd,CAAC,MAAM,CACP;MACF,CAAC;MAzCD,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACe,MAAM,EAAEV,CAAC,EAAE;QAAAF,KAAA;MAAA;MA0CrC,SAASa,SAASA,CAAC1B,MAAM,EAAEV,SAAS,EAAEyB,CAAC,EAAE;QACvC,IAAIY,QAAQ,GAAG,IAAIhF,cAAc,CAAC,CAAC;QACnCgF,QAAQ,CAACC,YAAY,CAAC,UAAU,EAAE,IAAIhF,sBAAsB,CAACoD,MAAM,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI6B,QAAQ,GAAG,IAAIhF,YAAY,CAAC8E,QAAQ,EAAErC,SAAS,GAAGO,iBAAiB,GAAGH,YAAY,CAAC;QACvFmC,QAAQ,CAACjC,IAAI,GAAG,OAAO,GAAGmB,CAAC;QAC3Be,MAAM,CAACC,GAAG,CAACF,QAAQ,CAAC;MACtB;MACA,IAAMC,MAAM,GAAG,IAAIhF,KAAK,CAAC,CAAC;MAC1BgF,MAAM,CAAClC,IAAI,GAAG,OAAO;MACrB,IAAI,IAAI,CAACnC,UAAU,EAAE;QACnB,KAAK,IAAIsD,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGvB,MAAM,CAACiC,MAAM,EAAEV,EAAC,EAAE,EAAE;UACtC,IAAIiB,KAAK,GAAGxC,MAAM,CAACuB,EAAC,CAAC;UACrBW,SAAS,CAACM,KAAK,CAAChC,MAAM,EAAE,IAAI,EAAEe,EAAC,CAAC;UAChCW,SAAS,CAACM,KAAK,CAAC/B,UAAU,EAAE,KAAK,EAAEc,EAAC,CAAC;QACvC;MACF,CAAC,MAAM;QACL,IAAMf,MAAM,GAAG,EAAE;UAAEC,UAAU,GAAG,EAAE;QAClC,KAAK,IAAIc,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGvB,MAAM,CAACiC,MAAM,EAAEV,GAAC,EAAE,EAAE;UACtC,IAAIiB,MAAK,GAAGxC,MAAM,CAACuB,GAAC,CAAC;UACrB,IAAIkB,WAAW,GAAGD,MAAK,CAAChC,MAAM;UAC9B,IAAIkC,eAAe,GAAGF,MAAK,CAAC/B,UAAU;UACtC,KAAK,IAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACR,MAAM,EAAEU,CAAC,EAAE,EAAE;YAC3CnC,MAAM,CAACE,IAAI,CAAC+B,WAAW,CAACE,CAAC,CAAC,CAAC;UAC7B;UACA,KAAK,IAAIA,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGD,eAAe,CAACT,MAAM,EAAEU,EAAC,EAAE,EAAE;YAC/ClC,UAAU,CAACC,IAAI,CAACgC,eAAe,CAACC,EAAC,CAAC,CAAC;UACrC;QACF;QACAT,SAAS,CAAC1B,MAAM,EAAE,IAAI,EAAER,MAAM,CAACiC,MAAM,CAAC;QACtCC,SAAS,CAACzB,UAAU,EAAE,KAAK,EAAET,MAAM,CAACiC,MAAM,CAAC;MAC7C;MACAK,MAAM,CAACM,UAAU,CAACC,YAAY,CAAC,IAAItF,KAAK,CAAC,CAACuF,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7D,OAAOT,MAAM;IACf;EAAC;EAAA,OAAA9E,WAAA;AAAA,EAvIuBR,MAAM;AAyIhC,SACEQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}