{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport default function potpack(boxes) {\n  // calculate total box area and maximum box width\n  var area = 0;\n  var maxWidth = 0;\n  var _iterator = _createForOfIteratorHelper(boxes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var box = _step.value;\n      area += box.w * box.h;\n      maxWidth = Math.max(maxWidth, box.w);\n    }\n\n    // sort the boxes for insertion by height, descending\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  boxes.sort(function (a, b) {\n    return b.h - a.h;\n  });\n\n  // aim for a squarish resulting container,\n  // slightly adjusted for sub-100% space utilization\n  var startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth);\n\n  // start with a single empty space, unbounded at the bottom\n  var spaces = [{\n    x: 0,\n    y: 0,\n    w: startWidth,\n    h: Infinity\n  }];\n  var width = 0;\n  var height = 0;\n  var _iterator2 = _createForOfIteratorHelper(boxes),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _box = _step2.value;\n      // look through spaces backwards so that we check smaller spaces first\n      for (var i = spaces.length - 1; i >= 0; i--) {\n        var space = spaces[i];\n\n        // look for empty spaces that can accommodate the current box\n        if (_box.w > space.w || _box.h > space.h) continue;\n\n        // found the space; add the box to its top-left corner\n        // |-------|-------|\n        // |  box  |       |\n        // |_______|       |\n        // |         space |\n        // |_______________|\n        _box.x = space.x;\n        _box.y = space.y;\n        height = Math.max(height, _box.y + _box.h);\n        width = Math.max(width, _box.x + _box.w);\n        if (_box.w === space.w && _box.h === space.h) {\n          // space matches the box exactly; remove it\n          var last = spaces.pop();\n          if (i < spaces.length) spaces[i] = last;\n        } else if (_box.h === space.h) {\n          // space matches the box height; update it accordingly\n          // |-------|---------------|\n          // |  box  | updated space |\n          // |_______|_______________|\n          space.x += _box.w;\n          space.w -= _box.w;\n        } else if (_box.w === space.w) {\n          // space matches the box width; update it accordingly\n          // |---------------|\n          // |      box      |\n          // |_______________|\n          // | updated space |\n          // |_______________|\n          space.y += _box.h;\n          space.h -= _box.h;\n        } else {\n          // otherwise the box splits the space into two spaces\n          // |-------|-----------|\n          // |  box  | new space |\n          // |_______|___________|\n          // | updated space     |\n          // |___________________|\n          spaces.push({\n            x: space.x + _box.w,\n            y: space.y,\n            w: space.w - _box.w,\n            h: _box.h\n          });\n          space.y += _box.h;\n          space.h -= _box.h;\n        }\n        break;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    w: width,\n    // container width\n    h: height,\n    // container height\n    fill: area / (width * height) || 0 // space utilization\n  };\n}","map":{"version":3,"names":["potpack","boxes","area","maxWidth","_iterator","_createForOfIteratorHelper","_step","s","n","done","box","value","w","h","Math","max","err","e","f","sort","a","b","startWidth","ceil","sqrt","spaces","x","y","Infinity","width","height","_iterator2","_step2","i","length","space","last","pop","push","fill"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/potpack@1.0.2/node_modules/potpack/index.mjs"],"sourcesContent":["\nexport default function potpack(boxes) {\n\n    // calculate total box area and maximum box width\n    let area = 0;\n    let maxWidth = 0;\n\n    for (const box of boxes) {\n        area += box.w * box.h;\n        maxWidth = Math.max(maxWidth, box.w);\n    }\n\n    // sort the boxes for insertion by height, descending\n    boxes.sort((a, b) => b.h - a.h);\n\n    // aim for a squarish resulting container,\n    // slightly adjusted for sub-100% space utilization\n    const startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth);\n\n    // start with a single empty space, unbounded at the bottom\n    const spaces = [{x: 0, y: 0, w: startWidth, h: Infinity}];\n\n    let width = 0;\n    let height = 0;\n\n    for (const box of boxes) {\n        // look through spaces backwards so that we check smaller spaces first\n        for (let i = spaces.length - 1; i >= 0; i--) {\n            const space = spaces[i];\n\n            // look for empty spaces that can accommodate the current box\n            if (box.w > space.w || box.h > space.h) continue;\n\n            // found the space; add the box to its top-left corner\n            // |-------|-------|\n            // |  box  |       |\n            // |_______|       |\n            // |         space |\n            // |_______________|\n            box.x = space.x;\n            box.y = space.y;\n\n            height = Math.max(height, box.y + box.h);\n            width = Math.max(width, box.x + box.w);\n\n            if (box.w === space.w && box.h === space.h) {\n                // space matches the box exactly; remove it\n                const last = spaces.pop();\n                if (i < spaces.length) spaces[i] = last;\n\n            } else if (box.h === space.h) {\n                // space matches the box height; update it accordingly\n                // |-------|---------------|\n                // |  box  | updated space |\n                // |_______|_______________|\n                space.x += box.w;\n                space.w -= box.w;\n\n            } else if (box.w === space.w) {\n                // space matches the box width; update it accordingly\n                // |---------------|\n                // |      box      |\n                // |_______________|\n                // | updated space |\n                // |_______________|\n                space.y += box.h;\n                space.h -= box.h;\n\n            } else {\n                // otherwise the box splits the space into two spaces\n                // |-------|-----------|\n                // |  box  | new space |\n                // |_______|___________|\n                // | updated space     |\n                // |___________________|\n                spaces.push({\n                    x: space.x + box.w,\n                    y: space.y,\n                    w: space.w - box.w,\n                    h: box.h\n                });\n                space.y += box.h;\n                space.h -= box.h;\n            }\n            break;\n        }\n    }\n\n    return {\n        w: width, // container width\n        h: height, // container height\n        fill: (area / (width * height)) || 0 // space utilization\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}