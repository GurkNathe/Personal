{"ast":null,"code":"var DIACRITICS_CHARCODE_START = 192;\nvar DIACRITICS_CHARCODE_END = 383;\nvar CHARCODE_REPLACE_MAPPING = [65, 65, 65, 65, 65, 65, 65, 67, 69, 69, 69, 69, 73, 73, 73, 73, 69, 78, 79, 79, 79, 79, 79, null, 79, 85, 85, 85, 85, 89, 80, 115, 97, 97, 97, 97, 97, 97, 97, 99, 101, 101, 101, 101, 105, 105, 105, 105, 101, 110, 111, 111, 111, 111, 111, null, 111, 117, 117, 117, 117, 121, 112, 121, 65, 97, 65, 97, 65, 97, 67, 99, 67, 99, 67, 99, 67, 99, 68, 100, 68, 100, 69, 101, 69, 101, 69, 101, 69, 101, 69, 101, 71, 103, 71, 103, 71, 103, 71, 103, 72, 104, 72, 104, 73, 105, 73, 105, 73, 105, 73, 105, 73, 105, 73, 105, 74, 106, 75, 107, 107, 76, 108, 76, 108, 76, 108, 76, 108, 76, 108, 78, 110, 78, 110, 78, 110, 110, 78, 110, 79, 111, 79, 111, 79, 111, 79, 111, 82, 114, 82, 114, 82, 114, 83, 115, 83, 115, 83, 115, 83, 115, 84, 116, 84, 116, 84, 116, 85, 117, 85, 117, 85, 117, 85, 117, 85, 117, 85, 117, 87, 119, 89, 121, 89, 90, 122, 90, 122, 90, 122, 115];\nfunction replaceChar(charCode) {\n  if (charCode < DIACRITICS_CHARCODE_START || charCode > DIACRITICS_CHARCODE_END) return charCode;\n  /* c8 ignore next  */\n  return CHARCODE_REPLACE_MAPPING[charCode - DIACRITICS_CHARCODE_START] || charCode;\n}\nexport function replaceDiacritics(str) {\n  var stringCharCode = [];\n  for (var idx = 0; idx < str.length; idx++) {\n    stringCharCode[idx] = replaceChar(str.charCodeAt(idx));\n  }\n  return String.fromCharCode.apply(String, stringCharCode);\n}","map":{"version":3,"names":["DIACRITICS_CHARCODE_START","DIACRITICS_CHARCODE_END","CHARCODE_REPLACE_MAPPING","replaceChar","charCode","replaceDiacritics","str","stringCharCode","idx","length","charCodeAt","String","fromCharCode","apply"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.0.3/node_modules/@orama/orama/src/components/tokenizer/diacritics.ts"],"sourcesContent":["const DIACRITICS_CHARCODE_START = 192\nconst DIACRITICS_CHARCODE_END = 383\n\nconst CHARCODE_REPLACE_MAPPING = [\n  65,\n  65,\n  65,\n  65,\n  65,\n  65,\n  65,\n  67,\n  69,\n  69,\n  69,\n  69,\n  73,\n  73,\n  73,\n  73,\n  69,\n  78,\n  79,\n  79,\n  79,\n  79,\n  79,\n  null,\n  79,\n  85,\n  85,\n  85,\n  85,\n  89,\n  80,\n  115,\n  97,\n  97,\n  97,\n  97,\n  97,\n  97,\n  97,\n  99,\n  101,\n  101,\n  101,\n  101,\n  105,\n  105,\n  105,\n  105,\n  101,\n  110,\n  111,\n  111,\n  111,\n  111,\n  111,\n  null,\n  111,\n  117,\n  117,\n  117,\n  117,\n  121,\n  112,\n  121,\n  65,\n  97,\n  65,\n  97,\n  65,\n  97,\n  67,\n  99,\n  67,\n  99,\n  67,\n  99,\n  67,\n  99,\n  68,\n  100,\n  68,\n  100,\n  69,\n  101,\n  69,\n  101,\n  69,\n  101,\n  69,\n  101,\n  69,\n  101,\n  71,\n  103,\n  71,\n  103,\n  71,\n  103,\n  71,\n  103,\n  72,\n  104,\n  72,\n  104,\n  73,\n  105,\n  73,\n  105,\n  73,\n  105,\n  73,\n  105,\n  73,\n  105,\n  73,\n  105,\n  74,\n  106,\n  75,\n  107,\n  107,\n  76,\n  108,\n  76,\n  108,\n  76,\n  108,\n  76,\n  108,\n  76,\n  108,\n  78,\n  110,\n  78,\n  110,\n  78,\n  110,\n  110,\n  78,\n  110,\n  79,\n  111,\n  79,\n  111,\n  79,\n  111,\n  79,\n  111,\n  82,\n  114,\n  82,\n  114,\n  82,\n  114,\n  83,\n  115,\n  83,\n  115,\n  83,\n  115,\n  83,\n  115,\n  84,\n  116,\n  84,\n  116,\n  84,\n  116,\n  85,\n  117,\n  85,\n  117,\n  85,\n  117,\n  85,\n  117,\n  85,\n  117,\n  85,\n  117,\n  87,\n  119,\n  89,\n  121,\n  89,\n  90,\n  122,\n  90,\n  122,\n  90,\n  122,\n  115,\n]\n\nfunction replaceChar(charCode: number): number {\n  if (charCode < DIACRITICS_CHARCODE_START || charCode > DIACRITICS_CHARCODE_END) return charCode\n\n  /* c8 ignore next  */\n  return CHARCODE_REPLACE_MAPPING[charCode - DIACRITICS_CHARCODE_START] || charCode\n}\n\nexport function replaceDiacritics(str: string): string {\n  const stringCharCode = []\n  for (let idx = 0; idx < str.length; idx++) {\n    stringCharCode[idx] = replaceChar(str.charCodeAt(idx))\n  }\n  return String.fromCharCode(...stringCharCode)\n}\n"],"mappings":"AAAA,IAAMA,yBAAA,GAA4B;AAClC,IAAMC,uBAAA,GAA0B;AAEhC,IAAMC,wBAAA,GAA2B,CAC/B,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAAI,EACJ,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IAAI,EACJ,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,IACD;AAED,SAASC,YAAYC,QAAgB,EAAU;EAC7C,IAAIA,QAAA,GAAWJ,yBAAA,IAA6BI,QAAA,GAAWH,uBAAA,EAAyB,OAAOG,QAAA;EAEvF;EACA,OAAOF,wBAAwB,CAACE,QAAA,GAAWJ,yBAAA,CAA0B,IAAII,QAAA;AAC3E;AAEA,OAAO,SAASC,kBAAkBC,GAAW,EAAU;EACrD,IAAMC,cAAA,GAAiB,EAAE;EACzB,KAAK,IAAIC,GAAA,GAAM,GAAGA,GAAA,GAAMF,GAAA,CAAIG,MAAM,EAAED,GAAA,IAAO;IACzCD,cAAc,CAACC,GAAA,CAAI,GAAGL,WAAA,CAAYG,GAAA,CAAII,UAAU,CAACF,GAAA;EACnD;EACA,OAAOG,MAAA,CAAOC,YAAY,CAAAC,KAAA,CAAnBF,MAAA,EAAuBJ,cAAA;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}