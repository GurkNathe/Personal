{"ast":null,"code":"import _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { BufferGeometry, Vector3, Float32BufferAttribute } from \"three\";\nvar ParametricGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  _inherits(ParametricGeometry, _BufferGeometry);\n  var _super = _createSuper(ParametricGeometry);\n  function ParametricGeometry() {\n    var _this;\n    var func = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (u, v, target) {\n      return target.set(u, v, Math.cos(u) * Math.sin(v));\n    };\n    var slices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 8;\n    var stacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    _classCallCheck(this, ParametricGeometry);\n    _this = _super.call(this);\n    _this.type = \"ParametricGeometry\";\n    _this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 1e-5;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n      p1 = new Vector3();\n    var pu = new Vector3(),\n      pv = new Vector3();\n    var sliceCount = slices + 1;\n    for (var i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n      for (var j = 0; j <= slices; j++) {\n        var u = j / slices;\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z);\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        }\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n        uvs.push(u, v);\n      }\n    }\n    for (var _i = 0; _i < stacks; _i++) {\n      for (var _j = 0; _j < slices; _j++) {\n        var a = _i * sliceCount + _j;\n        var b = _i * sliceCount + _j + 1;\n        var c = (_i + 1) * sliceCount + _j + 1;\n        var d = (_i + 1) * sliceCount + _j;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n    _this.setIndex(indices);\n    _this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    _this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    _this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n    return _this;\n  }\n  return _createClass(ParametricGeometry);\n}(BufferGeometry);\nexport { ParametricGeometry };","map":{"version":3,"names":["BufferGeometry","Vector3","Float32BufferAttribute","ParametricGeometry","_BufferGeometry","_inherits","_super","_createSuper","_this","func","arguments","length","undefined","u","v","target","set","Math","cos","sin","slices","stacks","_classCallCheck","call","type","parameters","indices","vertices","normals","uvs","EPS","normal","p0","p1","pu","pv","sliceCount","i","j","push","x","y","z","subVectors","crossVectors","normalize","a","b","c","d","setIndex","setAttribute","_createClass"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/geometries/ParametricGeometry.js"],"sourcesContent":["import { BufferGeometry, Vector3, Float32BufferAttribute } from \"three\";\nclass ParametricGeometry extends BufferGeometry {\n  constructor(func = (u, v, target) => target.set(u, v, Math.cos(u) * Math.sin(v)), slices = 8, stacks = 8) {\n    super();\n    this.type = \"ParametricGeometry\";\n    this.parameters = {\n      func,\n      slices,\n      stacks\n    };\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n    const EPS = 1e-5;\n    const normal = new Vector3();\n    const p0 = new Vector3(), p1 = new Vector3();\n    const pu = new Vector3(), pv = new Vector3();\n    const sliceCount = slices + 1;\n    for (let i = 0; i <= stacks; i++) {\n      const v = i / stacks;\n      for (let j = 0; j <= slices; j++) {\n        const u = j / slices;\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z);\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        }\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z);\n        uvs.push(u, v);\n      }\n    }\n    for (let i = 0; i < stacks; i++) {\n      for (let j = 0; j < slices; j++) {\n        const a = i * sliceCount + j;\n        const b = i * sliceCount + j + 1;\n        const c = (i + 1) * sliceCount + j + 1;\n        const d = (i + 1) * sliceCount + j;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n    this.setIndex(indices);\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    this.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n  }\n}\nexport {\n  ParametricGeometry\n};\n"],"mappings":";;;;AAAA,SAASA,cAAc,EAAEC,OAAO,EAAEC,sBAAsB,QAAQ,OAAO;AAAC,IAClEC,kBAAkB,0BAAAC,eAAA;EAAAC,SAAA,CAAAF,kBAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,kBAAA;EACtB,SAAAA,mBAAA,EAA0G;IAAA,IAAAK,KAAA;IAAA,IAA9FC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,UAACG,CAAC,EAAEC,CAAC,EAAEC,MAAM;MAAA,OAAKA,MAAM,CAACC,GAAG,CAACH,CAAC,EAAEC,CAAC,EAAEG,IAAI,CAACC,GAAG,CAACL,CAAC,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;IAAA;IAAA,IAAEM,MAAM,GAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAA,IAAEW,MAAM,GAAAX,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAAY,eAAA,OAAAnB,kBAAA;IACtGK,KAAA,GAAAF,MAAA,CAAAiB,IAAA;IACAf,KAAA,CAAKgB,IAAI,GAAG,oBAAoB;IAChChB,KAAA,CAAKiB,UAAU,GAAG;MAChBhB,IAAI,EAAJA,IAAI;MACJW,MAAM,EAANA,MAAM;MACNC,MAAM,EAANA;IACF,CAAC;IACD,IAAMK,OAAO,GAAG,EAAE;IAClB,IAAMC,QAAQ,GAAG,EAAE;IACnB,IAAMC,OAAO,GAAG,EAAE;IAClB,IAAMC,GAAG,GAAG,EAAE;IACd,IAAMC,GAAG,GAAG,IAAI;IAChB,IAAMC,MAAM,GAAG,IAAI9B,OAAO,CAAC,CAAC;IAC5B,IAAM+B,EAAE,GAAG,IAAI/B,OAAO,CAAC,CAAC;MAAEgC,EAAE,GAAG,IAAIhC,OAAO,CAAC,CAAC;IAC5C,IAAMiC,EAAE,GAAG,IAAIjC,OAAO,CAAC,CAAC;MAAEkC,EAAE,GAAG,IAAIlC,OAAO,CAAC,CAAC;IAC5C,IAAMmC,UAAU,GAAGhB,MAAM,GAAG,CAAC;IAC7B,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIhB,MAAM,EAAEgB,CAAC,EAAE,EAAE;MAChC,IAAMvB,CAAC,GAAGuB,CAAC,GAAGhB,MAAM;MACpB,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIlB,MAAM,EAAEkB,CAAC,EAAE,EAAE;QAChC,IAAMzB,CAAC,GAAGyB,CAAC,GAAGlB,MAAM;QACpBX,IAAI,CAACI,CAAC,EAAEC,CAAC,EAAEkB,EAAE,CAAC;QACdL,QAAQ,CAACY,IAAI,CAACP,EAAE,CAACQ,CAAC,EAAER,EAAE,CAACS,CAAC,EAAET,EAAE,CAACU,CAAC,CAAC;QAC/B,IAAI7B,CAAC,GAAGiB,GAAG,IAAI,CAAC,EAAE;UAChBrB,IAAI,CAACI,CAAC,GAAGiB,GAAG,EAAEhB,CAAC,EAAEmB,EAAE,CAAC;UACpBC,EAAE,CAACS,UAAU,CAACX,EAAE,EAAEC,EAAE,CAAC;QACvB,CAAC,MAAM;UACLxB,IAAI,CAACI,CAAC,GAAGiB,GAAG,EAAEhB,CAAC,EAAEmB,EAAE,CAAC;UACpBC,EAAE,CAACS,UAAU,CAACV,EAAE,EAAED,EAAE,CAAC;QACvB;QACA,IAAIlB,CAAC,GAAGgB,GAAG,IAAI,CAAC,EAAE;UAChBrB,IAAI,CAACI,CAAC,EAAEC,CAAC,GAAGgB,GAAG,EAAEG,EAAE,CAAC;UACpBE,EAAE,CAACQ,UAAU,CAACX,EAAE,EAAEC,EAAE,CAAC;QACvB,CAAC,MAAM;UACLxB,IAAI,CAACI,CAAC,EAAEC,CAAC,GAAGgB,GAAG,EAAEG,EAAE,CAAC;UACpBE,EAAE,CAACQ,UAAU,CAACV,EAAE,EAAED,EAAE,CAAC;QACvB;QACAD,MAAM,CAACa,YAAY,CAACV,EAAE,EAAEC,EAAE,CAAC,CAACU,SAAS,CAAC,CAAC;QACvCjB,OAAO,CAACW,IAAI,CAACR,MAAM,CAACS,CAAC,EAAET,MAAM,CAACU,CAAC,EAAEV,MAAM,CAACW,CAAC,CAAC;QAC1Cb,GAAG,CAACU,IAAI,CAAC1B,CAAC,EAAEC,CAAC,CAAC;MAChB;IACF;IACA,KAAK,IAAIuB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGhB,MAAM,EAAEgB,EAAC,EAAE,EAAE;MAC/B,KAAK,IAAIC,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGlB,MAAM,EAAEkB,EAAC,EAAE,EAAE;QAC/B,IAAMQ,CAAC,GAAGT,EAAC,GAAGD,UAAU,GAAGE,EAAC;QAC5B,IAAMS,CAAC,GAAGV,EAAC,GAAGD,UAAU,GAAGE,EAAC,GAAG,CAAC;QAChC,IAAMU,CAAC,GAAG,CAACX,EAAC,GAAG,CAAC,IAAID,UAAU,GAAGE,EAAC,GAAG,CAAC;QACtC,IAAMW,CAAC,GAAG,CAACZ,EAAC,GAAG,CAAC,IAAID,UAAU,GAAGE,EAAC;QAClCZ,OAAO,CAACa,IAAI,CAACO,CAAC,EAAEC,CAAC,EAAEE,CAAC,CAAC;QACrBvB,OAAO,CAACa,IAAI,CAACQ,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MACvB;IACF;IACAzC,KAAA,CAAK0C,QAAQ,CAACxB,OAAO,CAAC;IACtBlB,KAAA,CAAK2C,YAAY,CAAC,UAAU,EAAE,IAAIjD,sBAAsB,CAACyB,QAAQ,EAAE,CAAC,CAAC,CAAC;IACtEnB,KAAA,CAAK2C,YAAY,CAAC,QAAQ,EAAE,IAAIjD,sBAAsB,CAAC0B,OAAO,EAAE,CAAC,CAAC,CAAC;IACnEpB,KAAA,CAAK2C,YAAY,CAAC,IAAI,EAAE,IAAIjD,sBAAsB,CAAC2B,GAAG,EAAE,CAAC,CAAC,CAAC;IAAC,OAAArB,KAAA;EAC9D;EAAC,OAAA4C,YAAA,CAAAjD,kBAAA;AAAA,EAzD8BH,cAAc;AA2D/C,SACEG,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}