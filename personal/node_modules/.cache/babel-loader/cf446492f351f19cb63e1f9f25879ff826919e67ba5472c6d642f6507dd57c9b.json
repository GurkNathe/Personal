{"ast":null,"code":"var _globalThis_process;\nimport { kInsertions, kRemovals } from '../types.js';\n// Web platforms don't have process. React-Native doesn't have process.emitWarning.\nconst warn = ((_globalThis_process = globalThis.process) === null || _globalThis_process === void 0 ? void 0 : _globalThis_process.emitWarning) ?? function emitWarning(message, options) {\n  console.warn(`[WARNING] [${options.code}] ${message}`);\n};\nexport function trackInsertion(orama) {\n  if (typeof orama[kInsertions] !== 'number') {\n    queueMicrotask(() => {\n      orama[kInsertions] = undefined;\n    });\n    orama[kInsertions] = 0;\n  }\n  if (orama[kInsertions] > 1000) {\n    warn(\"Orama's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread or, in alternative, please use insertMultiple.\", {\n      code: 'ORAMA0001'\n    });\n    orama[kInsertions] = -1;\n  } else if (orama[kInsertions] >= 0) {\n    orama[kInsertions]++;\n  }\n}\nexport function trackRemoval(orama) {\n  if (typeof orama[kRemovals] !== 'number') {\n    queueMicrotask(() => {\n      orama[kRemovals] = undefined;\n    });\n    orama[kRemovals] = 0;\n  }\n  if (orama[kRemovals] > 1000) {\n    warn(\"Orama's remove operation is synchronous. Please avoid removing a large number of document in a single operation in order not to block the main thread, in alternative, please use updateMultiple.\", {\n      code: 'ORAMA0002'\n    });\n    orama[kRemovals] = -1;\n  } else if (orama[kRemovals] >= 0) {\n    orama[kRemovals]++;\n  }\n}","map":{"version":3,"names":["_globalThis_process","kInsertions","kRemovals","warn","globalThis","process","emitWarning","message","options","console","code","trackInsertion","orama","queueMicrotask","undefined","trackRemoval"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.2.11/node_modules/@orama/orama/src/components/sync-blocking-checker.ts"],"sourcesContent":["import { AnyOrama, kInsertions, kRemovals } from '../types.js'\n\n// Web platforms don't have process. React-Native doesn't have process.emitWarning.\nconst warn =\n  globalThis.process?.emitWarning ??\n  function emitWarning(message: string, options: { code: string }) {\n    console.warn(`[WARNING] [${options.code}] ${message}`)\n  }\n\nexport function trackInsertion<T extends AnyOrama>(orama: T): void {\n  if (typeof orama[kInsertions] !== 'number') {\n    queueMicrotask(() => {\n      orama[kInsertions] = undefined\n    })\n\n    orama[kInsertions] = 0\n  }\n\n  if (orama[kInsertions]! > 1000) {\n    warn(\n      \"Orama's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread or, in alternative, please use insertMultiple.\",\n      { code: 'ORAMA0001' },\n    )\n\n    orama[kInsertions] = -1\n  } else if (orama[kInsertions] >= 0) {\n    orama[kInsertions]++\n  }\n}\n\nexport function trackRemoval<T extends AnyOrama>(orama: T): void {\n  if (typeof orama[kRemovals] !== 'number') {\n    queueMicrotask(() => {\n      orama[kRemovals] = undefined\n    })\n\n    orama[kRemovals] = 0\n  }\n\n  if (orama[kRemovals]! > 1000) {\n    warn(\n      \"Orama's remove operation is synchronous. Please avoid removing a large number of document in a single operation in order not to block the main thread, in alternative, please use updateMultiple.\",\n      { code: 'ORAMA0002' },\n    )\n\n    orama[kRemovals] = -1\n  } else if (orama[kRemovals] >= 0) {\n    orama[kRemovals]++\n  }\n}\n"],"mappings":"IAIEA,mBAAA;AAJF,SAAmBC,WAAW,EAAEC,SAAS,QAAQ;AAEjD;AACA,MAAMC,IAAA,GACJ,EAAAH,mBAAA,GAAAI,UAAA,CAAWC,OAAO,cAAlBL,mBAAA,uBAAAA,mBAAA,CAAoBM,WAAW,KAC/B,SAASA,YAAYC,OAAe,EAAEC,OAAyB,EAAE;EAC/DC,OAAA,CAAQN,IAAI,CAAE,cAAaK,OAAA,CAAQE,IAAK,KAAIH,OAAQ,EAAC;AACvD;AAEF,OAAO,SAASI,eAAmCC,KAAQ,EAAQ;EACjE,IAAI,OAAOA,KAAK,CAACX,WAAA,CAAY,KAAK,UAAU;IAC1CY,cAAA,CAAe,MAAM;MACnBD,KAAK,CAACX,WAAA,CAAY,GAAGa,SAAA;IACvB;IAEAF,KAAK,CAACX,WAAA,CAAY,GAAG;EACvB;EAEA,IAAIW,KAAK,CAACX,WAAA,CAAY,GAAI,MAAM;IAC9BE,IAAA,CACE,yMACA;MAAEO,IAAA,EAAM;IAAY;IAGtBE,KAAK,CAACX,WAAA,CAAY,GAAG,CAAC;EACxB,OAAO,IAAIW,KAAK,CAACX,WAAA,CAAY,IAAI,GAAG;IAClCW,KAAK,CAACX,WAAA,CAAY;EACpB;AACF;AAEA,OAAO,SAASc,aAAiCH,KAAQ,EAAQ;EAC/D,IAAI,OAAOA,KAAK,CAACV,SAAA,CAAU,KAAK,UAAU;IACxCW,cAAA,CAAe,MAAM;MACnBD,KAAK,CAACV,SAAA,CAAU,GAAGY,SAAA;IACrB;IAEAF,KAAK,CAACV,SAAA,CAAU,GAAG;EACrB;EAEA,IAAIU,KAAK,CAACV,SAAA,CAAU,GAAI,MAAM;IAC5BC,IAAA,CACE,qMACA;MAAEO,IAAA,EAAM;IAAY;IAGtBE,KAAK,CAACV,SAAA,CAAU,GAAG,CAAC;EACtB,OAAO,IAAIU,KAAK,CAACV,SAAA,CAAU,IAAI,GAAG;IAChCU,KAAK,CAACV,SAAA,CAAU;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}