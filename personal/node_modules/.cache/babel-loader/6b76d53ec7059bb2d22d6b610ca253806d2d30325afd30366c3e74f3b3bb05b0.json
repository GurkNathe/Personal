{"ast":null,"code":"import _defineProperty from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\nvar cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, function (loader) {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  }); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(function () {\n    var array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    var keys = Object.keys(input);\n    var keyed = {};\n    keys.forEach(function (key) {\n      return Object.assign(keyed, _defineProperty({}, key, textures[keys.indexOf(key)]));\n    });\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = function (url) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  return useLoader.preload(KTX2Loader, url, function (loader) {\n    loader.setTranscoderPath(basisPath);\n  });\n};\nuseKTX2.clear = function (input) {\n  return useLoader.clear(KTX2Loader, input);\n};\nexport { useKTX2 };","map":{"version":3,"names":["useThree","useLoader","useEffect","KTX2Loader","IsObject","cdn","useKTX2","input","basisPath","arguments","length","undefined","concat","gl","state","textures","Object","values","loader","detectSupport","setTranscoderPath","array","Array","isArray","forEach","initTexture","keys","keyed","key","assign","_defineProperty","indexOf","preload","url","clear"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/useKTX2.js"],"sourcesContent":["import { useThree, useLoader } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './useTexture.js';\n\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  }); // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\n  loader.setTranscoderPath(basisPath);\n});\n\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\n\nexport { useKTX2 };\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACxD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAE1C,IAAMC,GAAG,GAAG,uDAAuD;AACnE,SAASC,OAAOA,CAACC,KAAK,EAA+B;EAAA,IAA7BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,SAAAG,MAAA,CAAMP,GAAG;EACxC,IAAMQ,EAAE,GAAGb,QAAQ,CAAC,UAAAc,KAAK;IAAA,OAAIA,KAAK,CAACD,EAAE;EAAA,EAAC;EACtC,IAAME,QAAQ,GAAGd,SAAS,CAACE,UAAU,EAAEC,QAAQ,CAACG,KAAK,CAAC,GAAGS,MAAM,CAACC,MAAM,CAACV,KAAK,CAAC,GAAGA,KAAK,EAAE,UAAAW,MAAM,EAAI;IAC/FA,MAAM,CAACC,aAAa,CAACN,EAAE,CAAC;IACxBK,MAAM,CAACE,iBAAiB,CAACZ,SAAS,CAAC;EACrC,CAAC,CAAC,CAAC,CAAC;EACJ;;EAEAN,SAAS,CAAC,YAAM;IACd,IAAMmB,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;IAC7DM,KAAK,CAACG,OAAO,CAACX,EAAE,CAACY,WAAW,CAAC;EAC/B,CAAC,EAAE,CAACZ,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAElB,IAAIX,QAAQ,CAACG,KAAK,CAAC,EAAE;IACnB,IAAMmB,IAAI,GAAGV,MAAM,CAACU,IAAI,CAACnB,KAAK,CAAC;IAC/B,IAAMoB,KAAK,GAAG,CAAC,CAAC;IAChBD,IAAI,CAACF,OAAO,CAAC,UAAAI,GAAG;MAAA,OAAIZ,MAAM,CAACa,MAAM,CAACF,KAAK,EAAAG,eAAA,KACpCF,GAAG,EAAGb,QAAQ,CAACW,IAAI,CAACK,OAAO,CAACH,GAAG,CAAC,CAAC,CACnC,CAAC;IAAA,EAAC;IACH,OAAOD,KAAK;EACd,CAAC,MAAM;IACL,OAAOZ,QAAQ;EACjB;AACF;AAEAT,OAAO,CAAC0B,OAAO,GAAG,UAACC,GAAG;EAAA,IAAEzB,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,SAAAG,MAAA,CAAMP,GAAG;EAAA,OAAcJ,SAAS,CAAC+B,OAAO,CAAC7B,UAAU,EAAE8B,GAAG,EAAE,UAAAf,MAAM,EAAI;IACnGA,MAAM,CAACE,iBAAiB,CAACZ,SAAS,CAAC;EACrC,CAAC,CAAC;AAAA;AAEFF,OAAO,CAAC4B,KAAK,GAAG,UAAA3B,KAAK;EAAA,OAAIN,SAAS,CAACiC,KAAK,CAAC/B,UAAU,EAAEI,KAAK,CAAC;AAAA;AAE3D,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}