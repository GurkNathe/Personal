{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from \"three\";\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"deviceOrientation\", {\n      alpha: 0,\n      beta: 0,\n      gamma: 0\n    });\n    __publicField(this, \"screenOrientation\", 0);\n    __publicField(this, \"alphaOffset\", 0);\n    __publicField(this, \"onDeviceOrientationChangeEvent\", event => {\n      this.deviceOrientation = event;\n    });\n    __publicField(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    });\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n    __publicField(this, \"zee\", new Vector3(0, 0, 1));\n    __publicField(this, \"euler\", new Euler());\n    __publicField(this, \"q0\", new Quaternion());\n    __publicField(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n    // - PI/2 around the x-axis\n    __publicField(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, \"YXZ\");\n      quaternion.setFromEuler(this.euler);\n      quaternion.multiply(this.q1);\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient));\n    });\n    __publicField(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent();\n      if (window.DeviceOrientationEvent !== void 0 &&\n      // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n        window.DeviceOrientationEvent.requestPermission().then(response => {\n          if (response == \"granted\") {\n            window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n          }\n        }).catch(error => {\n          console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", error);\n        });\n      } else {\n        window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      }\n      this.enabled = true;\n    });\n    __publicField(this, \"disconnect\", () => {\n      window.removeEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n    __publicField(this, \"lastQuaternion\", new Quaternion());\n    __publicField(this, \"update\", () => {\n      if (this.enabled === false) return;\n      const device = this.deviceOrientation;\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0;\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0;\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0;\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0;\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n    __publicField(this, \"dispose\", () => this.disconnect());\n    this.object = object;\n    this.object.rotation.reorder(\"YXZ\");\n    this.connect();\n  }\n}\nexport { DeviceOrientationControls };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","EventDispatcher","Vector3","Euler","Quaternion","MathUtils","DeviceOrientationControls","constructor","object","type","alpha","beta","gamma","event","deviceOrientation","screenOrientation","window","orientation","Math","sqrt","quaternion","orient","euler","set","setFromEuler","multiply","q1","q0","setFromAxisAngle","zee","onScreenOrientationChangeEvent","DeviceOrientationEvent","requestPermission","then","response","addEventListener","onDeviceOrientationChangeEvent","catch","error","console","enabled","removeEventListener","device","degToRad","alphaOffset","setObjectQuaternion","lastQuaternion","dot","EPS","copy","dispatchEvent","changeEvent","disconnect","rotation","reorder","connect"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/controls/DeviceOrientationControls.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from \"three\";\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"deviceOrientation\", { alpha: 0, beta: 0, gamma: 0 });\n    __publicField(this, \"screenOrientation\", 0);\n    __publicField(this, \"alphaOffset\", 0);\n    __publicField(this, \"onDeviceOrientationChangeEvent\", (event) => {\n      this.deviceOrientation = event;\n    });\n    __publicField(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    });\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n    __publicField(this, \"zee\", new Vector3(0, 0, 1));\n    __publicField(this, \"euler\", new Euler());\n    __publicField(this, \"q0\", new Quaternion());\n    __publicField(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n    // - PI/2 around the x-axis\n    __publicField(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, \"YXZ\");\n      quaternion.setFromEuler(this.euler);\n      quaternion.multiply(this.q1);\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient));\n    });\n    __publicField(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent();\n      if (window.DeviceOrientationEvent !== void 0 && // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n        window.DeviceOrientationEvent.requestPermission().then((response) => {\n          if (response == \"granted\") {\n            window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n            window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n          }\n        }).catch((error) => {\n          console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", error);\n        });\n      } else {\n        window.addEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n        window.addEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      }\n      this.enabled = true;\n    });\n    __publicField(this, \"disconnect\", () => {\n      window.removeEventListener(\"orientationchange\", this.onScreenOrientationChangeEvent);\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n    __publicField(this, \"lastQuaternion\", new Quaternion());\n    __publicField(this, \"update\", () => {\n      if (this.enabled === false)\n        return;\n      const device = this.deviceOrientation;\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0;\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0;\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0;\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0;\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n    __publicField(this, \"dispose\", () => this.disconnect());\n    this.object = object;\n    this.object.rotation.reorder(\"YXZ\");\n    this.connect();\n  }\n}\nexport {\n  DeviceOrientationControls\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}