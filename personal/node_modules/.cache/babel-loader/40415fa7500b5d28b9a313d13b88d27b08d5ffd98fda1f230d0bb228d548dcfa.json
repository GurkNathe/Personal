{"ast":null,"code":"import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nfunction AdaptiveDpr(_ref) {\n  var pixelated = _ref.pixelated;\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var active = useThree(function (state) {\n    return state.internal.active;\n  });\n  var current = useThree(function (state) {\n    return state.performance.current;\n  });\n  var initialDpr = useThree(function (state) {\n    return state.viewport.initialDpr;\n  });\n  var setDpr = useThree(function (state) {\n    return state.setDpr;\n  }); // Restore initial pixelratio on unmount\n\n  React.useEffect(function () {\n    var domElement = gl.domElement;\n    return function () {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    };\n  }, []); // Set adaptive pixelratio\n\n  React.useEffect(function () {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\n  }, [current]);\n  return null;\n}\nexport { AdaptiveDpr };","map":{"version":3,"names":["React","useThree","AdaptiveDpr","_ref","pixelated","gl","state","active","internal","current","performance","initialDpr","viewport","setDpr","useEffect","domElement","style","imageRendering"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/AdaptiveDpr.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr({\n  pixelated\n}) {\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr); // Restore initial pixelratio on unmount\n\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    };\n  }, []); // Set adaptive pixelratio\n\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,WAAWA,CAAAC,IAAA,EAEjB;EAAA,IADDC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAET,IAAMC,EAAE,GAAGJ,QAAQ,CAAC,UAAAK,KAAK;IAAA,OAAIA,KAAK,CAACD,EAAE;EAAA,EAAC;EACtC,IAAME,MAAM,GAAGN,QAAQ,CAAC,UAAAK,KAAK;IAAA,OAAIA,KAAK,CAACE,QAAQ,CAACD,MAAM;EAAA,EAAC;EACvD,IAAME,OAAO,GAAGR,QAAQ,CAAC,UAAAK,KAAK;IAAA,OAAIA,KAAK,CAACI,WAAW,CAACD,OAAO;EAAA,EAAC;EAC5D,IAAME,UAAU,GAAGV,QAAQ,CAAC,UAAAK,KAAK;IAAA,OAAIA,KAAK,CAACM,QAAQ,CAACD,UAAU;EAAA,EAAC;EAC/D,IAAME,MAAM,GAAGZ,QAAQ,CAAC,UAAAK,KAAK;IAAA,OAAIA,KAAK,CAACO,MAAM;EAAA,EAAC,CAAC,CAAC;;EAEhDb,KAAK,CAACc,SAAS,CAAC,YAAM;IACpB,IAAMC,UAAU,GAAGV,EAAE,CAACU,UAAU;IAChC,OAAO,YAAM;MACX,IAAIR,MAAM,EAAEM,MAAM,CAACF,UAAU,CAAC;MAC9B,IAAIP,SAAS,IAAIW,UAAU,EAAEA,UAAU,CAACC,KAAK,CAACC,cAAc,GAAG,MAAM;IACvE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERjB,KAAK,CAACc,SAAS,CAAC,YAAM;IACpBD,MAAM,CAACJ,OAAO,GAAGE,UAAU,CAAC;IAC5B,IAAIP,SAAS,IAAIC,EAAE,CAACU,UAAU,EAAEV,EAAE,CAACU,UAAU,CAACC,KAAK,CAACC,cAAc,GAAGR,OAAO,KAAK,CAAC,GAAG,MAAM,GAAG,WAAW;EAC3G,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,OAAO,IAAI;AACb;AAEA,SAASP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}