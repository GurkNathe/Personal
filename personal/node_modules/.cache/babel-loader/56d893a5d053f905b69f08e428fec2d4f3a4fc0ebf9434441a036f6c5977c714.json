{"ast":null,"code":"import _objectWithoutProperties from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"isChild\", \"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n  _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\nfunction createSpread(child, _ref) {\n  var _ref$keys = _ref.keys,\n    keys = _ref$keys === void 0 ? ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'] : _ref$keys,\n    deep = _ref.deep,\n    inject = _ref.inject,\n    castShadow = _ref.castShadow,\n    receiveShadow = _ref.receiveShadow;\n  var spread = pick(child, keys);\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if ( /*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nvar Clone = /*#__PURE__*/React.forwardRef(function (_ref2, forwardRef) {\n  var _ref2$isChild = _ref2.isChild,\n    isChild = _ref2$isChild === void 0 ? false : _ref2$isChild,\n    object = _ref2.object,\n    children = _ref2.children,\n    deep = _ref2.deep,\n    castShadow = _ref2.castShadow,\n    receiveShadow = _ref2.receiveShadow,\n    inject = _ref2.inject,\n    keys = _ref2.keys,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _object;\n  var config = {\n    keys: keys,\n    deep: deep,\n    inject: inject,\n    castShadow: castShadow,\n    receiveShadow: receiveShadow\n  };\n  object = React.useMemo(function () {\n    if (isChild === false && !Array.isArray(object)) {\n      var isSkinned = false;\n      object.traverse(function (object) {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(function (o) {\n      return /*#__PURE__*/React.createElement(Clone, _extends({\n        key: o.uuid,\n        object: o\n      }, config));\n    }), children);\n  } // Singleton clones\n\n  var _createSpread = createSpread(object, config),\n    injectChildren = _createSpread.children,\n    spread = _objectWithoutProperties(_createSpread, _excluded2);\n  var Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(function (child) {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","pick","SkeletonUtils","createSpread","child","_ref","_ref$keys","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","_objectSpread","children","isValidElement","Mesh","Clone","forwardRef","_ref2","_ref2$isChild","isChild","object","props","_objectWithoutProperties","_excluded","_object","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","key","uuid","_createSpread","injectChildren","_excluded2","Element","type","toLowerCase","slice"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}