{"ast":null,"code":"class WorkerPool {\n  constructor() {\n    let pool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n  _initWorker(workerId) {\n    if (!this.workers[workerId]) {\n      const worker = this.workerCreator();\n      worker.addEventListener(\"message\", this._onMessage.bind(this, workerId));\n      this.workers[workerId] = worker;\n    }\n  }\n  _getIdleWorker() {\n    for (let i = 0; i < this.pool; i++) if (!(this.workerStatus & 1 << i)) return i;\n    return -1;\n  }\n  _onMessage(workerId, msg) {\n    const resolve = this.workersResolve[workerId];\n    resolve && resolve(msg);\n    if (this.queue.length) {\n      const {\n        resolve: resolve2,\n        msg: msg2,\n        transfer\n      } = this.queue.shift();\n      this.workersResolve[workerId] = resolve2;\n      this.workers[workerId].postMessage(msg2, transfer);\n    } else {\n      this.workerStatus ^= 1 << workerId;\n    }\n  }\n  setWorkerCreator(workerCreator) {\n    this.workerCreator = workerCreator;\n  }\n  setWorkerLimit(pool) {\n    this.pool = pool;\n  }\n  postMessage(msg, transfer) {\n    return new Promise(resolve => {\n      const workerId = this._getIdleWorker();\n      if (workerId !== -1) {\n        this._initWorker(workerId);\n        this.workerStatus |= 1 << workerId;\n        this.workersResolve[workerId] = resolve;\n        this.workers[workerId].postMessage(msg, transfer);\n      } else {\n        this.queue.push({\n          resolve,\n          msg,\n          transfer\n        });\n      }\n    });\n  }\n  dispose() {\n    this.workers.forEach(worker => worker.terminate());\n    this.workersResolve.length = 0;\n    this.workers.length = 0;\n    this.queue.length = 0;\n    this.workerStatus = 0;\n  }\n}\nexport { WorkerPool };","map":{"version":3,"names":["WorkerPool","constructor","pool","arguments","length","undefined","queue","workers","workersResolve","workerStatus","_initWorker","workerId","worker","workerCreator","addEventListener","_onMessage","bind","_getIdleWorker","i","msg","resolve","resolve2","msg2","transfer","shift","postMessage","setWorkerCreator","setWorkerLimit","Promise","push","dispose","forEach","terminate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/utils/WorkerPool.js"],"sourcesContent":["class WorkerPool {\n  constructor(pool = 4) {\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n  _initWorker(workerId) {\n    if (!this.workers[workerId]) {\n      const worker = this.workerCreator();\n      worker.addEventListener(\"message\", this._onMessage.bind(this, workerId));\n      this.workers[workerId] = worker;\n    }\n  }\n  _getIdleWorker() {\n    for (let i = 0; i < this.pool; i++)\n      if (!(this.workerStatus & 1 << i))\n        return i;\n    return -1;\n  }\n  _onMessage(workerId, msg) {\n    const resolve = this.workersResolve[workerId];\n    resolve && resolve(msg);\n    if (this.queue.length) {\n      const { resolve: resolve2, msg: msg2, transfer } = this.queue.shift();\n      this.workersResolve[workerId] = resolve2;\n      this.workers[workerId].postMessage(msg2, transfer);\n    } else {\n      this.workerStatus ^= 1 << workerId;\n    }\n  }\n  setWorkerCreator(workerCreator) {\n    this.workerCreator = workerCreator;\n  }\n  setWorkerLimit(pool) {\n    this.pool = pool;\n  }\n  postMessage(msg, transfer) {\n    return new Promise((resolve) => {\n      const workerId = this._getIdleWorker();\n      if (workerId !== -1) {\n        this._initWorker(workerId);\n        this.workerStatus |= 1 << workerId;\n        this.workersResolve[workerId] = resolve;\n        this.workers[workerId].postMessage(msg, transfer);\n      } else {\n        this.queue.push({ resolve, msg, transfer });\n      }\n    });\n  }\n  dispose() {\n    this.workers.forEach((worker) => worker.terminate());\n    this.workersResolve.length = 0;\n    this.workers.length = 0;\n    this.queue.length = 0;\n    this.workerStatus = 0;\n  }\n}\nexport {\n  WorkerPool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}