{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from \"three\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\nclass GlitchPass extends Pass {\n  constructor() {\n    let dt_size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 64;\n    super();\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    __publicField(this, \"goWild\");\n    __publicField(this, \"curF\");\n    __publicField(this, \"randX\");\n    __publicField(this, \"uniforms\");\n    this.uniforms = UniformsUtils.clone(DigitalGlitch.uniforms);\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(dt_size);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: DigitalGlitch.vertexShader,\n      fragmentShader: DigitalGlitch.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (renderer.capabilities.isWebGL2 === false) this.uniforms[\"tDisp\"].value.format = LuminanceFormat;\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms[\"seed\"].value = Math.random();\n    this.uniforms[\"byp\"].value = 0;\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms[\"amount\"].value = Math.random() / 30;\n      this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-1, 1);\n      this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-1, 1);\n      this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms[\"amount\"].value = Math.random() / 90;\n      this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms[\"byp\"].value = 1;\n    }\n    this.curF++;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  }\n  generateHeightmap(dt_size) {\n    const data_arr = new Float32Array(dt_size * dt_size);\n    const length = dt_size * dt_size;\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1);\n      data_arr[i] = val;\n    }\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n}\nexport { GlitchPass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","LuminanceFormat","MathUtils","DataTexture","RedFormat","FloatType","DigitalGlitch","GlitchPass","constructor","dt_size","arguments","length","undefined","uniforms","clone","generateHeightmap","material","vertexShader","fragmentShader","fsQuad","goWild","curF","generateTrigger","render","renderer","writeBuffer","readBuffer","capabilities","isWebGL2","format","texture","Math","random","randX","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","i","val","needsUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/GlitchPass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from \"three\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\nclass GlitchPass extends Pass {\n  constructor(dt_size = 64) {\n    super();\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    __publicField(this, \"goWild\");\n    __publicField(this, \"curF\");\n    __publicField(this, \"randX\");\n    __publicField(this, \"uniforms\");\n    this.uniforms = UniformsUtils.clone(DigitalGlitch.uniforms);\n    this.uniforms[\"tDisp\"].value = this.generateHeightmap(dt_size);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: DigitalGlitch.vertexShader,\n      fragmentShader: DigitalGlitch.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n    this.goWild = false;\n    this.curF = 0;\n    this.generateTrigger();\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (renderer.capabilities.isWebGL2 === false)\n      this.uniforms[\"tDisp\"].value.format = LuminanceFormat;\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms[\"seed\"].value = Math.random();\n    this.uniforms[\"byp\"].value = 0;\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms[\"amount\"].value = Math.random() / 30;\n      this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-1, 1);\n      this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-1, 1);\n      this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n      this.curF = 0;\n      this.generateTrigger();\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms[\"amount\"].value = Math.random() / 90;\n      this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n      this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n      this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-0.3, 0.3);\n      this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-0.3, 0.3);\n    } else if (this.goWild == false) {\n      this.uniforms[\"byp\"].value = 1;\n    }\n    this.curF++;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear)\n        renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  generateTrigger() {\n    this.randX = MathUtils.randInt(120, 240);\n  }\n  generateHeightmap(dt_size) {\n    const data_arr = new Float32Array(dt_size * dt_size);\n    const length = dt_size * dt_size;\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1);\n      data_arr[i] = val;\n    }\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n    texture.needsUpdate = true;\n    return texture;\n  }\n}\nexport {\n  GlitchPass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}