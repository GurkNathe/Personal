{"ast":null,"code":"var _ref;\nvar _globalThis_process;\nimport { kInsertions, kRemovals } from '../types.js';\n// Web platforms don't have process. React-Native doesn't have process.emitWarning.\nvar warn = (_ref = (_globalThis_process = globalThis.process) === null || _globalThis_process === void 0 ? void 0 : _globalThis_process.emitWarning) !== null && _ref !== void 0 ? _ref : function emitWarning(message, options) {\n  console.warn(\"[WARNING] [\".concat(options.code, \"] \").concat(message));\n};\nexport function trackInsertion(orama) {\n  if (typeof orama[kInsertions] !== 'number') {\n    queueMicrotask(function () {\n      orama[kInsertions] = undefined;\n    });\n    orama[kInsertions] = 0;\n  }\n  if (orama[kInsertions] > 1000) {\n    warn(\"Orama's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread or, in alternative, please use insertMultiple.\", {\n      code: 'ORAMA0001'\n    });\n    orama[kInsertions] = -1;\n  } else if (orama[kInsertions] >= 0) {\n    orama[kInsertions]++;\n  }\n}\nexport function trackRemoval(orama) {\n  if (typeof orama[kRemovals] !== 'number') {\n    queueMicrotask(function () {\n      orama[kRemovals] = undefined;\n    });\n    orama[kRemovals] = 0;\n  }\n  if (orama[kRemovals] > 1000) {\n    warn(\"Orama's remove operation is synchronous. Please avoid removing a large number of document in a single operation in order not to block the main thread, in alternative, please use updateMultiple.\", {\n      code: 'ORAMA0002'\n    });\n    orama[kRemovals] = -1;\n  } else if (orama[kRemovals] >= 0) {\n    orama[kRemovals]++;\n  }\n}","map":{"version":3,"names":["_globalThis_process","kInsertions","kRemovals","warn","_ref","globalThis","process","emitWarning","message","options","console","concat","code","trackInsertion","orama","queueMicrotask","undefined","trackRemoval"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.0.3/node_modules/@orama/orama/src/components/sync-blocking-checker.ts"],"sourcesContent":["import { kInsertions, kRemovals, Orama } from '../types.js'\n\n// Web platforms don't have process. React-Native doesn't have process.emitWarning.\nconst warn =\n  globalThis.process?.emitWarning ??\n  function emitWarning(message: string, options: { code: string }) {\n    console.warn(`[WARNING] [${options.code}] ${message}`)\n  }\n\nexport function trackInsertion(orama: Orama): void {\n  if (typeof orama[kInsertions] !== 'number') {\n    queueMicrotask(() => {\n      orama[kInsertions] = undefined\n    })\n\n    orama[kInsertions] = 0\n  }\n\n  if (orama[kInsertions]! > 1000) {\n    warn(\n      \"Orama's insert operation is synchronous. Please avoid inserting a large number of document in a single operation in order not to block the main thread or, in alternative, please use insertMultiple.\",\n      { code: 'ORAMA0001' },\n    )\n\n    orama[kInsertions] = -1\n  } else if (orama[kInsertions] >= 0) {\n    orama[kInsertions]++\n  }\n}\n\nexport function trackRemoval(orama: Orama): void {\n  if (typeof orama[kRemovals] !== 'number') {\n    queueMicrotask(() => {\n      orama[kRemovals] = undefined\n    })\n\n    orama[kRemovals] = 0\n  }\n\n  if (orama[kRemovals]! > 1000) {\n    warn(\n      \"Orama's remove operation is synchronous. Please avoid removing a large number of document in a single operation in order not to block the main thread, in alternative, please use updateMultiple.\",\n      { code: 'ORAMA0002' },\n    )\n\n    orama[kRemovals] = -1\n  } else if (orama[kRemovals] >= 0) {\n    orama[kRemovals]++\n  }\n}\n"],"mappings":";IAIEA,mBAAA;AAJF,SAASC,WAAW,EAAEC,SAAS,QAAe;AAE9C;AACA,IAAMC,IAAA,IAAAC,IAAA,GACJ,CAAAJ,mBAAA,GAAAK,UAAA,CAAWC,OAAO,cAAlBN,mBAAA,uBAAAA,mBAAA,CAAoBO,WAAW,cAAAH,IAAA,cAAAA,IAAA,GAC/B,SAASG,YAAYC,OAAe,EAAEC,OAAyB,EAAE;EAC/DC,OAAA,CAAQP,IAAI,eAAAQ,MAAA,CAAeF,OAAA,CAAQG,IAAI,QAAAD,MAAA,CAAKH,OAAA,CAAS;AACvD;AAEF,OAAO,SAASK,eAAeC,KAAY,EAAQ;EACjD,IAAI,OAAOA,KAAK,CAACb,WAAA,CAAY,KAAK,UAAU;IAC1Cc,cAAA,CAAe,YAAM;MACnBD,KAAK,CAACb,WAAA,CAAY,GAAGe,SAAA;IACvB;IAEAF,KAAK,CAACb,WAAA,CAAY,GAAG;EACvB;EAEA,IAAIa,KAAK,CAACb,WAAA,CAAY,GAAI,MAAM;IAC9BE,IAAA,CACE,yMACA;MAAES,IAAA,EAAM;IAAY;IAGtBE,KAAK,CAACb,WAAA,CAAY,GAAG,CAAC;EACxB,OAAO,IAAIa,KAAK,CAACb,WAAA,CAAY,IAAI,GAAG;IAClCa,KAAK,CAACb,WAAA,CAAY;EACpB;AACF;AAEA,OAAO,SAASgB,aAAaH,KAAY,EAAQ;EAC/C,IAAI,OAAOA,KAAK,CAACZ,SAAA,CAAU,KAAK,UAAU;IACxCa,cAAA,CAAe,YAAM;MACnBD,KAAK,CAACZ,SAAA,CAAU,GAAGc,SAAA;IACrB;IAEAF,KAAK,CAACZ,SAAA,CAAU,GAAG;EACrB;EAEA,IAAIY,KAAK,CAACZ,SAAA,CAAU,GAAI,MAAM;IAC5BC,IAAA,CACE,qMACA;MAAES,IAAA,EAAM;IAAY;IAGtBE,KAAK,CAACZ,SAAA,CAAU,GAAG,CAAC;EACtB,OAAO,IAAIY,KAAK,CAACZ,SAAA,CAAU,IAAI,GAAG;IAChCY,KAAK,CAACZ,SAAA,CAAU;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}