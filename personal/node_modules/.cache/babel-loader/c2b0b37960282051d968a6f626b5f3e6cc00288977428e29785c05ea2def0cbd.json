{"ast":null,"code":"import { Loader, FileLoader, LoadingManager, Group } from \"three\";\nimport { ColladaLoader } from \"./ColladaLoader.js\";\nimport { unzipSync } from \"fflate\";\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n    const manager = new LoadingManager();\n    manager.setURLModifier(function (url) {\n      const image = findFile(url);\n      if (image) {\n        console.log(\"Loading\", url);\n        const blob = new Blob([image.buffer], {\n          type: \"application/octet-stream\"\n        });\n        return URL.createObjectURL(blob);\n      }\n      return url;\n    });\n    const zip = unzipSync(new Uint8Array(data));\n    if (zip[\"doc.kml\"]) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip[\"doc.kml\"]), \"application/xml\");\n      const model = xml.querySelector(\"Placemark Model Link href\");\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent]));\n      }\n    } else {\n      console.warn(\"KMZLoader: Missing doc.kml file.\");\n      for (const path in zip) {\n        const extension = path.split(\".\").pop().toLowerCase();\n        if (extension === \"dae\") {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path]));\n        }\n      }\n    }\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return {\n      scene: new Group()\n    };\n  }\n}\nexport { KMZLoader };","map":{"version":3,"names":["Loader","FileLoader","LoadingManager","Group","ColladaLoader","unzipSync","KMZLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","findFile","zip","substr","length","setURLModifier","image","log","blob","Blob","buffer","type","URL","createObjectURL","Uint8Array","xml","DOMParser","parseFromString","fflate","strFromU8","model","querySelector","textContent","warn","extension","split","pop","toLowerCase","scene"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/KMZLoader.js"],"sourcesContent":["import { Loader, FileLoader, LoadingManager, Group } from \"three\";\nimport { ColladaLoader } from \"./ColladaLoader.js\";\nimport { unzipSync } from \"fflate\";\nclass KMZLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    function findFile(url) {\n      for (const path in zip) {\n        if (path.substr(-url.length) === url) {\n          return zip[path];\n        }\n      }\n    }\n    const manager = new LoadingManager();\n    manager.setURLModifier(function(url) {\n      const image = findFile(url);\n      if (image) {\n        console.log(\"Loading\", url);\n        const blob = new Blob([image.buffer], { type: \"application/octet-stream\" });\n        return URL.createObjectURL(blob);\n      }\n      return url;\n    });\n    const zip = unzipSync(new Uint8Array(data));\n    if (zip[\"doc.kml\"]) {\n      const xml = new DOMParser().parseFromString(fflate.strFromU8(zip[\"doc.kml\"]), \"application/xml\");\n      const model = xml.querySelector(\"Placemark Model Link href\");\n      if (model) {\n        const loader = new ColladaLoader(manager);\n        return loader.parse(fflate.strFromU8(zip[model.textContent]));\n      }\n    } else {\n      console.warn(\"KMZLoader: Missing doc.kml file.\");\n      for (const path in zip) {\n        const extension = path.split(\".\").pop().toLowerCase();\n        if (extension === \"dae\") {\n          const loader = new ColladaLoader(manager);\n          return loader.parse(fflate.strFromU8(zip[path]));\n        }\n      }\n    }\n    console.error(\"KMZLoader: Couldn't find .dae file.\");\n    return { scene: new Group() };\n  }\n}\nexport {\n  KMZLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}