{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from \"three\";\nvar CSMHelper = /*#__PURE__*/function (_Group) {\n  _inherits(CSMHelper, _Group);\n  var _super = _createSuper(CSMHelper);\n  function CSMHelper(csm) {\n    var _this;\n    _classCallCheck(this, CSMHelper);\n    _this = _super.call(this);\n    _this.csm = csm;\n    _this.displayFrustum = true;\n    _this.displayPlanes = true;\n    _this.displayShadowBounds = true;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(24);\n    var frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute(\"position\", new BufferAttribute(positions, 3, false));\n    var frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    _this.add(frustumLines);\n    _this.frustumLines = frustumLines;\n    _this.cascadeLines = [];\n    _this.cascadePlanes = [];\n    _this.shadowLines = [];\n    return _this;\n  }\n  _createClass(CSMHelper, [{\n    key: \"updateVisibility\",\n    value: function updateVisibility() {\n      var displayFrustum = this.displayFrustum;\n      var displayPlanes = this.displayPlanes;\n      var displayShadowBounds = this.displayShadowBounds;\n      var frustumLines = this.frustumLines;\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n      for (var i = 0, l = cascadeLines.length; i < l; i++) {\n        var cascadeLine = cascadeLines[i];\n        var cascadePlane = cascadePlanes[i];\n        var shadowLineGroup = shadowLines[i];\n        cascadeLine.visible = displayFrustum;\n        cascadePlane.visible = displayFrustum && displayPlanes;\n        shadowLineGroup.visible = displayShadowBounds;\n      }\n      frustumLines.visible = displayFrustum;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var csm = this.csm;\n      var camera = csm.camera;\n      var cascades = csm.cascades;\n      var mainFrustum = csm.mainFrustum;\n      var frustums = csm.frustums;\n      var lights = csm.lights;\n      var frustumLines = this.frustumLines;\n      var frustumLinePositions = frustumLines.geometry.getAttribute(\"position\");\n      var cascadeLines = this.cascadeLines;\n      var cascadePlanes = this.cascadePlanes;\n      var shadowLines = this.shadowLines;\n      this.position.copy(camera.position);\n      this.quaternion.copy(camera.quaternion);\n      this.scale.copy(camera.scale);\n      this.updateMatrixWorld(true);\n      while (cascadeLines.length > cascades) {\n        this.remove(cascadeLines.pop());\n        this.remove(cascadePlanes.pop());\n        this.remove(shadowLines.pop());\n      }\n      while (cascadeLines.length < cascades) {\n        var cascadeLine = new Box3Helper(new Box3(), 16777215);\n        var planeMat = new MeshBasicMaterial({\n          transparent: true,\n          opacity: 0.1,\n          depthWrite: false,\n          side: DoubleSide\n        });\n        var cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n        var shadowLineGroup = new Group();\n        var shadowLine = new Box3Helper(new Box3(), 16776960);\n        shadowLineGroup.add(shadowLine);\n        this.add(cascadeLine);\n        this.add(cascadePlane);\n        this.add(shadowLineGroup);\n        cascadeLines.push(cascadeLine);\n        cascadePlanes.push(cascadePlane);\n        shadowLines.push(shadowLineGroup);\n      }\n      for (var i = 0; i < cascades; i++) {\n        var frustum = frustums[i];\n        var light = lights[i];\n        var shadowCam = light.shadow.camera;\n        var farVerts2 = frustum.vertices.far;\n        var _cascadeLine = cascadeLines[i];\n        var _cascadePlane = cascadePlanes[i];\n        var _shadowLineGroup = shadowLines[i];\n        var _shadowLine = _shadowLineGroup.children[0];\n        _cascadeLine.box.min.copy(farVerts2[2]);\n        _cascadeLine.box.max.copy(farVerts2[0]);\n        _cascadeLine.box.max.z += 1e-4;\n        _cascadePlane.position.addVectors(farVerts2[0], farVerts2[2]);\n        _cascadePlane.position.multiplyScalar(0.5);\n        _cascadePlane.scale.subVectors(farVerts2[0], farVerts2[2]);\n        _cascadePlane.scale.z = 1e-4;\n        this.remove(_shadowLineGroup);\n        _shadowLineGroup.position.copy(shadowCam.position);\n        _shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n        _shadowLineGroup.scale.copy(shadowCam.scale);\n        _shadowLineGroup.updateMatrixWorld(true);\n        this.attach(_shadowLineGroup);\n        _shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n        _shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n      }\n      var nearVerts = mainFrustum.vertices.near;\n      var farVerts = mainFrustum.vertices.far;\n      frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n      frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n      frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n      frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n      frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n      frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n      frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n      frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n      frustumLinePositions.needsUpdate = true;\n    }\n  }]);\n  return CSMHelper;\n}(Group);\nexport { CSMHelper };","map":{"version":3,"names":["Group","BufferGeometry","BufferAttribute","LineSegments","LineBasicMaterial","Box3Helper","Box3","MeshBasicMaterial","DoubleSide","Mesh","PlaneGeometry","CSMHelper","_Group","_inherits","_super","_createSuper","csm","_this","_classCallCheck","call","displayFrustum","displayPlanes","displayShadowBounds","indices","Uint16Array","positions","Float32Array","frustumGeometry","setIndex","setAttribute","frustumLines","add","cascadeLines","cascadePlanes","shadowLines","_createClass","key","value","updateVisibility","i","l","length","cascadeLine","cascadePlane","shadowLineGroup","visible","update","camera","cascades","mainFrustum","frustums","lights","frustumLinePositions","geometry","getAttribute","position","copy","quaternion","scale","updateMatrixWorld","remove","pop","planeMat","transparent","opacity","depthWrite","side","shadowLine","push","frustum","light","shadowCam","shadow","farVerts2","vertices","far","children","box","min","max","z","addVectors","multiplyScalar","subVectors","attach","set","bottom","left","top","right","near","nearVerts","farVerts","setXYZ","x","y","needsUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/csm/CSMHelper.js"],"sourcesContent":["import { Group, BufferGeometry, BufferAttribute, LineSegments, LineBasicMaterial, Box3Helper, Box3, MeshBasicMaterial, DoubleSide, Mesh, PlaneGeometry } from \"three\";\nclass CSMHelper extends Group {\n  constructor(csm) {\n    super();\n    this.csm = csm;\n    this.displayFrustum = true;\n    this.displayPlanes = true;\n    this.displayShadowBounds = true;\n    const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    const positions = new Float32Array(24);\n    const frustumGeometry = new BufferGeometry();\n    frustumGeometry.setIndex(new BufferAttribute(indices, 1));\n    frustumGeometry.setAttribute(\"position\", new BufferAttribute(positions, 3, false));\n    const frustumLines = new LineSegments(frustumGeometry, new LineBasicMaterial());\n    this.add(frustumLines);\n    this.frustumLines = frustumLines;\n    this.cascadeLines = [];\n    this.cascadePlanes = [];\n    this.shadowLines = [];\n  }\n  updateVisibility() {\n    const displayFrustum = this.displayFrustum;\n    const displayPlanes = this.displayPlanes;\n    const displayShadowBounds = this.displayShadowBounds;\n    const frustumLines = this.frustumLines;\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    for (let i = 0, l = cascadeLines.length; i < l; i++) {\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      cascadeLine.visible = displayFrustum;\n      cascadePlane.visible = displayFrustum && displayPlanes;\n      shadowLineGroup.visible = displayShadowBounds;\n    }\n    frustumLines.visible = displayFrustum;\n  }\n  update() {\n    const csm = this.csm;\n    const camera = csm.camera;\n    const cascades = csm.cascades;\n    const mainFrustum = csm.mainFrustum;\n    const frustums = csm.frustums;\n    const lights = csm.lights;\n    const frustumLines = this.frustumLines;\n    const frustumLinePositions = frustumLines.geometry.getAttribute(\"position\");\n    const cascadeLines = this.cascadeLines;\n    const cascadePlanes = this.cascadePlanes;\n    const shadowLines = this.shadowLines;\n    this.position.copy(camera.position);\n    this.quaternion.copy(camera.quaternion);\n    this.scale.copy(camera.scale);\n    this.updateMatrixWorld(true);\n    while (cascadeLines.length > cascades) {\n      this.remove(cascadeLines.pop());\n      this.remove(cascadePlanes.pop());\n      this.remove(shadowLines.pop());\n    }\n    while (cascadeLines.length < cascades) {\n      const cascadeLine = new Box3Helper(new Box3(), 16777215);\n      const planeMat = new MeshBasicMaterial({ transparent: true, opacity: 0.1, depthWrite: false, side: DoubleSide });\n      const cascadePlane = new Mesh(new PlaneGeometry(), planeMat);\n      const shadowLineGroup = new Group();\n      const shadowLine = new Box3Helper(new Box3(), 16776960);\n      shadowLineGroup.add(shadowLine);\n      this.add(cascadeLine);\n      this.add(cascadePlane);\n      this.add(shadowLineGroup);\n      cascadeLines.push(cascadeLine);\n      cascadePlanes.push(cascadePlane);\n      shadowLines.push(shadowLineGroup);\n    }\n    for (let i = 0; i < cascades; i++) {\n      const frustum = frustums[i];\n      const light = lights[i];\n      const shadowCam = light.shadow.camera;\n      const farVerts2 = frustum.vertices.far;\n      const cascadeLine = cascadeLines[i];\n      const cascadePlane = cascadePlanes[i];\n      const shadowLineGroup = shadowLines[i];\n      const shadowLine = shadowLineGroup.children[0];\n      cascadeLine.box.min.copy(farVerts2[2]);\n      cascadeLine.box.max.copy(farVerts2[0]);\n      cascadeLine.box.max.z += 1e-4;\n      cascadePlane.position.addVectors(farVerts2[0], farVerts2[2]);\n      cascadePlane.position.multiplyScalar(0.5);\n      cascadePlane.scale.subVectors(farVerts2[0], farVerts2[2]);\n      cascadePlane.scale.z = 1e-4;\n      this.remove(shadowLineGroup);\n      shadowLineGroup.position.copy(shadowCam.position);\n      shadowLineGroup.quaternion.copy(shadowCam.quaternion);\n      shadowLineGroup.scale.copy(shadowCam.scale);\n      shadowLineGroup.updateMatrixWorld(true);\n      this.attach(shadowLineGroup);\n      shadowLine.box.min.set(shadowCam.bottom, shadowCam.left, -shadowCam.far);\n      shadowLine.box.max.set(shadowCam.top, shadowCam.right, -shadowCam.near);\n    }\n    const nearVerts = mainFrustum.vertices.near;\n    const farVerts = mainFrustum.vertices.far;\n    frustumLinePositions.setXYZ(0, farVerts[0].x, farVerts[0].y, farVerts[0].z);\n    frustumLinePositions.setXYZ(1, farVerts[3].x, farVerts[3].y, farVerts[3].z);\n    frustumLinePositions.setXYZ(2, farVerts[2].x, farVerts[2].y, farVerts[2].z);\n    frustumLinePositions.setXYZ(3, farVerts[1].x, farVerts[1].y, farVerts[1].z);\n    frustumLinePositions.setXYZ(4, nearVerts[0].x, nearVerts[0].y, nearVerts[0].z);\n    frustumLinePositions.setXYZ(5, nearVerts[3].x, nearVerts[3].y, nearVerts[3].z);\n    frustumLinePositions.setXYZ(6, nearVerts[2].x, nearVerts[2].y, nearVerts[2].z);\n    frustumLinePositions.setXYZ(7, nearVerts[1].x, nearVerts[1].y, nearVerts[1].z);\n    frustumLinePositions.needsUpdate = true;\n  }\n}\nexport {\n  CSMHelper\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}