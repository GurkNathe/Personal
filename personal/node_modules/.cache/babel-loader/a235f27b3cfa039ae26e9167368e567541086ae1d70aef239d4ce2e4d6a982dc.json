{"ast":null,"code":"const MirrorShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    side: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform int side;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec2 p = vUv;\", \"\tif (side == 0){\", \"\t\tif (p.x > 0.5) p.x = 1.0 - p.x;\", \"\t}else if (side == 1){\", \"\t\tif (p.x < 0.5) p.x = 1.0 - p.x;\", \"\t}else if (side == 2){\", \"\t\tif (p.y < 0.5) p.y = 1.0 - p.y;\", \"\t}else if (side == 3){\", \"\t\tif (p.y > 0.5) p.y = 1.0 - p.y;\", \"\t} \", \"\tvec4 color = texture2D(tDiffuse, p);\", \"\tgl_FragColor = color;\", \"}\"].join(\"\\n\")\n};\nexport { MirrorShader };","map":{"version":3,"names":["MirrorShader","uniforms","tDiffuse","value","side","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/MirrorShader.js"],"sourcesContent":["const MirrorShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    side: { value: 1 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform int side;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvec2 p = vUv;\",\n    \"\tif (side == 0){\",\n    \"\t\tif (p.x > 0.5) p.x = 1.0 - p.x;\",\n    \"\t}else if (side == 1){\",\n    \"\t\tif (p.x < 0.5) p.x = 1.0 - p.x;\",\n    \"\t}else if (side == 2){\",\n    \"\t\tif (p.y < 0.5) p.y = 1.0 - p.y;\",\n    \"\t}else if (side == 3){\",\n    \"\t\tif (p.y > 0.5) p.y = 1.0 - p.y;\",\n    \"\t} \",\n    \"\tvec4 color = texture2D(tDiffuse, p);\",\n    \"\tgl_FragColor = color;\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  MirrorShader\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IACzBC,IAAI,EAAE;MAAED,KAAK,EAAE;IAAE;EACnB,CAAC;EACDE,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,6BAA6B,EAC7B,mBAAmB,EACnB,mBAAmB,EACnB,eAAe,EACf,gBAAgB,EAChB,kBAAkB,EAClB,mCAAmC,EACnC,wBAAwB,EACxB,mCAAmC,EACnC,wBAAwB,EACxB,mCAAmC,EACnC,wBAAwB,EACxB,mCAAmC,EACnC,KAAK,EACL,uCAAuC,EACvC,wBAAwB,EACxB,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACEN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}