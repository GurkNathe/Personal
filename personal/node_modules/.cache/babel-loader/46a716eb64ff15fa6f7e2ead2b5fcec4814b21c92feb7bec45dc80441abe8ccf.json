{"ast":null,"code":"import _regeneratorRuntime from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar MotionControllerConstants = {\n  Handedness: {\n    NONE: \"none\",\n    LEFT: \"left\",\n    RIGHT: \"right\"\n  },\n  ComponentState: {\n    DEFAULT: \"default\",\n    TOUCHED: \"touched\",\n    PRESSED: \"pressed\"\n  },\n  ComponentProperty: {\n    BUTTON: \"button\",\n    X_AXIS: \"xAxis\",\n    Y_AXIS: \"yAxis\",\n    STATE: \"state\"\n  },\n  ComponentType: {\n    TRIGGER: \"trigger\",\n    SQUEEZE: \"squeeze\",\n    TOUCHPAD: \"touchpad\",\n    THUMBSTICK: \"thumbstick\",\n    BUTTON: \"button\"\n  },\n  ButtonTouchThreshold: 0.05,\n  AxisTouchThreshold: 0.1,\n  VisualResponseProperty: {\n    TRANSFORM: \"transform\",\n    VISIBILITY: \"visibility\"\n  }\n};\nfunction fetchJsonFile(_x) {\n  return _fetchJsonFile.apply(this, arguments);\n}\nfunction _fetchJsonFile() {\n  _fetchJsonFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(path) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(path);\n        case 2:\n          response = _context.sent;\n          if (response.ok) {\n            _context.next = 7;\n            break;\n          }\n          throw new Error(response.statusText);\n        case 7:\n          return _context.abrupt(\"return\", response.json());\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _fetchJsonFile.apply(this, arguments);\n}\nfunction fetchProfilesList(_x2) {\n  return _fetchProfilesList.apply(this, arguments);\n}\nfunction _fetchProfilesList() {\n  _fetchProfilesList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(basePath) {\n    var profileListFileName, profilesList;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (basePath) {\n            _context2.next = 2;\n            break;\n          }\n          throw new Error(\"No basePath supplied\");\n        case 2:\n          profileListFileName = \"profilesList.json\";\n          _context2.next = 5;\n          return fetchJsonFile(\"\".concat(basePath, \"/\").concat(profileListFileName));\n        case 5:\n          profilesList = _context2.sent;\n          return _context2.abrupt(\"return\", profilesList);\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _fetchProfilesList.apply(this, arguments);\n}\nfunction fetchProfile(_x3, _x4) {\n  return _fetchProfile.apply(this, arguments);\n}\nfunction _fetchProfile() {\n  _fetchProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(xrInputSource, basePath) {\n    var defaultProfile,\n      getAssetPath,\n      supportedProfilesList,\n      match,\n      supportedProfile,\n      profile,\n      assetPath,\n      layout,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          defaultProfile = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : null;\n          getAssetPath = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : true;\n          if (xrInputSource) {\n            _context3.next = 4;\n            break;\n          }\n          throw new Error(\"No xrInputSource supplied\");\n        case 4:\n          if (basePath) {\n            _context3.next = 6;\n            break;\n          }\n          throw new Error(\"No basePath supplied\");\n        case 6:\n          _context3.next = 8;\n          return fetchProfilesList(basePath);\n        case 8:\n          supportedProfilesList = _context3.sent;\n          match = void 0;\n          xrInputSource.profiles.some(function (profileId) {\n            var supportedProfile = supportedProfilesList[profileId];\n            if (supportedProfile) {\n              match = {\n                profileId: profileId,\n                profilePath: \"\".concat(basePath, \"/\").concat(supportedProfile.path),\n                deprecated: !!supportedProfile.deprecated\n              };\n            }\n            return !!match;\n          });\n          if (match) {\n            _context3.next = 18;\n            break;\n          }\n          if (defaultProfile) {\n            _context3.next = 14;\n            break;\n          }\n          throw new Error(\"No matching profile name found\");\n        case 14:\n          supportedProfile = supportedProfilesList[defaultProfile];\n          if (supportedProfile) {\n            _context3.next = 17;\n            break;\n          }\n          throw new Error(\"No matching profile name found and default profile \\\"\".concat(defaultProfile, \"\\\" missing.\"));\n        case 17:\n          match = {\n            profileId: defaultProfile,\n            profilePath: \"\".concat(basePath, \"/\").concat(supportedProfile.path),\n            deprecated: !!supportedProfile.deprecated\n          };\n        case 18:\n          _context3.next = 20;\n          return fetchJsonFile(match.profilePath);\n        case 20:\n          profile = _context3.sent;\n          assetPath = void 0;\n          if (!getAssetPath) {\n            _context3.next = 27;\n            break;\n          }\n          if (xrInputSource.handedness === \"any\") {\n            layout = profile.layouts[Object.keys(profile.layouts)[0]];\n          } else {\n            layout = profile.layouts[xrInputSource.handedness];\n          }\n          if (layout) {\n            _context3.next = 26;\n            break;\n          }\n          throw new Error(\"No matching handedness, \".concat(xrInputSource.handedness, \", in profile \").concat(match.profileId));\n        case 26:\n          if (layout.assetPath) {\n            assetPath = match.profilePath.replace(\"profile.json\", layout.assetPath);\n          }\n        case 27:\n          return _context3.abrupt(\"return\", {\n            profile: profile,\n            assetPath: assetPath\n          });\n        case 28:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _fetchProfile.apply(this, arguments);\n}\nvar defaultComponentValues = {\n  xAxis: 0,\n  yAxis: 0,\n  button: 0,\n  state: MotionControllerConstants.ComponentState.DEFAULT\n};\nfunction normalizeAxes() {\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var xAxis = x;\n  var yAxis = y;\n  var hypotenuse = Math.sqrt(x * x + y * y);\n  if (hypotenuse > 1) {\n    var theta = Math.atan2(y, x);\n    xAxis = Math.cos(theta);\n    yAxis = Math.sin(theta);\n  }\n  var result = {\n    normalizedXAxis: xAxis * 0.5 + 0.5,\n    normalizedYAxis: yAxis * 0.5 + 0.5\n  };\n  return result;\n}\nvar VisualResponse = /*#__PURE__*/function () {\n  function VisualResponse(visualResponseDescription) {\n    _classCallCheck(this, VisualResponse);\n    __publicField(this, \"value\");\n    __publicField(this, \"componentProperty\");\n    __publicField(this, \"states\");\n    __publicField(this, \"valueNodeName\");\n    __publicField(this, \"valueNodeProperty\");\n    __publicField(this, \"minNodeName\");\n    __publicField(this, \"maxNodeName\");\n    __publicField(this, \"valueNode\");\n    __publicField(this, \"minNode\");\n    __publicField(this, \"maxNode\");\n    this.componentProperty = visualResponseDescription.componentProperty;\n    this.states = visualResponseDescription.states;\n    this.valueNodeName = visualResponseDescription.valueNodeName;\n    this.valueNodeProperty = visualResponseDescription.valueNodeProperty;\n    if (this.valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM) {\n      this.minNodeName = visualResponseDescription.minNodeName;\n      this.maxNodeName = visualResponseDescription.maxNodeName;\n    }\n    this.value = 0;\n    this.updateFromComponent(defaultComponentValues);\n  }\n  /**\n   * Computes the visual response's interpolation weight based on component state\n   * @param {Object} componentValues - The component from which to update\n   * @param {number | undefined} xAxis - The reported X axis value of the component\n   * @param {number | undefined} yAxis - The reported Y axis value of the component\n   * @param {number | undefined} button - The reported value of the component's button\n   * @param {string} state - The component's active state\n   */\n  _createClass(VisualResponse, [{\n    key: \"updateFromComponent\",\n    value: function updateFromComponent(_ref) {\n      var xAxis = _ref.xAxis,\n        yAxis = _ref.yAxis,\n        button = _ref.button,\n        state = _ref.state;\n      var _normalizeAxes = normalizeAxes(xAxis, yAxis),\n        normalizedXAxis = _normalizeAxes.normalizedXAxis,\n        normalizedYAxis = _normalizeAxes.normalizedYAxis;\n      switch (this.componentProperty) {\n        case MotionControllerConstants.ComponentProperty.X_AXIS:\n          this.value = this.states.includes(state) ? normalizedXAxis : 0.5;\n          break;\n        case MotionControllerConstants.ComponentProperty.Y_AXIS:\n          this.value = this.states.includes(state) ? normalizedYAxis : 0.5;\n          break;\n        case MotionControllerConstants.ComponentProperty.BUTTON:\n          this.value = this.states.includes(state) && button ? button : 0;\n          break;\n        case MotionControllerConstants.ComponentProperty.STATE:\n          if (this.valueNodeProperty === MotionControllerConstants.VisualResponseProperty.VISIBILITY) {\n            this.value = this.states.includes(state);\n          } else {\n            this.value = this.states.includes(state) ? 1 : 0;\n          }\n          break;\n        default:\n          throw new Error(\"Unexpected visualResponse componentProperty \".concat(this.componentProperty));\n      }\n    }\n  }]);\n  return VisualResponse;\n}();\nvar Component = /*#__PURE__*/function () {\n  /**\n   * @param {string} componentId - Id of the component\n   * @param {InputProfileComponent} componentDescription - Description of the component to be created\n   */\n  function Component(componentId, componentDescription) {\n    var _this = this;\n    _classCallCheck(this, Component);\n    __publicField(this, \"id\");\n    __publicField(this, \"values\");\n    __publicField(this, \"type\");\n    __publicField(this, \"gamepadIndices\");\n    __publicField(this, \"rootNodeName\");\n    __publicField(this, \"visualResponses\");\n    __publicField(this, \"touchPointNodeName\");\n    __publicField(this, \"touchPointNode\");\n    if (!componentId || !componentDescription || !componentDescription.visualResponses || !componentDescription.gamepadIndices || Object.keys(componentDescription.gamepadIndices).length === 0) {\n      throw new Error(\"Invalid arguments supplied\");\n    }\n    this.id = componentId;\n    this.type = componentDescription.type;\n    this.rootNodeName = componentDescription.rootNodeName;\n    this.touchPointNodeName = componentDescription.touchPointNodeName;\n    this.visualResponses = {};\n    Object.keys(componentDescription.visualResponses).forEach(function (responseName) {\n      var visualResponse = new VisualResponse(componentDescription.visualResponses[responseName]);\n      _this.visualResponses[responseName] = visualResponse;\n    });\n    this.gamepadIndices = Object.assign({}, componentDescription.gamepadIndices);\n    this.values = {\n      state: MotionControllerConstants.ComponentState.DEFAULT,\n      button: this.gamepadIndices.button !== void 0 ? 0 : void 0,\n      xAxis: this.gamepadIndices.xAxis !== void 0 ? 0 : void 0,\n      yAxis: this.gamepadIndices.yAxis !== void 0 ? 0 : void 0\n    };\n  }\n  _createClass(Component, [{\n    key: \"data\",\n    get: function get() {\n      var data = _objectSpread({\n        id: this.id\n      }, this.values);\n      return data;\n    }\n    /**\n     * @description Poll for updated data based on current gamepad state\n     * @param {Object} gamepad - The gamepad object from which the component data should be polled\n     */\n  }, {\n    key: \"updateFromGamepad\",\n    value: function updateFromGamepad(gamepad) {\n      var _this2 = this;\n      this.values.state = MotionControllerConstants.ComponentState.DEFAULT;\n      if (this.gamepadIndices.button !== void 0 && gamepad.buttons.length > this.gamepadIndices.button) {\n        var gamepadButton = gamepad.buttons[this.gamepadIndices.button];\n        this.values.button = gamepadButton.value;\n        this.values.button = this.values.button < 0 ? 0 : this.values.button;\n        this.values.button = this.values.button > 1 ? 1 : this.values.button;\n        if (gamepadButton.pressed || this.values.button === 1) {\n          this.values.state = MotionControllerConstants.ComponentState.PRESSED;\n        } else if (gamepadButton.touched || this.values.button > MotionControllerConstants.ButtonTouchThreshold) {\n          this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n        }\n      }\n      if (this.gamepadIndices.xAxis !== void 0 && gamepad.axes.length > this.gamepadIndices.xAxis) {\n        this.values.xAxis = gamepad.axes[this.gamepadIndices.xAxis];\n        this.values.xAxis = this.values.xAxis < -1 ? -1 : this.values.xAxis;\n        this.values.xAxis = this.values.xAxis > 1 ? 1 : this.values.xAxis;\n        if (this.values.state === MotionControllerConstants.ComponentState.DEFAULT && Math.abs(this.values.xAxis) > MotionControllerConstants.AxisTouchThreshold) {\n          this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n        }\n      }\n      if (this.gamepadIndices.yAxis !== void 0 && gamepad.axes.length > this.gamepadIndices.yAxis) {\n        this.values.yAxis = gamepad.axes[this.gamepadIndices.yAxis];\n        this.values.yAxis = this.values.yAxis < -1 ? -1 : this.values.yAxis;\n        this.values.yAxis = this.values.yAxis > 1 ? 1 : this.values.yAxis;\n        if (this.values.state === MotionControllerConstants.ComponentState.DEFAULT && Math.abs(this.values.yAxis) > MotionControllerConstants.AxisTouchThreshold) {\n          this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n        }\n      }\n      Object.values(this.visualResponses).forEach(function (visualResponse) {\n        visualResponse.updateFromComponent(_this2.values);\n      });\n    }\n  }]);\n  return Component;\n}();\nvar MotionController = /*#__PURE__*/function () {\n  /**\n   * @param {XRInputSource} xrInputSource - The XRInputSource to build the MotionController around\n   * @param {Profile} profile - The best matched profile description for the supplied xrInputSource\n   * @param {string} assetUrl\n   */\n  function MotionController(xrInputSource, profile, assetUrl) {\n    var _this3 = this;\n    _classCallCheck(this, MotionController);\n    __publicField(this, \"xrInputSource\");\n    __publicField(this, \"assetUrl\");\n    __publicField(this, \"layoutDescription\");\n    __publicField(this, \"id\");\n    __publicField(this, \"components\");\n    if (!xrInputSource) {\n      throw new Error(\"No xrInputSource supplied\");\n    }\n    if (!profile) {\n      throw new Error(\"No profile supplied\");\n    }\n    if (!profile.layouts[xrInputSource.handedness]) {\n      throw new Error(\"No layout for \" + xrInputSource.handedness + \" handedness\");\n    }\n    this.xrInputSource = xrInputSource;\n    this.assetUrl = assetUrl;\n    this.id = profile.profileId;\n    this.layoutDescription = profile.layouts[xrInputSource.handedness];\n    this.components = {};\n    Object.keys(this.layoutDescription.components).forEach(function (componentId) {\n      var componentDescription = _this3.layoutDescription.components[componentId];\n      _this3.components[componentId] = new Component(componentId, componentDescription);\n    });\n    this.updateFromGamepad();\n  }\n  _createClass(MotionController, [{\n    key: \"gripSpace\",\n    get: function get() {\n      return this.xrInputSource.gripSpace;\n    }\n  }, {\n    key: \"targetRaySpace\",\n    get: function get() {\n      return this.xrInputSource.targetRaySpace;\n    }\n    /**\n     * @description Returns a subset of component data for simplified debugging\n     */\n  }, {\n    key: \"data\",\n    get: function get() {\n      var data = [];\n      Object.values(this.components).forEach(function (component) {\n        data.push(component.data);\n      });\n      return data;\n    }\n    /**\n     * @description Poll for updated data based on current gamepad state\n     */\n  }, {\n    key: \"updateFromGamepad\",\n    value: function updateFromGamepad() {\n      var _this4 = this;\n      Object.values(this.components).forEach(function (component) {\n        component.updateFromGamepad(_this4.xrInputSource.gamepad);\n      });\n    }\n  }]);\n  return MotionController;\n}();\nexport { MotionController, MotionControllerConstants, fetchProfile, fetchProfilesList };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","MotionControllerConstants","Handedness","NONE","LEFT","RIGHT","ComponentState","DEFAULT","TOUCHED","PRESSED","ComponentProperty","BUTTON","X_AXIS","Y_AXIS","STATE","ComponentType","TRIGGER","SQUEEZE","TOUCHPAD","THUMBSTICK","ButtonTouchThreshold","AxisTouchThreshold","VisualResponseProperty","TRANSFORM","VISIBILITY","fetchJsonFile","_x","_fetchJsonFile","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","path","response","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","statusText","abrupt","json","stop","fetchProfilesList","_x2","_fetchProfilesList","_callee2","basePath","profileListFileName","profilesList","_callee2$","_context2","concat","fetchProfile","_x3","_x4","_fetchProfile","_callee3","xrInputSource","defaultProfile","getAssetPath","supportedProfilesList","match","supportedProfile","profile","assetPath","layout","_args3","_callee3$","_context3","length","undefined","profiles","some","profileId","profilePath","deprecated","handedness","layouts","keys","replace","defaultComponentValues","xAxis","yAxis","button","state","normalizeAxes","x","y","hypotenuse","Math","sqrt","theta","atan2","cos","sin","result","normalizedXAxis","normalizedYAxis","VisualResponse","visualResponseDescription","_classCallCheck","componentProperty","states","valueNodeName","valueNodeProperty","minNodeName","maxNodeName","updateFromComponent","_createClass","_ref","_normalizeAxes","includes","Component","componentId","componentDescription","_this","visualResponses","gamepadIndices","id","type","rootNodeName","touchPointNodeName","forEach","responseName","visualResponse","assign","values","get","data","_objectSpread","updateFromGamepad","gamepad","_this2","buttons","gamepadButton","pressed","touched","axes","abs","MotionController","assetUrl","_this3","layoutDescription","components","gripSpace","targetRaySpace","component","push","_this4"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/libs/MotionControllers.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst MotionControllerConstants = {\n  Handedness: {\n    NONE: \"none\",\n    LEFT: \"left\",\n    RIGHT: \"right\"\n  },\n  ComponentState: {\n    DEFAULT: \"default\",\n    TOUCHED: \"touched\",\n    PRESSED: \"pressed\"\n  },\n  ComponentProperty: {\n    BUTTON: \"button\",\n    X_AXIS: \"xAxis\",\n    Y_AXIS: \"yAxis\",\n    STATE: \"state\"\n  },\n  ComponentType: {\n    TRIGGER: \"trigger\",\n    SQUEEZE: \"squeeze\",\n    TOUCHPAD: \"touchpad\",\n    THUMBSTICK: \"thumbstick\",\n    BUTTON: \"button\"\n  },\n  ButtonTouchThreshold: 0.05,\n  AxisTouchThreshold: 0.1,\n  VisualResponseProperty: {\n    TRANSFORM: \"transform\",\n    VISIBILITY: \"visibility\"\n  }\n};\nasync function fetchJsonFile(path) {\n  const response = await fetch(path);\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  } else {\n    return response.json();\n  }\n}\nasync function fetchProfilesList(basePath) {\n  if (!basePath) {\n    throw new Error(\"No basePath supplied\");\n  }\n  const profileListFileName = \"profilesList.json\";\n  const profilesList = await fetchJsonFile(`${basePath}/${profileListFileName}`);\n  return profilesList;\n}\nasync function fetchProfile(xrInputSource, basePath, defaultProfile = null, getAssetPath = true) {\n  if (!xrInputSource) {\n    throw new Error(\"No xrInputSource supplied\");\n  }\n  if (!basePath) {\n    throw new Error(\"No basePath supplied\");\n  }\n  const supportedProfilesList = await fetchProfilesList(basePath);\n  let match = void 0;\n  xrInputSource.profiles.some((profileId) => {\n    const supportedProfile = supportedProfilesList[profileId];\n    if (supportedProfile) {\n      match = {\n        profileId,\n        profilePath: `${basePath}/${supportedProfile.path}`,\n        deprecated: !!supportedProfile.deprecated\n      };\n    }\n    return !!match;\n  });\n  if (!match) {\n    if (!defaultProfile) {\n      throw new Error(\"No matching profile name found\");\n    }\n    const supportedProfile = supportedProfilesList[defaultProfile];\n    if (!supportedProfile) {\n      throw new Error(`No matching profile name found and default profile \"${defaultProfile}\" missing.`);\n    }\n    match = {\n      profileId: defaultProfile,\n      profilePath: `${basePath}/${supportedProfile.path}`,\n      deprecated: !!supportedProfile.deprecated\n    };\n  }\n  const profile = await fetchJsonFile(match.profilePath);\n  let assetPath = void 0;\n  if (getAssetPath) {\n    let layout;\n    if (xrInputSource.handedness === \"any\") {\n      layout = profile.layouts[Object.keys(profile.layouts)[0]];\n    } else {\n      layout = profile.layouts[xrInputSource.handedness];\n    }\n    if (!layout) {\n      throw new Error(`No matching handedness, ${xrInputSource.handedness}, in profile ${match.profileId}`);\n    }\n    if (layout.assetPath) {\n      assetPath = match.profilePath.replace(\"profile.json\", layout.assetPath);\n    }\n  }\n  return { profile, assetPath };\n}\nconst defaultComponentValues = {\n  xAxis: 0,\n  yAxis: 0,\n  button: 0,\n  state: MotionControllerConstants.ComponentState.DEFAULT\n};\nfunction normalizeAxes(x = 0, y = 0) {\n  let xAxis = x;\n  let yAxis = y;\n  const hypotenuse = Math.sqrt(x * x + y * y);\n  if (hypotenuse > 1) {\n    const theta = Math.atan2(y, x);\n    xAxis = Math.cos(theta);\n    yAxis = Math.sin(theta);\n  }\n  const result = {\n    normalizedXAxis: xAxis * 0.5 + 0.5,\n    normalizedYAxis: yAxis * 0.5 + 0.5\n  };\n  return result;\n}\nclass VisualResponse {\n  constructor(visualResponseDescription) {\n    __publicField(this, \"value\");\n    __publicField(this, \"componentProperty\");\n    __publicField(this, \"states\");\n    __publicField(this, \"valueNodeName\");\n    __publicField(this, \"valueNodeProperty\");\n    __publicField(this, \"minNodeName\");\n    __publicField(this, \"maxNodeName\");\n    __publicField(this, \"valueNode\");\n    __publicField(this, \"minNode\");\n    __publicField(this, \"maxNode\");\n    this.componentProperty = visualResponseDescription.componentProperty;\n    this.states = visualResponseDescription.states;\n    this.valueNodeName = visualResponseDescription.valueNodeName;\n    this.valueNodeProperty = visualResponseDescription.valueNodeProperty;\n    if (this.valueNodeProperty === MotionControllerConstants.VisualResponseProperty.TRANSFORM) {\n      this.minNodeName = visualResponseDescription.minNodeName;\n      this.maxNodeName = visualResponseDescription.maxNodeName;\n    }\n    this.value = 0;\n    this.updateFromComponent(defaultComponentValues);\n  }\n  /**\n   * Computes the visual response's interpolation weight based on component state\n   * @param {Object} componentValues - The component from which to update\n   * @param {number | undefined} xAxis - The reported X axis value of the component\n   * @param {number | undefined} yAxis - The reported Y axis value of the component\n   * @param {number | undefined} button - The reported value of the component's button\n   * @param {string} state - The component's active state\n   */\n  updateFromComponent({\n    xAxis,\n    yAxis,\n    button,\n    state\n  }) {\n    const { normalizedXAxis, normalizedYAxis } = normalizeAxes(xAxis, yAxis);\n    switch (this.componentProperty) {\n      case MotionControllerConstants.ComponentProperty.X_AXIS:\n        this.value = this.states.includes(state) ? normalizedXAxis : 0.5;\n        break;\n      case MotionControllerConstants.ComponentProperty.Y_AXIS:\n        this.value = this.states.includes(state) ? normalizedYAxis : 0.5;\n        break;\n      case MotionControllerConstants.ComponentProperty.BUTTON:\n        this.value = this.states.includes(state) && button ? button : 0;\n        break;\n      case MotionControllerConstants.ComponentProperty.STATE:\n        if (this.valueNodeProperty === MotionControllerConstants.VisualResponseProperty.VISIBILITY) {\n          this.value = this.states.includes(state);\n        } else {\n          this.value = this.states.includes(state) ? 1 : 0;\n        }\n        break;\n      default:\n        throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`);\n    }\n  }\n}\nclass Component {\n  /**\n   * @param {string} componentId - Id of the component\n   * @param {InputProfileComponent} componentDescription - Description of the component to be created\n   */\n  constructor(componentId, componentDescription) {\n    __publicField(this, \"id\");\n    __publicField(this, \"values\");\n    __publicField(this, \"type\");\n    __publicField(this, \"gamepadIndices\");\n    __publicField(this, \"rootNodeName\");\n    __publicField(this, \"visualResponses\");\n    __publicField(this, \"touchPointNodeName\");\n    __publicField(this, \"touchPointNode\");\n    if (!componentId || !componentDescription || !componentDescription.visualResponses || !componentDescription.gamepadIndices || Object.keys(componentDescription.gamepadIndices).length === 0) {\n      throw new Error(\"Invalid arguments supplied\");\n    }\n    this.id = componentId;\n    this.type = componentDescription.type;\n    this.rootNodeName = componentDescription.rootNodeName;\n    this.touchPointNodeName = componentDescription.touchPointNodeName;\n    this.visualResponses = {};\n    Object.keys(componentDescription.visualResponses).forEach((responseName) => {\n      const visualResponse = new VisualResponse(componentDescription.visualResponses[responseName]);\n      this.visualResponses[responseName] = visualResponse;\n    });\n    this.gamepadIndices = Object.assign({}, componentDescription.gamepadIndices);\n    this.values = {\n      state: MotionControllerConstants.ComponentState.DEFAULT,\n      button: this.gamepadIndices.button !== void 0 ? 0 : void 0,\n      xAxis: this.gamepadIndices.xAxis !== void 0 ? 0 : void 0,\n      yAxis: this.gamepadIndices.yAxis !== void 0 ? 0 : void 0\n    };\n  }\n  get data() {\n    const data = { id: this.id, ...this.values };\n    return data;\n  }\n  /**\n   * @description Poll for updated data based on current gamepad state\n   * @param {Object} gamepad - The gamepad object from which the component data should be polled\n   */\n  updateFromGamepad(gamepad) {\n    this.values.state = MotionControllerConstants.ComponentState.DEFAULT;\n    if (this.gamepadIndices.button !== void 0 && gamepad.buttons.length > this.gamepadIndices.button) {\n      const gamepadButton = gamepad.buttons[this.gamepadIndices.button];\n      this.values.button = gamepadButton.value;\n      this.values.button = this.values.button < 0 ? 0 : this.values.button;\n      this.values.button = this.values.button > 1 ? 1 : this.values.button;\n      if (gamepadButton.pressed || this.values.button === 1) {\n        this.values.state = MotionControllerConstants.ComponentState.PRESSED;\n      } else if (gamepadButton.touched || this.values.button > MotionControllerConstants.ButtonTouchThreshold) {\n        this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n      }\n    }\n    if (this.gamepadIndices.xAxis !== void 0 && gamepad.axes.length > this.gamepadIndices.xAxis) {\n      this.values.xAxis = gamepad.axes[this.gamepadIndices.xAxis];\n      this.values.xAxis = this.values.xAxis < -1 ? -1 : this.values.xAxis;\n      this.values.xAxis = this.values.xAxis > 1 ? 1 : this.values.xAxis;\n      if (this.values.state === MotionControllerConstants.ComponentState.DEFAULT && Math.abs(this.values.xAxis) > MotionControllerConstants.AxisTouchThreshold) {\n        this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n      }\n    }\n    if (this.gamepadIndices.yAxis !== void 0 && gamepad.axes.length > this.gamepadIndices.yAxis) {\n      this.values.yAxis = gamepad.axes[this.gamepadIndices.yAxis];\n      this.values.yAxis = this.values.yAxis < -1 ? -1 : this.values.yAxis;\n      this.values.yAxis = this.values.yAxis > 1 ? 1 : this.values.yAxis;\n      if (this.values.state === MotionControllerConstants.ComponentState.DEFAULT && Math.abs(this.values.yAxis) > MotionControllerConstants.AxisTouchThreshold) {\n        this.values.state = MotionControllerConstants.ComponentState.TOUCHED;\n      }\n    }\n    Object.values(this.visualResponses).forEach((visualResponse) => {\n      visualResponse.updateFromComponent(this.values);\n    });\n  }\n}\nclass MotionController {\n  /**\n   * @param {XRInputSource} xrInputSource - The XRInputSource to build the MotionController around\n   * @param {Profile} profile - The best matched profile description for the supplied xrInputSource\n   * @param {string} assetUrl\n   */\n  constructor(xrInputSource, profile, assetUrl) {\n    __publicField(this, \"xrInputSource\");\n    __publicField(this, \"assetUrl\");\n    __publicField(this, \"layoutDescription\");\n    __publicField(this, \"id\");\n    __publicField(this, \"components\");\n    if (!xrInputSource) {\n      throw new Error(\"No xrInputSource supplied\");\n    }\n    if (!profile) {\n      throw new Error(\"No profile supplied\");\n    }\n    if (!profile.layouts[xrInputSource.handedness]) {\n      throw new Error(\"No layout for \" + xrInputSource.handedness + \" handedness\");\n    }\n    this.xrInputSource = xrInputSource;\n    this.assetUrl = assetUrl;\n    this.id = profile.profileId;\n    this.layoutDescription = profile.layouts[xrInputSource.handedness];\n    this.components = {};\n    Object.keys(this.layoutDescription.components).forEach((componentId) => {\n      const componentDescription = this.layoutDescription.components[componentId];\n      this.components[componentId] = new Component(componentId, componentDescription);\n    });\n    this.updateFromGamepad();\n  }\n  get gripSpace() {\n    return this.xrInputSource.gripSpace;\n  }\n  get targetRaySpace() {\n    return this.xrInputSource.targetRaySpace;\n  }\n  /**\n   * @description Returns a subset of component data for simplified debugging\n   */\n  get data() {\n    const data = [];\n    Object.values(this.components).forEach((component) => {\n      data.push(component.data);\n    });\n    return data;\n  }\n  /**\n   * @description Poll for updated data based on current gamepad state\n   */\n  updateFromGamepad() {\n    Object.values(this.components).forEach((component) => {\n      component.updateFromGamepad(this.xrInputSource.gamepad);\n    });\n  }\n}\nexport {\n  MotionController,\n  MotionControllerConstants,\n  fetchProfile,\n  fetchProfilesList\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}