{"ast":null,"code":"import _slicedToArray from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"mixContrast\", \"distortionMap\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, HalfFloatType, LinearFilter } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\n/**\n * @deprecated Use MeshReflectorMaterial instead\n */\n\nvar Reflector = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n    mixBlur = _ref$mixBlur === void 0 ? 0 : _ref$mixBlur,\n    _ref$mixStrength = _ref.mixStrength,\n    mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n    _ref$args = _ref.args,\n    args = _ref$args === void 0 ? [1, 1] : _ref$args,\n    _ref$minDepthThreshol = _ref.minDepthThreshold,\n    minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n    _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n    maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n    _ref$depthScale = _ref.depthScale,\n    depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n    _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n    depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n    _ref$mirror = _ref.mirror,\n    mirror = _ref$mirror === void 0 ? 0 : _ref$mirror,\n    children = _ref.children,\n    _ref$debug = _ref.debug,\n    debug = _ref$debug === void 0 ? 0 : _ref$debug,\n    _ref$distortion = _ref.distortion,\n    distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n    _ref$mixContrast = _ref.mixContrast,\n    mixContrast = _ref$mixContrast === void 0 ? 1 : _ref$mixContrast,\n    distortionMap = _ref.distortionMap,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useEffect(function () {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var scene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  });\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var meshRef = React.useRef(null);\n  var _React$useState = React.useState(function () {\n      return new Plane();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    reflectorPlane = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    normal = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    reflectorWorldPosition = _React$useState6[0];\n  var _React$useState7 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    cameraWorldPosition = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    rotationMatrix = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return new Vector3(0, 0, -1);\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    lookAtPosition = _React$useState12[0];\n  var _React$useState13 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 1),\n    clipPlane = _React$useState14[0];\n  var _React$useState15 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState16 = _slicedToArray(_React$useState15, 1),\n    view = _React$useState16[0];\n  var _React$useState17 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState18 = _slicedToArray(_React$useState17, 1),\n    target = _React$useState18[0];\n  var _React$useState19 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState20 = _slicedToArray(_React$useState19, 1),\n    q = _React$useState20[0];\n  var _React$useState21 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState22 = _slicedToArray(_React$useState21, 1),\n    textureMatrix = _React$useState22[0];\n  var _React$useState23 = React.useState(function () {\n      return new PerspectiveCamera();\n    }),\n    _React$useState24 = _slicedToArray(_React$useState23, 1),\n    virtualCamera = _React$useState24[0];\n  var beforeRender = React.useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  var _React$useMemo = React.useMemo(function () {\n      var parameters = {\n        type: HalfFloatType,\n        minFilter: LinearFilter,\n        magFilter: LinearFilter\n      };\n      var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n      fbo1.depthBuffer = true;\n      fbo1.depthTexture = new DepthTexture(resolution, resolution);\n      fbo1.depthTexture.format = DepthFormat;\n      fbo1.depthTexture.type = UnsignedShortType;\n      var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n      var blurpass = new BlurPass({\n        gl: gl,\n        resolution: resolution,\n        width: blur[0],\n        height: blur[1],\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias\n      });\n      var reflectorProps = {\n        mirror: mirror,\n        textureMatrix: textureMatrix,\n        mixBlur: mixBlur,\n        tDiffuse: fbo1.texture,\n        tDepth: fbo1.depthTexture,\n        tDiffuseBlur: fbo2.texture,\n        hasBlur: hasBlur,\n        mixStrength: mixStrength,\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias,\n        transparent: true,\n        debug: debug,\n        distortion: distortion,\n        distortionMap: distortionMap,\n        mixContrast: mixContrast,\n        'defines-USE_BLUR': hasBlur ? '' : undefined,\n        'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n        'defines-USE_DISTORTION': distortionMap ? '' : undefined\n      };\n      return [fbo1, fbo2, blurpass, reflectorProps];\n    }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n    fbo1 = _React$useMemo2[0],\n    fbo2 = _React$useMemo2[1],\n    blurpass = _React$useMemo2[2],\n    reflectorProps = _React$useMemo2[3];\n  useFrame(function () {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    var currentXrEnabled = gl.xr.enabled;\n    var currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\nexport { Reflector };","map":{"version":3,"names":["_extends","React","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","HalfFloatType","LinearFilter","extend","useThree","useFrame","mergeRefs","BlurPass","MeshReflectorMaterial","Reflector","forwardRef","_ref","ref","_ref$mixBlur","mixBlur","_ref$mixStrength","mixStrength","_ref$resolution","resolution","_ref$blur","blur","_ref$args","args","_ref$minDepthThreshol","minDepthThreshold","_ref$maxDepthThreshol","maxDepthThreshold","_ref$depthScale","depthScale","_ref$depthToBlurRatio","depthToBlurRatioBias","_ref$mirror","mirror","children","_ref$debug","debug","_ref$distortion","distortion","_ref$mixContrast","mixContrast","distortionMap","props","_objectWithoutProperties","_excluded","useEffect","console","warn","gl","_ref2","camera","_ref3","scene","_ref4","Array","isArray","hasBlur","meshRef","useRef","_React$useState","useState","_React$useState2","_slicedToArray","reflectorPlane","_React$useState3","_React$useState4","normal","_React$useState5","_React$useState6","reflectorWorldPosition","_React$useState7","_React$useState8","cameraWorldPosition","_React$useState9","_React$useState10","rotationMatrix","_React$useState11","_React$useState12","lookAtPosition","_React$useState13","_React$useState14","clipPlane","_React$useState15","_React$useState16","view","_React$useState17","_React$useState18","target","_React$useState19","_React$useState20","q","_React$useState21","_React$useState22","textureMatrix","_React$useState23","_React$useState24","virtualCamera","beforeRender","useCallback","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","_React$useMemo","useMemo","parameters","type","minFilter","magFilter","fbo1","depthBuffer","depthTexture","format","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","transparent","undefined","_React$useMemo2","visible","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","createElement"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/Reflector.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, HalfFloatType, LinearFilter } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\n/**\n * @deprecated Use MeshReflectorMaterial instead\n */\n\nconst Reflector = /*#__PURE__*/React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      type: HalfFloatType,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}