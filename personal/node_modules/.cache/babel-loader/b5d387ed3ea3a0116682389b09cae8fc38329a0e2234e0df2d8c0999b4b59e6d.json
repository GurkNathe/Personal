{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { AfterimageShader } from \"../shaders/AfterimageShader.js\";\nclass AfterimagePass extends Pass {\n  constructor() {\n    let damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    let shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n    super();\n    __publicField(this, \"shader\");\n    __publicField(this, \"uniforms\");\n    __publicField(this, \"textureComp\");\n    __publicField(this, \"textureOld\");\n    __publicField(this, \"shaderMaterial\");\n    __publicField(this, \"compFsQuad\");\n    __publicField(this, \"copyFsQuad\");\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms[\"damp\"].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms[\"tOld\"].value = this.textureOld.texture;\n    this.uniforms[\"tNew\"].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.copyFsQuad.render(renderer);\n    }\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp;\n  }\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n}\nexport { AfterimagePass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","constructor","damp","arguments","length","undefined","shader","uniforms","clone","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","render","renderer","writeBuffer","readBuffer","texture","setRenderTarget","map","renderToScreen","clear","temp","setSize","width","height"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { AfterimageShader } from \"../shaders/AfterimageShader.js\";\nclass AfterimagePass extends Pass {\n  constructor(damp = 0.96, shader = AfterimageShader) {\n    super();\n    __publicField(this, \"shader\");\n    __publicField(this, \"uniforms\");\n    __publicField(this, \"textureComp\");\n    __publicField(this, \"textureOld\");\n    __publicField(this, \"shaderMaterial\");\n    __publicField(this, \"compFsQuad\");\n    __publicField(this, \"copyFsQuad\");\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms[\"damp\"].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms[\"tOld\"].value = this.textureOld.texture;\n    this.uniforms[\"tNew\"].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear)\n        renderer.clear();\n      this.copyFsQuad.render(renderer);\n    }\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp;\n  }\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n}\nexport {\n  AfterimagePass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}