{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry, Color } from \"three\";\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n    __publicField(this, \"isTransformControls\", true);\n    __publicField(this, \"visible\", false);\n    __publicField(this, \"domElement\");\n    __publicField(this, \"raycaster\", new Raycaster());\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"plane\");\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"tempVector2\", new Vector3());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n    __publicField(this, \"pointStart\", new Vector3());\n    __publicField(this, \"pointEnd\", new Vector3());\n    __publicField(this, \"offset\", new Vector3());\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"startNorm\", new Vector3());\n    __publicField(this, \"endNorm\", new Vector3());\n    __publicField(this, \"rotationAngle\", 0);\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"cameraScale\", new Vector3());\n    __publicField(this, \"parentPosition\", new Vector3());\n    __publicField(this, \"parentQuaternion\", new Quaternion());\n    __publicField(this, \"parentQuaternionInv\", new Quaternion());\n    __publicField(this, \"parentScale\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldScaleStart\", new Vector3());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"worldQuaternionInv\", new Quaternion());\n    __publicField(this, \"worldScale\", new Vector3());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"positionStart\", new Vector3());\n    __publicField(this, \"quaternionStart\", new Quaternion());\n    __publicField(this, \"scaleStart\", new Vector3());\n    __publicField(this, \"camera\");\n    __publicField(this, \"object\");\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"translationSnap\", null);\n    __publicField(this, \"rotationSnap\", null);\n    __publicField(this, \"scaleSnap\", null);\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // events\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(this, \"mouseDownEvent\", {\n      type: \"mouseDown\",\n      mode: this.mode\n    });\n    __publicField(this, \"mouseUpEvent\", {\n      type: \"mouseUp\",\n      mode: this.mode\n    });\n    __publicField(this, \"objectChangeEvent\", {\n      type: \"objectChange\"\n    });\n    __publicField(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    // Set current object\n    __publicField(this, \"attach\", object => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n    // Detatch from object\n    __publicField(this, \"detach\", () => {\n      this.object = void 0;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n    // Reset\n    __publicField(this, \"reset\", () => {\n      if (!this.enabled) return this;\n      if (this.dragging) {\n        if (this.object !== void 0) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n      return this;\n    });\n    __publicField(this, \"updateMatrixWorld\", () => {\n      if (this.object !== void 0) {\n        this.object.updateMatrixWorld();\n        if (this.object.parent === null) {\n          console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n    __publicField(this, \"pointerHover\", pointer => {\n      if (this.object === void 0 || this.dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n    __publicField(this, \"pointerDown\", pointer => {\n      if (this.object === void 0 || this.dragging === true || pointer.button !== 0) return;\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n        if (planeIntersect) {\n          let space = this.space;\n          if (this.mode === \"scale\") {\n            space = \"local\";\n          } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n            space = \"world\";\n          }\n          if (space === \"local\" && this.mode === \"rotate\") {\n            const snap = this.rotationSnap;\n            if (this.axis === \"X\" && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === \"Y\" && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === \"Z\" && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n          this.object.updateMatrixWorld();\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n    __publicField(this, \"pointerMove\", pointer => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n      if (mode === \"scale\") {\n        space = \"local\";\n      } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n        space = \"world\";\n      }\n      if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n      if (mode === \"translate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n        if (axis.indexOf(\"X\") === -1) this.offset.x = 0;\n        if (axis.indexOf(\"Y\") === -1) this.offset.y = 0;\n        if (axis.indexOf(\"Z\") === -1) this.offset.z = 0;\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n        object.position.copy(this.offset).add(this.positionStart);\n        if (this.translationSnap) {\n          if (space === \"local\") {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n          if (space === \"world\") {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === \"scale\") {\n        if (axis.search(\"XYZ\") !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n          if (axis.search(\"X\") === -1) {\n            this.tempVector2.x = 1;\n          }\n          if (axis.search(\"Y\") === -1) {\n            this.tempVector2.y = 1;\n          }\n          if (axis.search(\"Z\") === -1) {\n            this.tempVector2.z = 1;\n          }\n        }\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n        if (this.scaleSnap && this.object) {\n          if (axis.search(\"X\") !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === \"rotate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n        if (axis === \"E\") {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === \"XYZE\") {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n          if (space === \"local\") {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        }\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        }\n        if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n    __publicField(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n      this.dragging = false;\n      this.axis = null;\n    });\n    __publicField(this, \"getPointer\", event => {\n      var _a, _b;\n      if (this.domElement && ((_a = this.domElement.ownerDocument) == null ? void 0 : _a.pointerLockElement)) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_b = this.domElement) == null ? void 0 : _b.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    __publicField(this, \"onPointerHover\", event => {\n      if (!this.enabled) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n    __publicField(this, \"onPointerDown\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = \"none\";\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerMove\", event => {\n      if (!this.enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerUp\", event => {\n      if (!this.enabled || !this.domElement) return;\n      this.domElement.style.touchAction = \"\";\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n    __publicField(this, \"getMode\", () => this.mode);\n    __publicField(this, \"setMode\", mode => {\n      this.mode = mode;\n    });\n    __publicField(this, \"setTranslationSnap\", translationSnap => {\n      this.translationSnap = translationSnap;\n    });\n    __publicField(this, \"setRotationSnap\", rotationSnap => {\n      this.rotationSnap = rotationSnap;\n    });\n    __publicField(this, \"setScaleSnap\", scaleSnap => {\n      this.scaleSnap = scaleSnap;\n    });\n    __publicField(this, \"setSize\", size => {\n      this.size = size;\n    });\n    __publicField(this, \"setSpace\", space => {\n      this.space = space;\n    });\n    __publicField(this, \"update\", () => {\n      console.warn(\"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\");\n    });\n    __publicField(this, \"connect\", domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"pointermove\", this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n    });\n    __publicField(this, \"dispose\", () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = this.domElement) == null ? void 0 : _a.removeEventListener(\"pointerdown\", this.onPointerDown);\n      (_b = this.domElement) == null ? void 0 : _b.removeEventListener(\"pointermove\", this.onPointerHover);\n      (_d = (_c = this.domElement) == null ? void 0 : _c.ownerDocument) == null ? void 0 : _d.removeEventListener(\"pointermove\", this.onPointerMove);\n      (_f = (_e = this.domElement) == null ? void 0 : _e.ownerDocument) == null ? void 0 : _f.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane);\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + \"-changed\",\n              value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      });\n      this[propName] = defaultValue;\n      this.plane[propName] = defaultValue;\n      this.gizmo[propName] = defaultValue;\n    };\n    defineProperty(\"camera\", this.camera);\n    defineProperty(\"object\", this.object);\n    defineProperty(\"enabled\", this.enabled);\n    defineProperty(\"axis\", this.axis);\n    defineProperty(\"mode\", this.mode);\n    defineProperty(\"translationSnap\", this.translationSnap);\n    defineProperty(\"rotationSnap\", this.rotationSnap);\n    defineProperty(\"scaleSnap\", this.scaleSnap);\n    defineProperty(\"space\", this.space);\n    defineProperty(\"size\", this.size);\n    defineProperty(\"dragging\", this.dragging);\n    defineProperty(\"showX\", this.showX);\n    defineProperty(\"showY\", this.showY);\n    defineProperty(\"showZ\", this.showZ);\n    defineProperty(\"worldPosition\", this.worldPosition);\n    defineProperty(\"worldPositionStart\", this.worldPositionStart);\n    defineProperty(\"worldQuaternion\", this.worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", this.worldQuaternionStart);\n    defineProperty(\"cameraPosition\", this.cameraPosition);\n    defineProperty(\"cameraQuaternion\", this.cameraQuaternion);\n    defineProperty(\"pointStart\", this.pointStart);\n    defineProperty(\"pointEnd\", this.pointEnd);\n    defineProperty(\"rotationAxis\", this.rotationAxis);\n    defineProperty(\"rotationAngle\", this.rotationAngle);\n    defineProperty(\"eye\", this.eye);\n    if (domElement !== void 0) this.connect(domElement);\n  }\n}\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    __publicField(this, \"isTransformControlsGizmo\", true);\n    __publicField(this, \"type\", \"TransformControlsGizmo\");\n    __publicField(this, \"tempVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"tempEuler\", new Euler());\n    __publicField(this, \"alignVector\", new Vector3(0, 1, 0));\n    __publicField(this, \"zeroVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"lookAtMatrix\", new Matrix4());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"tempQuaternion2\", new Quaternion());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"picker\");\n    __publicField(this, \"helper\");\n    // these are set from parent class TransformControls\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"camera\", null);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // updateMatrixWorld will update transformations and appearance of individual handles\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      if (this.mode === \"scale\") {\n        space = \"local\";\n      }\n      const quaternion = space === \"local\" ? this.worldQuaternion : this.identityQuaternion;\n      this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n      this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n      this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n      this.helper[\"translate\"].visible = this.mode === \"translate\";\n      this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n      this.helper[\"scale\"].visible = this.mode === \"scale\";\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i];\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n        if (handle.tag === \"helper\") {\n          handle.visible = false;\n          if (handle.name === \"AXIS\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n            if (this.axis === \"X\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Y\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Z\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"XYZE\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n            if (this.axis === \"E\") {\n              handle.visible = false;\n            }\n          } else if (handle.name === \"START\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"END\") {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"DELTA\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          }\n          continue;\n        }\n        handle.quaternion.copy(quaternion);\n        if (this.mode === \"translate\" || this.mode === \"scale\") {\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0;\n          if (handle.name === \"X\" || handle.name === \"XYZX\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Y\" || handle.name === \"XYZY\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Z\" || handle.name === \"XYZZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XY\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"YZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"X\") !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Y\") !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Z\") !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === \"rotate\") {\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search(\"E\") !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n          if (handle.name === \"X\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Y\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Z\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        }\n        handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity;\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone();\n        handle.material.color.copy(handle.material.tempColor);\n        handle.material.opacity = handle.material.tempOpacity;\n        if (!this.enabled) {\n          handle.material.opacity *= 0.5;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split(\"\").some(function (a) {\n            return handle.name === a;\n          })) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            handle.material.opacity *= 0.25;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n      super.updateMatrixWorld();\n    });\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(255);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(16776960);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(65535);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(16711935);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(16776960);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(16711680);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(65280);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(255);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(65535);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(16711935);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(16776960);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(7895160);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    };\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    };\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, \"fwd\"], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, \"bwd\"], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, \"fwd\"], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, \"bwd\"], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, \"fwd\"], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, \"bwd\"], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 1e-3]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 1e-3]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n}\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(1e5, 1e5, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    __publicField(this, \"isTransformControlsPlane\", true);\n    __publicField(this, \"type\", \"TransformControlsPlane\");\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"dirVector\", new Vector3());\n    __publicField(this, \"alignVector\", new Vector3());\n    __publicField(this, \"tempMatrix\", new Matrix4());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    // these are set from parent class TransformControls\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === \"scale\") space = \"local\";\n      this.unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.alignVector.copy(this.unitY);\n      switch (this.mode) {\n        case \"translate\":\n        case \"scale\":\n          switch (this.axis) {\n            case \"X\":\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n            case \"Y\":\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n            case \"Z\":\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n            case \"XY\":\n              this.dirVector.copy(this.unitZ);\n              break;\n            case \"YZ\":\n              this.dirVector.copy(this.unitX);\n              break;\n            case \"XZ\":\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n            case \"XYZ\":\n            case \"E\":\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case \"rotate\":\n        default:\n          this.dirVector.set(0, 0, 0);\n      }\n      if (this.dirVector.length() === 0) {\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n      super.updateMatrixWorld();\n    });\n  }\n}\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Object3D","Raycaster","Vector3","Quaternion","Euler","Matrix4","MeshBasicMaterial","DoubleSide","LineBasicMaterial","CylinderGeometry","BoxGeometry","BufferGeometry","Float32BufferAttribute","Mesh","Line","OctahedronGeometry","PlaneGeometry","TorusGeometry","SphereGeometry","Color","TransformControls","constructor","camera","domElement","X","Y","Z","type","mode","object","raycaster","includeInvisible","allIntersections","intersectObject","i","length","visible","axis","enabled","dragging","position","copy","positionStart","quaternion","quaternionStart","scale","scaleStart","dispatchEvent","changeEvent","objectChangeEvent","pointStart","pointEnd","updateMatrixWorld","parent","console","error","matrixWorld","decompose","parentPosition","parentQuaternion","parentScale","worldPosition","worldQuaternion","worldScale","parentQuaternionInv","invert","worldQuaternionInv","cameraPosition","cameraQuaternion","cameraScale","eye","sub","normalize","pointer","setFromCamera","intersect","intersectObjectWithRay","gizmo","picker","name","button","planeIntersect","plane","space","snap","rotationSnap","rotation","x","Math","round","y","z","worldPositionStart","worldQuaternionStart","worldScaleStart","point","mouseDownEvent","offset","applyQuaternion","indexOf","divide","add","translationSnap","tempQuaternion","search","tempVector","setFromMatrixPosition","d","dot","tempVector2","set","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAxis","rotationAngle","angleTo","startNorm","endNorm","cross","unit","setFromAxisAngle","mouseUpEvent","event","_a","_b","ownerDocument","pointerLockElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","pointerHover","getPointer","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","removeEventListener","pointerUp","size","warn","document","onPointerDown","onPointerHover","onPointerUp","_c","_d","_e","_f","traverse","child","mesh","geometry","dispose","material","TransformControlsGizmo","TransformControlsPlane","propName","defaultValue","propValue","get","showX","showY","showZ","connect","identityQuaternion","helper","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","PI","fov","multiplyScalar","tag","setFromEuler","tempEuler","abs","alignVector","unitX","unitY","unitZ","setFromRotationMatrix","lookAtMatrix","lookAt","zeroVector","clone","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","tempQuaternion2","atan2","multiplyQuaternions","tempOpacity","opacity","tempColor","color","lerp","split","some","a","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","wireframe","dirVector","tempMatrix"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/controls/TransformControls.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry, Color } from \"three\";\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n    __publicField(this, \"isTransformControls\", true);\n    __publicField(this, \"visible\", false);\n    __publicField(this, \"domElement\");\n    __publicField(this, \"raycaster\", new Raycaster());\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"plane\");\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"tempVector2\", new Vector3());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n    __publicField(this, \"pointStart\", new Vector3());\n    __publicField(this, \"pointEnd\", new Vector3());\n    __publicField(this, \"offset\", new Vector3());\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"startNorm\", new Vector3());\n    __publicField(this, \"endNorm\", new Vector3());\n    __publicField(this, \"rotationAngle\", 0);\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"cameraScale\", new Vector3());\n    __publicField(this, \"parentPosition\", new Vector3());\n    __publicField(this, \"parentQuaternion\", new Quaternion());\n    __publicField(this, \"parentQuaternionInv\", new Quaternion());\n    __publicField(this, \"parentScale\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldScaleStart\", new Vector3());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"worldQuaternionInv\", new Quaternion());\n    __publicField(this, \"worldScale\", new Vector3());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"positionStart\", new Vector3());\n    __publicField(this, \"quaternionStart\", new Quaternion());\n    __publicField(this, \"scaleStart\", new Vector3());\n    __publicField(this, \"camera\");\n    __publicField(this, \"object\");\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"translationSnap\", null);\n    __publicField(this, \"rotationSnap\", null);\n    __publicField(this, \"scaleSnap\", null);\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // events\n    __publicField(this, \"changeEvent\", { type: \"change\" });\n    __publicField(this, \"mouseDownEvent\", { type: \"mouseDown\", mode: this.mode });\n    __publicField(this, \"mouseUpEvent\", { type: \"mouseUp\", mode: this.mode });\n    __publicField(this, \"objectChangeEvent\", { type: \"objectChange\" });\n    __publicField(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    // Set current object\n    __publicField(this, \"attach\", (object) => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n    // Detatch from object\n    __publicField(this, \"detach\", () => {\n      this.object = void 0;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n    // Reset\n    __publicField(this, \"reset\", () => {\n      if (!this.enabled)\n        return this;\n      if (this.dragging) {\n        if (this.object !== void 0) {\n          this.object.position.copy(this.positionStart);\n          this.object.quaternion.copy(this.quaternionStart);\n          this.object.scale.copy(this.scaleStart);\n          this.dispatchEvent(this.changeEvent);\n          this.dispatchEvent(this.objectChangeEvent);\n          this.pointStart.copy(this.pointEnd);\n        }\n      }\n      return this;\n    });\n    __publicField(this, \"updateMatrixWorld\", () => {\n      if (this.object !== void 0) {\n        this.object.updateMatrixWorld();\n        if (this.object.parent === null) {\n          console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n    __publicField(this, \"pointerHover\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n    __publicField(this, \"pointerDown\", (pointer) => {\n      if (this.object === void 0 || this.dragging === true || pointer.button !== 0)\n        return;\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n        if (planeIntersect) {\n          let space = this.space;\n          if (this.mode === \"scale\") {\n            space = \"local\";\n          } else if (this.axis === \"E\" || this.axis === \"XYZE\" || this.axis === \"XYZ\") {\n            space = \"world\";\n          }\n          if (space === \"local\" && this.mode === \"rotate\") {\n            const snap = this.rotationSnap;\n            if (this.axis === \"X\" && snap)\n              this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === \"Y\" && snap)\n              this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === \"Z\" && snap)\n              this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n          this.object.updateMatrixWorld();\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n        this.dragging = true;\n        this.mouseDownEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n    __publicField(this, \"pointerMove\", (pointer) => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n      if (mode === \"scale\") {\n        space = \"local\";\n      } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n        space = \"world\";\n      }\n      if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1)\n        return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect)\n        return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n      if (mode === \"translate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n        if (axis.indexOf(\"X\") === -1)\n          this.offset.x = 0;\n        if (axis.indexOf(\"Y\") === -1)\n          this.offset.y = 0;\n        if (axis.indexOf(\"Z\") === -1)\n          this.offset.z = 0;\n        if (space === \"local\" && axis !== \"XYZ\") {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n        object.position.copy(this.offset).add(this.positionStart);\n        if (this.translationSnap) {\n          if (space === \"local\") {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n          if (space === \"world\") {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search(\"X\") !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Y\") !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search(\"Z\") !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === \"scale\") {\n        if (axis.search(\"XYZ\") !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0)\n            d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n          if (axis.search(\"X\") === -1) {\n            this.tempVector2.x = 1;\n          }\n          if (axis.search(\"Y\") === -1) {\n            this.tempVector2.y = 1;\n          }\n          if (axis.search(\"Z\") === -1) {\n            this.tempVector2.z = 1;\n          }\n        }\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n        if (this.scaleSnap && this.object) {\n          if (axis.search(\"X\") !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === \"rotate\") {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n        if (axis === \"E\") {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === \"XYZE\") {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n          if (space === \"local\") {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        }\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        }\n        if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n    __publicField(this, \"pointerUp\", (pointer) => {\n      if (pointer.button !== 0)\n        return;\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n      this.dragging = false;\n      this.axis = null;\n    });\n    __publicField(this, \"getPointer\", (event) => {\n      var _a, _b;\n      if (this.domElement && ((_a = this.domElement.ownerDocument) == null ? void 0 : _a.pointerLockElement)) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_b = this.domElement) == null ? void 0 : _b.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    __publicField(this, \"onPointerHover\", (event) => {\n      if (!this.enabled)\n        return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n    __publicField(this, \"onPointerDown\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"none\";\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerMove\", (event) => {\n      if (!this.enabled)\n        return;\n      this.pointerMove(this.getPointer(event));\n    });\n    __publicField(this, \"onPointerUp\", (event) => {\n      if (!this.enabled || !this.domElement)\n        return;\n      this.domElement.style.touchAction = \"\";\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n    __publicField(this, \"getMode\", () => this.mode);\n    __publicField(this, \"setMode\", (mode) => {\n      this.mode = mode;\n    });\n    __publicField(this, \"setTranslationSnap\", (translationSnap) => {\n      this.translationSnap = translationSnap;\n    });\n    __publicField(this, \"setRotationSnap\", (rotationSnap) => {\n      this.rotationSnap = rotationSnap;\n    });\n    __publicField(this, \"setScaleSnap\", (scaleSnap) => {\n      this.scaleSnap = scaleSnap;\n    });\n    __publicField(this, \"setSize\", (size) => {\n      this.size = size;\n    });\n    __publicField(this, \"setSpace\", (space) => {\n      this.space = space;\n    });\n    __publicField(this, \"update\", () => {\n      console.warn(\n        \"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\"\n      );\n    });\n    __publicField(this, \"connect\", (domElement) => {\n      if (domElement === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"pointermove\", this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n    });\n    __publicField(this, \"dispose\", () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = this.domElement) == null ? void 0 : _a.removeEventListener(\"pointerdown\", this.onPointerDown);\n      (_b = this.domElement) == null ? void 0 : _b.removeEventListener(\"pointermove\", this.onPointerHover);\n      (_d = (_c = this.domElement) == null ? void 0 : _c.ownerDocument) == null ? void 0 : _d.removeEventListener(\"pointermove\", this.onPointerMove);\n      (_f = (_e = this.domElement) == null ? void 0 : _e.ownerDocument) == null ? void 0 : _f.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.traverse((child) => {\n        const mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane);\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function() {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function(value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({ type: propName + \"-changed\", value });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      });\n      this[propName] = defaultValue;\n      this.plane[propName] = defaultValue;\n      this.gizmo[propName] = defaultValue;\n    };\n    defineProperty(\"camera\", this.camera);\n    defineProperty(\"object\", this.object);\n    defineProperty(\"enabled\", this.enabled);\n    defineProperty(\"axis\", this.axis);\n    defineProperty(\"mode\", this.mode);\n    defineProperty(\"translationSnap\", this.translationSnap);\n    defineProperty(\"rotationSnap\", this.rotationSnap);\n    defineProperty(\"scaleSnap\", this.scaleSnap);\n    defineProperty(\"space\", this.space);\n    defineProperty(\"size\", this.size);\n    defineProperty(\"dragging\", this.dragging);\n    defineProperty(\"showX\", this.showX);\n    defineProperty(\"showY\", this.showY);\n    defineProperty(\"showZ\", this.showZ);\n    defineProperty(\"worldPosition\", this.worldPosition);\n    defineProperty(\"worldPositionStart\", this.worldPositionStart);\n    defineProperty(\"worldQuaternion\", this.worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", this.worldQuaternionStart);\n    defineProperty(\"cameraPosition\", this.cameraPosition);\n    defineProperty(\"cameraQuaternion\", this.cameraQuaternion);\n    defineProperty(\"pointStart\", this.pointStart);\n    defineProperty(\"pointEnd\", this.pointEnd);\n    defineProperty(\"rotationAxis\", this.rotationAxis);\n    defineProperty(\"rotationAngle\", this.rotationAngle);\n    defineProperty(\"eye\", this.eye);\n    if (domElement !== void 0)\n      this.connect(domElement);\n  }\n}\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    __publicField(this, \"isTransformControlsGizmo\", true);\n    __publicField(this, \"type\", \"TransformControlsGizmo\");\n    __publicField(this, \"tempVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"tempEuler\", new Euler());\n    __publicField(this, \"alignVector\", new Vector3(0, 1, 0));\n    __publicField(this, \"zeroVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"lookAtMatrix\", new Matrix4());\n    __publicField(this, \"tempQuaternion\", new Quaternion());\n    __publicField(this, \"tempQuaternion2\", new Quaternion());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"gizmo\");\n    __publicField(this, \"picker\");\n    __publicField(this, \"helper\");\n    // these are set from parent class TransformControls\n    __publicField(this, \"rotationAxis\", new Vector3());\n    __publicField(this, \"cameraPosition\", new Vector3());\n    __publicField(this, \"worldPositionStart\", new Vector3());\n    __publicField(this, \"worldQuaternionStart\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"camera\", null);\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"size\", 1);\n    __publicField(this, \"dragging\", false);\n    __publicField(this, \"showX\", true);\n    __publicField(this, \"showY\", true);\n    __publicField(this, \"showZ\", true);\n    // updateMatrixWorld will update transformations and appearance of individual handles\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      if (this.mode === \"scale\") {\n        space = \"local\";\n      }\n      const quaternion = space === \"local\" ? this.worldQuaternion : this.identityQuaternion;\n      this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n      this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n      this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n      this.helper[\"translate\"].visible = this.mode === \"translate\";\n      this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n      this.helper[\"scale\"].visible = this.mode === \"scale\";\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i];\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n        if (handle.tag === \"helper\") {\n          handle.visible = false;\n          if (handle.name === \"AXIS\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n            if (this.axis === \"X\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Y\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"Z\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === \"XYZE\") {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(\n                this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY)\n              );\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n            if (this.axis === \"E\") {\n              handle.visible = false;\n            }\n          } else if (handle.name === \"START\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"END\") {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === \"DELTA\") {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          }\n          continue;\n        }\n        handle.quaternion.copy(quaternion);\n        if (this.mode === \"translate\" || this.mode === \"scale\") {\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0;\n          if (handle.name === \"X\" || handle.name === \"XYZX\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Y\" || handle.name === \"XYZY\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"Z\" || handle.name === \"XYZZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XY\") {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"YZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === \"XZ\") {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"X\") !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Y\") !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search(\"Z\") !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === \"fwd\") {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === \"bwd\") {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === \"rotate\") {\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search(\"E\") !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n          if (handle.name === \"X\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Y\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === \"Z\") {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        }\n        handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n        handle.material.tempOpacity = handle.material.tempOpacity || handle.material.opacity;\n        handle.material.tempColor = handle.material.tempColor || handle.material.color.clone();\n        handle.material.color.copy(handle.material.tempColor);\n        handle.material.opacity = handle.material.tempOpacity;\n        if (!this.enabled) {\n          handle.material.opacity *= 0.5;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split(\"\").some(function(a) {\n            return handle.name === a;\n          })) {\n            handle.material.opacity = 1;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            handle.material.opacity *= 0.25;\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n      super.updateMatrixWorld();\n    });\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(255);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(16776960);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(65535);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(16711935);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(16776960);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(16711680);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(65280);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(255);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(65535);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(16711935);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(16776960);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(7895160);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    };\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    };\n    const gizmoTranslate = {\n      X: [\n        [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, \"fwd\"],\n        [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, \"bwd\"],\n        [new Line(lineGeometry, matLineRed)]\n      ],\n      Y: [\n        [new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, \"fwd\"],\n        [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, \"bwd\"],\n        [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]\n      ],\n      Z: [\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, \"fwd\"],\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, \"bwd\"],\n        [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]\n      ],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [\n        [new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]],\n        [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [\n          new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()),\n          [0.15, 0, 0.15],\n          [-Math.PI / 2, 0, 0]\n        ],\n        [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const gizmoRotate = {\n      X: [\n        [new Line(CircleGeometry(1, 0.5), matLineRed)],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]\n      ],\n      Y: [\n        [new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]\n      ],\n      Z: [\n        [new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]],\n        [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]\n      ],\n      E: [\n        [new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [1.17, 0, 0],\n          [0, 0, -Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [-1.17, 0, 0],\n          [0, 0, Math.PI / 2],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, -1.17, 0],\n          [Math.PI, 0, 0],\n          [1, 1, 1e-3]\n        ],\n        [\n          new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent),\n          [0, 1.17, 0],\n          [0, 0, 0],\n          [1, 1, 1e-3]\n        ]\n      ],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [\n        [new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]\n      ],\n      Y: [\n        [new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]],\n        [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]\n      ],\n      Z: [\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]],\n        [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]\n      ],\n      XY: [\n        [new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]],\n        [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]\n      ],\n      YZ: [\n        [new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XZ: [\n        [new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]],\n        [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]],\n        [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]\n      ],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]]\n    };\n    const setupGizmo = (gizmoMap) => {\n      const gizmo = new Object3D();\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n}\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(\n      new PlaneGeometry(1e5, 1e5, 2, 2),\n      new MeshBasicMaterial({\n        visible: false,\n        wireframe: true,\n        side: DoubleSide,\n        transparent: true,\n        opacity: 0.1,\n        toneMapped: false\n      })\n    );\n    __publicField(this, \"isTransformControlsPlane\", true);\n    __publicField(this, \"type\", \"TransformControlsPlane\");\n    __publicField(this, \"unitX\", new Vector3(1, 0, 0));\n    __publicField(this, \"unitY\", new Vector3(0, 1, 0));\n    __publicField(this, \"unitZ\", new Vector3(0, 0, 1));\n    __publicField(this, \"tempVector\", new Vector3());\n    __publicField(this, \"dirVector\", new Vector3());\n    __publicField(this, \"alignVector\", new Vector3());\n    __publicField(this, \"tempMatrix\", new Matrix4());\n    __publicField(this, \"identityQuaternion\", new Quaternion());\n    // these are set from parent class TransformControls\n    __publicField(this, \"cameraQuaternion\", new Quaternion());\n    __publicField(this, \"worldPosition\", new Vector3());\n    __publicField(this, \"worldQuaternion\", new Quaternion());\n    __publicField(this, \"eye\", new Vector3());\n    __publicField(this, \"axis\", null);\n    __publicField(this, \"mode\", \"translate\");\n    __publicField(this, \"space\", \"world\");\n    __publicField(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === \"scale\")\n        space = \"local\";\n      this.unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : this.identityQuaternion);\n      this.alignVector.copy(this.unitY);\n      switch (this.mode) {\n        case \"translate\":\n        case \"scale\":\n          switch (this.axis) {\n            case \"X\":\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n            case \"Y\":\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n            case \"Z\":\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n            case \"XY\":\n              this.dirVector.copy(this.unitZ);\n              break;\n            case \"YZ\":\n              this.dirVector.copy(this.unitX);\n              break;\n            case \"XZ\":\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n            case \"XYZ\":\n            case \"E\":\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case \"rotate\":\n        default:\n          this.dirVector.set(0, 0, 0);\n      }\n      if (this.dirVector.length() === 0) {\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n      super.updateMatrixWorld();\n    });\n  }\n}\nexport {\n  TransformControls,\n  TransformControlsGizmo,\n  TransformControlsPlane\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}