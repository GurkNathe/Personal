{"ast":null,"code":"import _slicedToArray from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3 } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { Hud } from './Hud.js';\nvar Context = /*#__PURE__*/React.createContext({});\nvar useGizmoContext = function useGizmoContext() {\n  return React.useContext(Context);\n};\nvar turnRate = 2 * Math.PI; // turn rate in angles per second\n\nvar dummy = new Object3D();\nvar matrix = new Matrix4();\nvar q1 = new Quaternion(),\n  q2 = new Quaternion();\nvar target = new Vector3();\nvar targetPosition = new Vector3();\nvar isOrbitControls = function isOrbitControls(controls) {\n  return 'minPolarAngle' in controls;\n};\nvar GizmoHelper = function GizmoHelper(_ref) {\n  var _ref$alignment = _ref.alignment,\n    alignment = _ref$alignment === void 0 ? 'bottom-right' : _ref$alignment,\n    _ref$margin = _ref.margin,\n    margin = _ref$margin === void 0 ? [80, 80] : _ref$margin,\n    _ref$renderPriority = _ref.renderPriority,\n    renderPriority = _ref$renderPriority === void 0 ? 1 : _ref$renderPriority,\n    onUpdate = _ref.onUpdate,\n    onTarget = _ref.onTarget,\n    children = _ref.children;\n  var size = useThree(function (state) {\n    return state.size;\n  });\n  var mainCamera = useThree(function (state) {\n    return state.camera;\n  }); // @ts-ignore\n\n  var defaultControls = useThree(function (state) {\n    return state.controls;\n  });\n  var invalidate = useThree(function (state) {\n    return state.invalidate;\n  });\n  var gizmoRef = React.useRef();\n  var virtualCam = React.useRef(null);\n  var animating = React.useRef(false);\n  var radius = React.useRef(0);\n  var focusPoint = React.useRef(new Vector3(0, 0, 0));\n  var defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(function () {\n    defaultUp.current.copy(mainCamera.up);\n  }, [mainCamera]);\n  var tweenCamera = React.useCallback(function (direction) {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    dummy.up.copy(mainCamera.up);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  useFrame(function (_, delta) {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false; // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          var step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n    }\n  });\n  var gizmoHelperContext = React.useMemo(function () {\n    return {\n      tweenCamera: tweenCamera\n    };\n  }, [tweenCamera]); // Position gizmo component within scene\n\n  var _margin = _slicedToArray(margin, 2),\n    marginX = _margin[0],\n    marginY = _margin[1];\n  var x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  var y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return /*#__PURE__*/React.createElement(Hud, {\n    renderPriority: renderPriority\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    makeDefault: true,\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, children)));\n};\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["React","useThree","useFrame","Object3D","Matrix4","Quaternion","Vector3","OrthographicCamera","Hud","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","isOrbitControls","controls","GizmoHelper","_ref","_ref$alignment","alignment","_ref$margin","margin","_ref$renderPriority","renderPriority","onUpdate","onTarget","children","size","state","mainCamera","camera","defaultControls","invalidate","gizmoRef","useRef","virtualCam","animating","radius","focusPoint","defaultUp","useEffect","current","copy","up","tweenCamera","useCallback","direction","position","distanceTo","quaternion","multiplyScalar","add","lookAt","_","delta","_gizmoRef$current","angleTo","step","rotateTowards","set","applyQuaternion","normalize","update","invert","setFromRotationMatrix","gizmoHelperContext","useMemo","_margin","_slicedToArray","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","makeDefault","ref"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3 } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { Hud } from './Hud.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\n\nconst isOrbitControls = controls => {\n  return 'minPolarAngle' in controls;\n};\n\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 1,\n  onUpdate,\n  onTarget,\n  children\n}) => {\n  const size = useThree(state => state.size);\n  const mainCamera = useThree(state => state.camera); // @ts-ignore\n\n  const defaultControls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(() => {\n    defaultUp.current.copy(mainCamera.up);\n  }, [mainCamera]);\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    dummy.up.copy(mainCamera.up);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false; // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n    }\n  });\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return /*#__PURE__*/React.createElement(Hud, {\n    renderPriority: renderPriority\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    makeDefault: true,\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, children)));\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}