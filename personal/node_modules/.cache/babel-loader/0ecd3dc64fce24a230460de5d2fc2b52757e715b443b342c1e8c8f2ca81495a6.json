{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, Vector3, DataTexture, UnsignedByteType, LinearFilter, ClampToEdgeWrapping } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nvar LUTCubeLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(LUTCubeLoader, _Loader);\n  var _super = _createSuper(LUTCubeLoader);\n  function LUTCubeLoader() {\n    _classCallCheck(this, LUTCubeLoader);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LUTCubeLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType(\"text\");\n      loader.load(url, function (text) {\n        try {\n          onLoad(_this.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          _this.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(str) {\n      str = str.replace(/^#.*?(\\n|\\r)/gm, \"\").replace(/^\\s*?(\\n|\\r)/gm, \"\").trim();\n      var title = null;\n      var size = null;\n      var domainMin = new Vector3(0, 0, 0);\n      var domainMax = new Vector3(1, 1, 1);\n      var lines = str.split(/[\\n\\r]+/g);\n      var data = null;\n      var currIndex = 0;\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i].trim();\n        var split = line.split(/\\s/g);\n        switch (split[0]) {\n          case \"TITLE\":\n            title = line.substring(7, line.length - 1);\n            break;\n          case \"LUT_3D_SIZE\":\n            var sizeToken = split[1];\n            size = parseFloat(sizeToken);\n            data = new Uint8Array(size * size * size * 4);\n            break;\n          case \"DOMAIN_MIN\":\n            domainMin.x = parseFloat(split[1]);\n            domainMin.y = parseFloat(split[2]);\n            domainMin.z = parseFloat(split[3]);\n            break;\n          case \"DOMAIN_MAX\":\n            domainMax.x = parseFloat(split[1]);\n            domainMax.y = parseFloat(split[2]);\n            domainMax.z = parseFloat(split[3]);\n            break;\n          default:\n            var r = parseFloat(split[0]);\n            var g = parseFloat(split[1]);\n            var b = parseFloat(split[2]);\n            if (r > 1 || r < 0 || g > 1 || g < 0 || b > 1 || b < 0) {\n              throw new Error(\"LUTCubeLoader : Non normalized values not supported.\");\n            }\n            data[currIndex + 0] = r * 255;\n            data[currIndex + 1] = g * 255;\n            data[currIndex + 2] = b * 255;\n            data[currIndex + 3] = 255;\n            currIndex += 4;\n        }\n      }\n      var texture = new DataTexture();\n      texture.image.data = data;\n      texture.image.width = size;\n      texture.image.height = size * size;\n      texture.type = UnsignedByteType;\n      texture.magFilter = LinearFilter;\n      texture.minFilter = LinearFilter;\n      texture.wrapS = ClampToEdgeWrapping;\n      texture.wrapT = ClampToEdgeWrapping;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      var texture3D = new Data3DTexture();\n      texture3D.image.data = data;\n      texture3D.image.width = size;\n      texture3D.image.height = size;\n      texture3D.image.depth = size;\n      texture3D.type = UnsignedByteType;\n      texture3D.magFilter = LinearFilter;\n      texture3D.minFilter = LinearFilter;\n      texture3D.wrapS = ClampToEdgeWrapping;\n      texture3D.wrapT = ClampToEdgeWrapping;\n      texture3D.wrapR = ClampToEdgeWrapping;\n      texture3D.generateMipmaps = false;\n      texture3D.needsUpdate = true;\n      return {\n        title: title,\n        size: size,\n        domainMin: domainMin,\n        domainMax: domainMax,\n        texture: texture,\n        texture3D: texture3D\n      };\n    }\n  }]);\n  return LUTCubeLoader;\n}(Loader);\nexport { LUTCubeLoader };","map":{"version":3,"names":["Loader","FileLoader","Vector3","DataTexture","UnsignedByteType","LinearFilter","ClampToEdgeWrapping","Data3DTexture","LUTCubeLoader","_Loader","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","load","url","onLoad","onProgress","onError","_this","loader","manager","setPath","path","setResponseType","text","parse","e","console","error","itemError","str","replace","trim","title","size","domainMin","domainMax","lines","split","data","currIndex","i","l","length","line","substring","sizeToken","parseFloat","Uint8Array","x","y","z","r","g","b","Error","texture","image","width","height","type","magFilter","minFilter","wrapS","wrapT","generateMipmaps","needsUpdate","texture3D","depth","wrapR"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/LUTCubeLoader.js"],"sourcesContent":["import { Loader, FileLoader, Vector3, DataTexture, UnsignedByteType, LinearFilter, ClampToEdgeWrapping } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nclass LUTCubeLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"text\");\n    loader.load(\n      url,\n      (text) => {\n        try {\n          onLoad(this.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          this.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(str) {\n    str = str.replace(/^#.*?(\\n|\\r)/gm, \"\").replace(/^\\s*?(\\n|\\r)/gm, \"\").trim();\n    let title = null;\n    let size = null;\n    const domainMin = new Vector3(0, 0, 0);\n    const domainMax = new Vector3(1, 1, 1);\n    const lines = str.split(/[\\n\\r]+/g);\n    let data = null;\n    let currIndex = 0;\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i].trim();\n      const split = line.split(/\\s/g);\n      switch (split[0]) {\n        case \"TITLE\":\n          title = line.substring(7, line.length - 1);\n          break;\n        case \"LUT_3D_SIZE\":\n          const sizeToken = split[1];\n          size = parseFloat(sizeToken);\n          data = new Uint8Array(size * size * size * 4);\n          break;\n        case \"DOMAIN_MIN\":\n          domainMin.x = parseFloat(split[1]);\n          domainMin.y = parseFloat(split[2]);\n          domainMin.z = parseFloat(split[3]);\n          break;\n        case \"DOMAIN_MAX\":\n          domainMax.x = parseFloat(split[1]);\n          domainMax.y = parseFloat(split[2]);\n          domainMax.z = parseFloat(split[3]);\n          break;\n        default:\n          const r = parseFloat(split[0]);\n          const g = parseFloat(split[1]);\n          const b = parseFloat(split[2]);\n          if (r > 1 || r < 0 || g > 1 || g < 0 || b > 1 || b < 0) {\n            throw new Error(\"LUTCubeLoader : Non normalized values not supported.\");\n          }\n          data[currIndex + 0] = r * 255;\n          data[currIndex + 1] = g * 255;\n          data[currIndex + 2] = b * 255;\n          data[currIndex + 3] = 255;\n          currIndex += 4;\n      }\n    }\n    const texture = new DataTexture();\n    texture.image.data = data;\n    texture.image.width = size;\n    texture.image.height = size * size;\n    texture.type = UnsignedByteType;\n    texture.magFilter = LinearFilter;\n    texture.minFilter = LinearFilter;\n    texture.wrapS = ClampToEdgeWrapping;\n    texture.wrapT = ClampToEdgeWrapping;\n    texture.generateMipmaps = false;\n    texture.needsUpdate = true;\n    const texture3D = new Data3DTexture();\n    texture3D.image.data = data;\n    texture3D.image.width = size;\n    texture3D.image.height = size;\n    texture3D.image.depth = size;\n    texture3D.type = UnsignedByteType;\n    texture3D.magFilter = LinearFilter;\n    texture3D.minFilter = LinearFilter;\n    texture3D.wrapS = ClampToEdgeWrapping;\n    texture3D.wrapT = ClampToEdgeWrapping;\n    texture3D.wrapR = ClampToEdgeWrapping;\n    texture3D.generateMipmaps = false;\n    texture3D.needsUpdate = true;\n    return {\n      title,\n      size,\n      domainMin,\n      domainMax,\n      texture,\n      texture3D\n    };\n  }\n}\nexport {\n  LUTCubeLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}