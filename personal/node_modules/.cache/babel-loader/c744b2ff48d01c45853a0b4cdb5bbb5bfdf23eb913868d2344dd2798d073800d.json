{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, Vector3, Matrix4 } from \"three\";\nimport { gunzipSync } from \"fflate\";\nimport { Volume } from \"../misc/Volume.js\";\nvar NRRDLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(NRRDLoader, _Loader);\n  var _super = _createSuper(NRRDLoader);\n  function NRRDLoader(manager) {\n    _classCallCheck(this, NRRDLoader);\n    return _super.call(this, manager);\n  }\n  _createClass(NRRDLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (data) {\n        try {\n          onLoad(scope.parse(data));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var _data = data;\n      var _dataPointer = 0;\n      var _nativeLittleEndian = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n      var _littleEndian = true;\n      var headerObject = {};\n      function scan(type, chunks) {\n        if (chunks === void 0 || chunks === null) {\n          chunks = 1;\n        }\n        var _chunkSize = 1;\n        var _array_type = Uint8Array;\n        switch (type) {\n          case \"uchar\":\n            break;\n          case \"schar\":\n            _array_type = Int8Array;\n            break;\n          case \"ushort\":\n            _array_type = Uint16Array;\n            _chunkSize = 2;\n            break;\n          case \"sshort\":\n            _array_type = Int16Array;\n            _chunkSize = 2;\n            break;\n          case \"uint\":\n            _array_type = Uint32Array;\n            _chunkSize = 4;\n            break;\n          case \"sint\":\n            _array_type = Int32Array;\n            _chunkSize = 4;\n            break;\n          case \"float\":\n            _array_type = Float32Array;\n            _chunkSize = 4;\n            break;\n          case \"complex\":\n            _array_type = Float64Array;\n            _chunkSize = 8;\n            break;\n          case \"double\":\n            _array_type = Float64Array;\n            _chunkSize = 8;\n            break;\n        }\n        var _bytes2 = new _array_type(_data.slice(_dataPointer, _dataPointer += chunks * _chunkSize));\n        if (_nativeLittleEndian != _littleEndian) {\n          _bytes2 = flipEndianness(_bytes2, _chunkSize);\n        }\n        if (chunks == 1) {\n          return _bytes2[0];\n        }\n        return _bytes2;\n      }\n      function flipEndianness(array, chunkSize) {\n        var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        for (var i2 = 0; i2 < array.byteLength; i2 += chunkSize) {\n          for (var j = i2 + chunkSize - 1, k = i2; j > k; j--, k++) {\n            var tmp = u8[k];\n            u8[k] = u8[j];\n            u8[j] = tmp;\n          }\n        }\n        return array;\n      }\n      function parseHeader(header) {\n        var data2, field, fn, i2, l, m, _i, _len;\n        var lines = header.split(/\\r?\\n/);\n        for (_i = 0, _len = lines.length; _i < _len; _i++) {\n          l = lines[_i];\n          if (l.match(/NRRD\\d+/)) {\n            headerObject.isNrrd = true;\n          } else if (l.match(/^#/)) {} else if (m = l.match(/(.*):(.*)/)) {\n            field = m[1].trim();\n            data2 = m[2].trim();\n            fn = _fieldFunctions[field];\n            if (fn) {\n              fn.call(headerObject, data2);\n            } else {\n              headerObject[field] = data2;\n            }\n          }\n        }\n        if (!headerObject.isNrrd) {\n          throw new Error(\"Not an NRRD file\");\n        }\n        if (headerObject.encoding === \"bz2\" || headerObject.encoding === \"bzip2\") {\n          throw new Error(\"Bzip is not supported\");\n        }\n        if (!headerObject.vectors) {\n          headerObject.vectors = [new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1)];\n          if (headerObject.spacings) {\n            for (i2 = 0; i2 <= 2; i2++) {\n              if (!isNaN(headerObject.spacings[i2])) {\n                headerObject.vectors[i2].multiplyScalar(headerObject.spacings[i2]);\n              }\n            }\n          }\n        }\n      }\n      function parseDataAsText(data2, start, end) {\n        var number = \"\";\n        start = start || 0;\n        end = end || data2.length;\n        var value;\n        var lengthOfTheResult = headerObject.sizes.reduce(function (previous, current) {\n          return previous * current;\n        }, 1);\n        var base = 10;\n        if (headerObject.encoding === \"hex\") {\n          base = 16;\n        }\n        var result = new headerObject.__array(lengthOfTheResult);\n        var resultIndex = 0;\n        var parsingFunction = parseInt;\n        if (headerObject.__array === Float32Array || headerObject.__array === Float64Array) {\n          parsingFunction = parseFloat;\n        }\n        for (var i2 = start; i2 < end; i2++) {\n          value = data2[i2];\n          if ((value < 9 || value > 13) && value !== 32) {\n            number += String.fromCharCode(value);\n          } else {\n            if (number !== \"\") {\n              result[resultIndex] = parsingFunction(number, base);\n              resultIndex++;\n            }\n            number = \"\";\n          }\n        }\n        if (number !== \"\") {\n          result[resultIndex] = parsingFunction(number, base);\n          resultIndex++;\n        }\n        return result;\n      }\n      var _bytes = scan(\"uchar\", data.byteLength);\n      var _length = _bytes.length;\n      var _header = null;\n      var _data_start = 0;\n      var i;\n      for (i = 1; i < _length; i++) {\n        if (_bytes[i - 1] == 10 && _bytes[i] == 10) {\n          _header = this.parseChars(_bytes, 0, i - 2);\n          _data_start = i + 1;\n          break;\n        }\n      }\n      parseHeader(_header);\n      _data = _bytes.subarray(_data_start);\n      if (headerObject.encoding.substring(0, 2) === \"gz\") {\n        _data = gunzipSync(new Uint8Array(_data));\n      } else if (headerObject.encoding === \"ascii\" || headerObject.encoding === \"text\" || headerObject.encoding === \"txt\" || headerObject.encoding === \"hex\") {\n        _data = parseDataAsText(_data);\n      } else if (headerObject.encoding === \"raw\") {\n        var _copy = new Uint8Array(_data.length);\n        for (var i2 = 0; i2 < _data.length; i2++) {\n          _copy[i2] = _data[i2];\n        }\n        _data = _copy;\n      }\n      _data = _data.buffer;\n      var volume = new Volume();\n      volume.header = headerObject;\n      volume.data = new headerObject.__array(_data);\n      var min_max = volume.computeMinMax();\n      var min = min_max[0];\n      var max = min_max[1];\n      volume.windowLow = min;\n      volume.windowHigh = max;\n      volume.dimensions = [headerObject.sizes[0], headerObject.sizes[1], headerObject.sizes[2]];\n      volume.xLength = volume.dimensions[0];\n      volume.yLength = volume.dimensions[1];\n      volume.zLength = volume.dimensions[2];\n      var spacingX = new Vector3(headerObject.vectors[0][0], headerObject.vectors[0][1], headerObject.vectors[0][2]).length();\n      var spacingY = new Vector3(headerObject.vectors[1][0], headerObject.vectors[1][1], headerObject.vectors[1][2]).length();\n      var spacingZ = new Vector3(headerObject.vectors[2][0], headerObject.vectors[2][1], headerObject.vectors[2][2]).length();\n      volume.spacing = [spacingX, spacingY, spacingZ];\n      volume.matrix = new Matrix4();\n      var _spaceX = 1;\n      var _spaceY = 1;\n      var _spaceZ = 1;\n      if (headerObject.space == \"left-posterior-superior\") {\n        _spaceX = -1;\n        _spaceY = -1;\n      } else if (headerObject.space === \"left-anterior-superior\") {\n        _spaceX = -1;\n      }\n      if (!headerObject.vectors) {\n        volume.matrix.set(_spaceX, 0, 0, 0, 0, _spaceY, 0, 0, 0, 0, _spaceZ, 0, 0, 0, 0, 1);\n      } else {\n        var v = headerObject.vectors;\n        volume.matrix.set(_spaceX * v[0][0], _spaceX * v[1][0], _spaceX * v[2][0], 0, _spaceY * v[0][1], _spaceY * v[1][1], _spaceY * v[2][1], 0, _spaceZ * v[0][2], _spaceZ * v[1][2], _spaceZ * v[2][2], 0, 0, 0, 0, 1);\n      }\n      volume.inverseMatrix = new Matrix4();\n      volume.inverseMatrix.copy(volume.matrix).invert();\n      volume.RASDimensions = new Vector3(volume.xLength, volume.yLength, volume.zLength).applyMatrix4(volume.matrix).round().toArray().map(Math.abs);\n      if (volume.lowerThreshold === -Infinity) {\n        volume.lowerThreshold = min;\n      }\n      if (volume.upperThreshold === Infinity) {\n        volume.upperThreshold = max;\n      }\n      return volume;\n    }\n  }, {\n    key: \"parseChars\",\n    value: function parseChars(array, start, end) {\n      if (start === void 0) {\n        start = 0;\n      }\n      if (end === void 0) {\n        end = array.length;\n      }\n      var output = \"\";\n      var i = 0;\n      for (i = start; i < end; ++i) {\n        output += String.fromCharCode(array[i]);\n      }\n      return output;\n    }\n  }]);\n  return NRRDLoader;\n}(Loader);\nvar _fieldFunctions = {\n  type: function type(data) {\n    switch (data) {\n      case \"uchar\":\n      case \"unsigned char\":\n      case \"uint8\":\n      case \"uint8_t\":\n        this.__array = Uint8Array;\n        break;\n      case \"signed char\":\n      case \"int8\":\n      case \"int8_t\":\n        this.__array = Int8Array;\n        break;\n      case \"short\":\n      case \"short int\":\n      case \"signed short\":\n      case \"signed short int\":\n      case \"int16\":\n      case \"int16_t\":\n        this.__array = Int16Array;\n        break;\n      case \"ushort\":\n      case \"unsigned short\":\n      case \"unsigned short int\":\n      case \"uint16\":\n      case \"uint16_t\":\n        this.__array = Uint16Array;\n        break;\n      case \"int\":\n      case \"signed int\":\n      case \"int32\":\n      case \"int32_t\":\n        this.__array = Int32Array;\n        break;\n      case \"uint\":\n      case \"unsigned int\":\n      case \"uint32\":\n      case \"uint32_t\":\n        this.__array = Uint32Array;\n        break;\n      case \"float\":\n        this.__array = Float32Array;\n        break;\n      case \"double\":\n        this.__array = Float64Array;\n        break;\n      default:\n        throw new Error(\"Unsupported NRRD data type: \" + data);\n    }\n    return this.type = data;\n  },\n  endian: function endian(data) {\n    return this.endian = data;\n  },\n  encoding: function encoding(data) {\n    return this.encoding = data;\n  },\n  dimension: function dimension(data) {\n    return this.dim = parseInt(data, 10);\n  },\n  sizes: function sizes(data) {\n    var i;\n    return this.sizes = function () {\n      var _ref = data.split(/\\s+/);\n      var _results = [];\n      for (var _i = 0, _len = _ref.length; _i < _len; _i++) {\n        i = _ref[_i];\n        _results.push(parseInt(i, 10));\n      }\n      return _results;\n    }();\n  },\n  space: function space(data) {\n    return this.space = data;\n  },\n  \"space origin\": function spaceOrigin(data) {\n    return this.space_origin = data.split(\"(\")[1].split(\")\")[0].split(\",\");\n  },\n  \"space directions\": function spaceDirections(data) {\n    var f, v;\n    var parts = data.match(/\\(.*?\\)/g);\n    return this.vectors = function () {\n      var _results = [];\n      for (var _i = 0, _len = parts.length; _i < _len; _i++) {\n        v = parts[_i];\n        _results.push(function () {\n          var _ref = v.slice(1, -1).split(/,/);\n          var _results2 = [];\n          for (var _j = 0, _len2 = _ref.length; _j < _len2; _j++) {\n            f = _ref[_j];\n            _results2.push(parseFloat(f));\n          }\n          return _results2;\n        }());\n      }\n      return _results;\n    }();\n  },\n  spacings: function spacings(data) {\n    var f;\n    var parts = data.split(/\\s+/);\n    return this.spacings = function () {\n      var _results = [];\n      for (var _i = 0, _len = parts.length; _i < _len; _i++) {\n        f = parts[_i];\n        _results.push(parseFloat(f));\n      }\n      return _results;\n    }();\n  }\n};\nexport { NRRDLoader };","map":{"version":3,"names":["Loader","FileLoader","Vector3","Matrix4","gunzipSync","Volume","NRRDLoader","_Loader","_inherits","_super","_createSuper","manager","_classCallCheck","call","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","data","parse","e","console","error","itemError","_data","_dataPointer","_nativeLittleEndian","Int8Array","Int16Array","buffer","_littleEndian","headerObject","scan","type","chunks","_chunkSize","_array_type","Uint8Array","Uint16Array","Uint32Array","Int32Array","Float32Array","Float64Array","_bytes2","slice","flipEndianness","array","chunkSize","u8","byteOffset","byteLength","i2","j","k","tmp","parseHeader","header","data2","field","fn","l","m","_i","_len","lines","split","length","match","isNrrd","trim","_fieldFunctions","Error","encoding","vectors","spacings","isNaN","multiplyScalar","parseDataAsText","start","end","number","lengthOfTheResult","sizes","reduce","previous","current","base","result","__array","resultIndex","parsingFunction","parseInt","parseFloat","String","fromCharCode","_bytes","_length","_header","_data_start","i","parseChars","subarray","substring","_copy","volume","min_max","computeMinMax","min","max","windowLow","windowHigh","dimensions","xLength","yLength","zLength","spacingX","spacingY","spacingZ","spacing","matrix","_spaceX","_spaceY","_spaceZ","space","set","v","inverseMatrix","copy","invert","RASDimensions","applyMatrix4","round","toArray","map","Math","abs","lowerThreshold","Infinity","upperThreshold","output","endian","dimension","dim","_ref","_results","push","spaceOrigin","space_origin","spaceDirections","f","parts","_results2","_j","_len2"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/NRRDLoader.js"],"sourcesContent":["import { Loader, FileLoader, Vector3, Matrix4 } from \"three\";\nimport { gunzipSync } from \"fflate\";\nimport { Volume } from \"../misc/Volume.js\";\nclass NRRDLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(data) {\n        try {\n          onLoad(scope.parse(data));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    let _data = data;\n    let _dataPointer = 0;\n    const _nativeLittleEndian = new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n    const _littleEndian = true;\n    const headerObject = {};\n    function scan(type, chunks) {\n      if (chunks === void 0 || chunks === null) {\n        chunks = 1;\n      }\n      let _chunkSize = 1;\n      let _array_type = Uint8Array;\n      switch (type) {\n        case \"uchar\":\n          break;\n        case \"schar\":\n          _array_type = Int8Array;\n          break;\n        case \"ushort\":\n          _array_type = Uint16Array;\n          _chunkSize = 2;\n          break;\n        case \"sshort\":\n          _array_type = Int16Array;\n          _chunkSize = 2;\n          break;\n        case \"uint\":\n          _array_type = Uint32Array;\n          _chunkSize = 4;\n          break;\n        case \"sint\":\n          _array_type = Int32Array;\n          _chunkSize = 4;\n          break;\n        case \"float\":\n          _array_type = Float32Array;\n          _chunkSize = 4;\n          break;\n        case \"complex\":\n          _array_type = Float64Array;\n          _chunkSize = 8;\n          break;\n        case \"double\":\n          _array_type = Float64Array;\n          _chunkSize = 8;\n          break;\n      }\n      let _bytes2 = new _array_type(_data.slice(_dataPointer, _dataPointer += chunks * _chunkSize));\n      if (_nativeLittleEndian != _littleEndian) {\n        _bytes2 = flipEndianness(_bytes2, _chunkSize);\n      }\n      if (chunks == 1) {\n        return _bytes2[0];\n      }\n      return _bytes2;\n    }\n    function flipEndianness(array, chunkSize) {\n      const u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n      for (let i2 = 0; i2 < array.byteLength; i2 += chunkSize) {\n        for (let j = i2 + chunkSize - 1, k = i2; j > k; j--, k++) {\n          const tmp = u8[k];\n          u8[k] = u8[j];\n          u8[j] = tmp;\n        }\n      }\n      return array;\n    }\n    function parseHeader(header) {\n      let data2, field, fn, i2, l, m, _i, _len;\n      const lines = header.split(/\\r?\\n/);\n      for (_i = 0, _len = lines.length; _i < _len; _i++) {\n        l = lines[_i];\n        if (l.match(/NRRD\\d+/)) {\n          headerObject.isNrrd = true;\n        } else if (l.match(/^#/)) {\n        } else if (m = l.match(/(.*):(.*)/)) {\n          field = m[1].trim();\n          data2 = m[2].trim();\n          fn = _fieldFunctions[field];\n          if (fn) {\n            fn.call(headerObject, data2);\n          } else {\n            headerObject[field] = data2;\n          }\n        }\n      }\n      if (!headerObject.isNrrd) {\n        throw new Error(\"Not an NRRD file\");\n      }\n      if (headerObject.encoding === \"bz2\" || headerObject.encoding === \"bzip2\") {\n        throw new Error(\"Bzip is not supported\");\n      }\n      if (!headerObject.vectors) {\n        headerObject.vectors = [new Vector3(1, 0, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1)];\n        if (headerObject.spacings) {\n          for (i2 = 0; i2 <= 2; i2++) {\n            if (!isNaN(headerObject.spacings[i2])) {\n              headerObject.vectors[i2].multiplyScalar(headerObject.spacings[i2]);\n            }\n          }\n        }\n      }\n    }\n    function parseDataAsText(data2, start, end) {\n      let number = \"\";\n      start = start || 0;\n      end = end || data2.length;\n      let value;\n      const lengthOfTheResult = headerObject.sizes.reduce(function(previous, current) {\n        return previous * current;\n      }, 1);\n      let base = 10;\n      if (headerObject.encoding === \"hex\") {\n        base = 16;\n      }\n      const result = new headerObject.__array(lengthOfTheResult);\n      let resultIndex = 0;\n      let parsingFunction = parseInt;\n      if (headerObject.__array === Float32Array || headerObject.__array === Float64Array) {\n        parsingFunction = parseFloat;\n      }\n      for (let i2 = start; i2 < end; i2++) {\n        value = data2[i2];\n        if ((value < 9 || value > 13) && value !== 32) {\n          number += String.fromCharCode(value);\n        } else {\n          if (number !== \"\") {\n            result[resultIndex] = parsingFunction(number, base);\n            resultIndex++;\n          }\n          number = \"\";\n        }\n      }\n      if (number !== \"\") {\n        result[resultIndex] = parsingFunction(number, base);\n        resultIndex++;\n      }\n      return result;\n    }\n    const _bytes = scan(\"uchar\", data.byteLength);\n    const _length = _bytes.length;\n    let _header = null;\n    let _data_start = 0;\n    let i;\n    for (i = 1; i < _length; i++) {\n      if (_bytes[i - 1] == 10 && _bytes[i] == 10) {\n        _header = this.parseChars(_bytes, 0, i - 2);\n        _data_start = i + 1;\n        break;\n      }\n    }\n    parseHeader(_header);\n    _data = _bytes.subarray(_data_start);\n    if (headerObject.encoding.substring(0, 2) === \"gz\") {\n      _data = gunzipSync(new Uint8Array(_data));\n    } else if (headerObject.encoding === \"ascii\" || headerObject.encoding === \"text\" || headerObject.encoding === \"txt\" || headerObject.encoding === \"hex\") {\n      _data = parseDataAsText(_data);\n    } else if (headerObject.encoding === \"raw\") {\n      const _copy = new Uint8Array(_data.length);\n      for (let i2 = 0; i2 < _data.length; i2++) {\n        _copy[i2] = _data[i2];\n      }\n      _data = _copy;\n    }\n    _data = _data.buffer;\n    const volume = new Volume();\n    volume.header = headerObject;\n    volume.data = new headerObject.__array(_data);\n    const min_max = volume.computeMinMax();\n    const min = min_max[0];\n    const max = min_max[1];\n    volume.windowLow = min;\n    volume.windowHigh = max;\n    volume.dimensions = [headerObject.sizes[0], headerObject.sizes[1], headerObject.sizes[2]];\n    volume.xLength = volume.dimensions[0];\n    volume.yLength = volume.dimensions[1];\n    volume.zLength = volume.dimensions[2];\n    const spacingX = new Vector3(\n      headerObject.vectors[0][0],\n      headerObject.vectors[0][1],\n      headerObject.vectors[0][2]\n    ).length();\n    const spacingY = new Vector3(\n      headerObject.vectors[1][0],\n      headerObject.vectors[1][1],\n      headerObject.vectors[1][2]\n    ).length();\n    const spacingZ = new Vector3(\n      headerObject.vectors[2][0],\n      headerObject.vectors[2][1],\n      headerObject.vectors[2][2]\n    ).length();\n    volume.spacing = [spacingX, spacingY, spacingZ];\n    volume.matrix = new Matrix4();\n    let _spaceX = 1;\n    let _spaceY = 1;\n    const _spaceZ = 1;\n    if (headerObject.space == \"left-posterior-superior\") {\n      _spaceX = -1;\n      _spaceY = -1;\n    } else if (headerObject.space === \"left-anterior-superior\") {\n      _spaceX = -1;\n    }\n    if (!headerObject.vectors) {\n      volume.matrix.set(_spaceX, 0, 0, 0, 0, _spaceY, 0, 0, 0, 0, _spaceZ, 0, 0, 0, 0, 1);\n    } else {\n      const v = headerObject.vectors;\n      volume.matrix.set(\n        _spaceX * v[0][0],\n        _spaceX * v[1][0],\n        _spaceX * v[2][0],\n        0,\n        _spaceY * v[0][1],\n        _spaceY * v[1][1],\n        _spaceY * v[2][1],\n        0,\n        _spaceZ * v[0][2],\n        _spaceZ * v[1][2],\n        _spaceZ * v[2][2],\n        0,\n        0,\n        0,\n        0,\n        1\n      );\n    }\n    volume.inverseMatrix = new Matrix4();\n    volume.inverseMatrix.copy(volume.matrix).invert();\n    volume.RASDimensions = new Vector3(volume.xLength, volume.yLength, volume.zLength).applyMatrix4(volume.matrix).round().toArray().map(Math.abs);\n    if (volume.lowerThreshold === -Infinity) {\n      volume.lowerThreshold = min;\n    }\n    if (volume.upperThreshold === Infinity) {\n      volume.upperThreshold = max;\n    }\n    return volume;\n  }\n  parseChars(array, start, end) {\n    if (start === void 0) {\n      start = 0;\n    }\n    if (end === void 0) {\n      end = array.length;\n    }\n    let output = \"\";\n    let i = 0;\n    for (i = start; i < end; ++i) {\n      output += String.fromCharCode(array[i]);\n    }\n    return output;\n  }\n}\nconst _fieldFunctions = {\n  type: function(data) {\n    switch (data) {\n      case \"uchar\":\n      case \"unsigned char\":\n      case \"uint8\":\n      case \"uint8_t\":\n        this.__array = Uint8Array;\n        break;\n      case \"signed char\":\n      case \"int8\":\n      case \"int8_t\":\n        this.__array = Int8Array;\n        break;\n      case \"short\":\n      case \"short int\":\n      case \"signed short\":\n      case \"signed short int\":\n      case \"int16\":\n      case \"int16_t\":\n        this.__array = Int16Array;\n        break;\n      case \"ushort\":\n      case \"unsigned short\":\n      case \"unsigned short int\":\n      case \"uint16\":\n      case \"uint16_t\":\n        this.__array = Uint16Array;\n        break;\n      case \"int\":\n      case \"signed int\":\n      case \"int32\":\n      case \"int32_t\":\n        this.__array = Int32Array;\n        break;\n      case \"uint\":\n      case \"unsigned int\":\n      case \"uint32\":\n      case \"uint32_t\":\n        this.__array = Uint32Array;\n        break;\n      case \"float\":\n        this.__array = Float32Array;\n        break;\n      case \"double\":\n        this.__array = Float64Array;\n        break;\n      default:\n        throw new Error(\"Unsupported NRRD data type: \" + data);\n    }\n    return this.type = data;\n  },\n  endian: function(data) {\n    return this.endian = data;\n  },\n  encoding: function(data) {\n    return this.encoding = data;\n  },\n  dimension: function(data) {\n    return this.dim = parseInt(data, 10);\n  },\n  sizes: function(data) {\n    let i;\n    return this.sizes = function() {\n      const _ref = data.split(/\\s+/);\n      const _results = [];\n      for (let _i = 0, _len = _ref.length; _i < _len; _i++) {\n        i = _ref[_i];\n        _results.push(parseInt(i, 10));\n      }\n      return _results;\n    }();\n  },\n  space: function(data) {\n    return this.space = data;\n  },\n  \"space origin\": function(data) {\n    return this.space_origin = data.split(\"(\")[1].split(\")\")[0].split(\",\");\n  },\n  \"space directions\": function(data) {\n    let f, v;\n    const parts = data.match(/\\(.*?\\)/g);\n    return this.vectors = function() {\n      const _results = [];\n      for (let _i = 0, _len = parts.length; _i < _len; _i++) {\n        v = parts[_i];\n        _results.push(\n          function() {\n            const _ref = v.slice(1, -1).split(/,/);\n            const _results2 = [];\n            for (let _j = 0, _len2 = _ref.length; _j < _len2; _j++) {\n              f = _ref[_j];\n              _results2.push(parseFloat(f));\n            }\n            return _results2;\n          }()\n        );\n      }\n      return _results;\n    }();\n  },\n  spacings: function(data) {\n    let f;\n    const parts = data.split(/\\s+/);\n    return this.spacings = function() {\n      const _results = [];\n      for (let _i = 0, _len = parts.length; _i < _len; _i++) {\n        f = parts[_i];\n        _results.push(parseFloat(f));\n      }\n      return _results;\n    }();\n  }\n};\nexport {\n  NRRDLoader\n};\n"],"mappings":";;;;AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,QAAQ,OAAO;AAC5D,SAASC,UAAU,QAAQ,QAAQ;AACnC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,IACrCC,UAAU,0BAAAC,OAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,OAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACd,SAAAA,WAAYK,OAAO,EAAE;IAAAC,eAAA,OAAAN,UAAA;IAAA,OAAAG,MAAA,CAAAI,IAAA,OACbF,OAAO;EACf;EAACG,YAAA,CAAAR,UAAA;IAAAS,GAAA;IAAAC,KAAA,EACD,SAAAC,KAAKC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;MACrC,IAAMC,KAAK,GAAG,IAAI;MAClB,IAAMC,MAAM,GAAG,IAAItB,UAAU,CAACqB,KAAK,CAACX,OAAO,CAAC;MAC5CY,MAAM,CAACC,OAAO,CAACF,KAAK,CAACG,IAAI,CAAC;MAC1BF,MAAM,CAACG,eAAe,CAAC,aAAa,CAAC;MACrCH,MAAM,CAACI,gBAAgB,CAACL,KAAK,CAACM,aAAa,CAAC;MAC5CL,MAAM,CAACM,kBAAkB,CAACP,KAAK,CAACQ,eAAe,CAAC;MAChDP,MAAM,CAACN,IAAI,CACTC,GAAG,EACH,UAASa,IAAI,EAAE;QACb,IAAI;UACFZ,MAAM,CAACG,KAAK,CAACU,KAAK,CAACD,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAIZ,OAAO,EAAE;YACXA,OAAO,CAACY,CAAC,CAAC;UACZ,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAClB;UACAX,KAAK,CAACX,OAAO,CAACyB,SAAS,CAAClB,GAAG,CAAC;QAC9B;MACF,CAAC,EACDE,UAAU,EACVC,OACF,CAAC;IACH;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAgB,MAAMD,IAAI,EAAE;MACV,IAAIM,KAAK,GAAGN,IAAI;MAChB,IAAIO,YAAY,GAAG,CAAC;MACpB,IAAMC,mBAAmB,GAAG,IAAIC,SAAS,CAAC,IAAIC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAC5E,IAAMC,aAAa,GAAG,IAAI;MAC1B,IAAMC,YAAY,GAAG,CAAC,CAAC;MACvB,SAASC,IAAIA,CAACC,IAAI,EAAEC,MAAM,EAAE;QAC1B,IAAIA,MAAM,KAAK,KAAK,CAAC,IAAIA,MAAM,KAAK,IAAI,EAAE;UACxCA,MAAM,GAAG,CAAC;QACZ;QACA,IAAIC,UAAU,GAAG,CAAC;QAClB,IAAIC,WAAW,GAAGC,UAAU;QAC5B,QAAQJ,IAAI;UACV,KAAK,OAAO;YACV;UACF,KAAK,OAAO;YACVG,WAAW,GAAGT,SAAS;YACvB;UACF,KAAK,QAAQ;YACXS,WAAW,GAAGE,WAAW;YACzBH,UAAU,GAAG,CAAC;YACd;UACF,KAAK,QAAQ;YACXC,WAAW,GAAGR,UAAU;YACxBO,UAAU,GAAG,CAAC;YACd;UACF,KAAK,MAAM;YACTC,WAAW,GAAGG,WAAW;YACzBJ,UAAU,GAAG,CAAC;YACd;UACF,KAAK,MAAM;YACTC,WAAW,GAAGI,UAAU;YACxBL,UAAU,GAAG,CAAC;YACd;UACF,KAAK,OAAO;YACVC,WAAW,GAAGK,YAAY;YAC1BN,UAAU,GAAG,CAAC;YACd;UACF,KAAK,SAAS;YACZC,WAAW,GAAGM,YAAY;YAC1BP,UAAU,GAAG,CAAC;YACd;UACF,KAAK,QAAQ;YACXC,WAAW,GAAGM,YAAY;YAC1BP,UAAU,GAAG,CAAC;YACd;QACJ;QACA,IAAIQ,OAAO,GAAG,IAAIP,WAAW,CAACZ,KAAK,CAACoB,KAAK,CAACnB,YAAY,EAAEA,YAAY,IAAIS,MAAM,GAAGC,UAAU,CAAC,CAAC;QAC7F,IAAIT,mBAAmB,IAAII,aAAa,EAAE;UACxCa,OAAO,GAAGE,cAAc,CAACF,OAAO,EAAER,UAAU,CAAC;QAC/C;QACA,IAAID,MAAM,IAAI,CAAC,EAAE;UACf,OAAOS,OAAO,CAAC,CAAC,CAAC;QACnB;QACA,OAAOA,OAAO;MAChB;MACA,SAASE,cAAcA,CAACC,KAAK,EAAEC,SAAS,EAAE;QACxC,IAAMC,EAAE,GAAG,IAAIX,UAAU,CAACS,KAAK,CAACjB,MAAM,EAAEiB,KAAK,CAACG,UAAU,EAAEH,KAAK,CAACI,UAAU,CAAC;QAC3E,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGL,KAAK,CAACI,UAAU,EAAEC,EAAE,IAAIJ,SAAS,EAAE;UACvD,KAAK,IAAIK,CAAC,GAAGD,EAAE,GAAGJ,SAAS,GAAG,CAAC,EAAEM,CAAC,GAAGF,EAAE,EAAEC,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAEC,CAAC,EAAE,EAAE;YACxD,IAAMC,GAAG,GAAGN,EAAE,CAACK,CAAC,CAAC;YACjBL,EAAE,CAACK,CAAC,CAAC,GAAGL,EAAE,CAACI,CAAC,CAAC;YACbJ,EAAE,CAACI,CAAC,CAAC,GAAGE,GAAG;UACb;QACF;QACA,OAAOR,KAAK;MACd;MACA,SAASS,WAAWA,CAACC,MAAM,EAAE;QAC3B,IAAIC,KAAK,EAAEC,KAAK,EAAEC,EAAE,EAAER,EAAE,EAAES,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAEC,IAAI;QACxC,IAAMC,KAAK,GAAGR,MAAM,CAACS,KAAK,CAAC,OAAO,CAAC;QACnC,KAAKH,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGC,KAAK,CAACE,MAAM,EAAEJ,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAE,EAAE;UACjDF,CAAC,GAAGI,KAAK,CAACF,EAAE,CAAC;UACb,IAAIF,CAAC,CAACO,KAAK,CAAC,SAAS,CAAC,EAAE;YACtBpC,YAAY,CAACqC,MAAM,GAAG,IAAI;UAC5B,CAAC,MAAM,IAAIR,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC,EAAE,CAC1B,CAAC,MAAM,IAAIN,CAAC,GAAGD,CAAC,CAACO,KAAK,CAAC,WAAW,CAAC,EAAE;YACnCT,KAAK,GAAGG,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC;YACnBZ,KAAK,GAAGI,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,CAAC,CAAC;YACnBV,EAAE,GAAGW,eAAe,CAACZ,KAAK,CAAC;YAC3B,IAAIC,EAAE,EAAE;cACNA,EAAE,CAAC3D,IAAI,CAAC+B,YAAY,EAAE0B,KAAK,CAAC;YAC9B,CAAC,MAAM;cACL1B,YAAY,CAAC2B,KAAK,CAAC,GAAGD,KAAK;YAC7B;UACF;QACF;QACA,IAAI,CAAC1B,YAAY,CAACqC,MAAM,EAAE;UACxB,MAAM,IAAIG,KAAK,CAAC,kBAAkB,CAAC;QACrC;QACA,IAAIxC,YAAY,CAACyC,QAAQ,KAAK,KAAK,IAAIzC,YAAY,CAACyC,QAAQ,KAAK,OAAO,EAAE;UACxE,MAAM,IAAID,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,IAAI,CAACxC,YAAY,CAAC0C,OAAO,EAAE;UACzB1C,YAAY,CAAC0C,OAAO,GAAG,CAAC,IAAIpF,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;UACzF,IAAI0C,YAAY,CAAC2C,QAAQ,EAAE;YACzB,KAAKvB,EAAE,GAAG,CAAC,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAE,EAAE;cAC1B,IAAI,CAACwB,KAAK,CAAC5C,YAAY,CAAC2C,QAAQ,CAACvB,EAAE,CAAC,CAAC,EAAE;gBACrCpB,YAAY,CAAC0C,OAAO,CAACtB,EAAE,CAAC,CAACyB,cAAc,CAAC7C,YAAY,CAAC2C,QAAQ,CAACvB,EAAE,CAAC,CAAC;cACpE;YACF;UACF;QACF;MACF;MACA,SAAS0B,eAAeA,CAACpB,KAAK,EAAEqB,KAAK,EAAEC,GAAG,EAAE;QAC1C,IAAIC,MAAM,GAAG,EAAE;QACfF,KAAK,GAAGA,KAAK,IAAI,CAAC;QAClBC,GAAG,GAAGA,GAAG,IAAItB,KAAK,CAACS,MAAM;QACzB,IAAI/D,KAAK;QACT,IAAM8E,iBAAiB,GAAGlD,YAAY,CAACmD,KAAK,CAACC,MAAM,CAAC,UAASC,QAAQ,EAAEC,OAAO,EAAE;UAC9E,OAAOD,QAAQ,GAAGC,OAAO;QAC3B,CAAC,EAAE,CAAC,CAAC;QACL,IAAIC,IAAI,GAAG,EAAE;QACb,IAAIvD,YAAY,CAACyC,QAAQ,KAAK,KAAK,EAAE;UACnCc,IAAI,GAAG,EAAE;QACX;QACA,IAAMC,MAAM,GAAG,IAAIxD,YAAY,CAACyD,OAAO,CAACP,iBAAiB,CAAC;QAC1D,IAAIQ,WAAW,GAAG,CAAC;QACnB,IAAIC,eAAe,GAAGC,QAAQ;QAC9B,IAAI5D,YAAY,CAACyD,OAAO,KAAK/C,YAAY,IAAIV,YAAY,CAACyD,OAAO,KAAK9C,YAAY,EAAE;UAClFgD,eAAe,GAAGE,UAAU;QAC9B;QACA,KAAK,IAAIzC,EAAE,GAAG2B,KAAK,EAAE3B,EAAE,GAAG4B,GAAG,EAAE5B,EAAE,EAAE,EAAE;UACnChD,KAAK,GAAGsD,KAAK,CAACN,EAAE,CAAC;UACjB,IAAI,CAAChD,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,EAAE,KAAKA,KAAK,KAAK,EAAE,EAAE;YAC7C6E,MAAM,IAAIa,MAAM,CAACC,YAAY,CAAC3F,KAAK,CAAC;UACtC,CAAC,MAAM;YACL,IAAI6E,MAAM,KAAK,EAAE,EAAE;cACjBO,MAAM,CAACE,WAAW,CAAC,GAAGC,eAAe,CAACV,MAAM,EAAEM,IAAI,CAAC;cACnDG,WAAW,EAAE;YACf;YACAT,MAAM,GAAG,EAAE;UACb;QACF;QACA,IAAIA,MAAM,KAAK,EAAE,EAAE;UACjBO,MAAM,CAACE,WAAW,CAAC,GAAGC,eAAe,CAACV,MAAM,EAAEM,IAAI,CAAC;UACnDG,WAAW,EAAE;QACf;QACA,OAAOF,MAAM;MACf;MACA,IAAMQ,MAAM,GAAG/D,IAAI,CAAC,OAAO,EAAEd,IAAI,CAACgC,UAAU,CAAC;MAC7C,IAAM8C,OAAO,GAAGD,MAAM,CAAC7B,MAAM;MAC7B,IAAI+B,OAAO,GAAG,IAAI;MAClB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,EAAEG,CAAC,EAAE,EAAE;QAC5B,IAAIJ,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAIJ,MAAM,CAACI,CAAC,CAAC,IAAI,EAAE,EAAE;UAC1CF,OAAO,GAAG,IAAI,CAACG,UAAU,CAACL,MAAM,EAAE,CAAC,EAAEI,CAAC,GAAG,CAAC,CAAC;UAC3CD,WAAW,GAAGC,CAAC,GAAG,CAAC;UACnB;QACF;MACF;MACA5C,WAAW,CAAC0C,OAAO,CAAC;MACpBzE,KAAK,GAAGuE,MAAM,CAACM,QAAQ,CAACH,WAAW,CAAC;MACpC,IAAInE,YAAY,CAACyC,QAAQ,CAAC8B,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QAClD9E,KAAK,GAAGjC,UAAU,CAAC,IAAI8C,UAAU,CAACb,KAAK,CAAC,CAAC;MAC3C,CAAC,MAAM,IAAIO,YAAY,CAACyC,QAAQ,KAAK,OAAO,IAAIzC,YAAY,CAACyC,QAAQ,KAAK,MAAM,IAAIzC,YAAY,CAACyC,QAAQ,KAAK,KAAK,IAAIzC,YAAY,CAACyC,QAAQ,KAAK,KAAK,EAAE;QACtJhD,KAAK,GAAGqD,eAAe,CAACrD,KAAK,CAAC;MAChC,CAAC,MAAM,IAAIO,YAAY,CAACyC,QAAQ,KAAK,KAAK,EAAE;QAC1C,IAAM+B,KAAK,GAAG,IAAIlE,UAAU,CAACb,KAAK,CAAC0C,MAAM,CAAC;QAC1C,KAAK,IAAIf,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG3B,KAAK,CAAC0C,MAAM,EAAEf,EAAE,EAAE,EAAE;UACxCoD,KAAK,CAACpD,EAAE,CAAC,GAAG3B,KAAK,CAAC2B,EAAE,CAAC;QACvB;QACA3B,KAAK,GAAG+E,KAAK;MACf;MACA/E,KAAK,GAAGA,KAAK,CAACK,MAAM;MACpB,IAAM2E,MAAM,GAAG,IAAIhH,MAAM,CAAC,CAAC;MAC3BgH,MAAM,CAAChD,MAAM,GAAGzB,YAAY;MAC5ByE,MAAM,CAACtF,IAAI,GAAG,IAAIa,YAAY,CAACyD,OAAO,CAAChE,KAAK,CAAC;MAC7C,IAAMiF,OAAO,GAAGD,MAAM,CAACE,aAAa,CAAC,CAAC;MACtC,IAAMC,GAAG,GAAGF,OAAO,CAAC,CAAC,CAAC;MACtB,IAAMG,GAAG,GAAGH,OAAO,CAAC,CAAC,CAAC;MACtBD,MAAM,CAACK,SAAS,GAAGF,GAAG;MACtBH,MAAM,CAACM,UAAU,GAAGF,GAAG;MACvBJ,MAAM,CAACO,UAAU,GAAG,CAAChF,YAAY,CAACmD,KAAK,CAAC,CAAC,CAAC,EAAEnD,YAAY,CAACmD,KAAK,CAAC,CAAC,CAAC,EAAEnD,YAAY,CAACmD,KAAK,CAAC,CAAC,CAAC,CAAC;MACzFsB,MAAM,CAACQ,OAAO,GAAGR,MAAM,CAACO,UAAU,CAAC,CAAC,CAAC;MACrCP,MAAM,CAACS,OAAO,GAAGT,MAAM,CAACO,UAAU,CAAC,CAAC,CAAC;MACrCP,MAAM,CAACU,OAAO,GAAGV,MAAM,CAACO,UAAU,CAAC,CAAC,CAAC;MACrC,IAAMI,QAAQ,GAAG,IAAI9H,OAAO,CAC1B0C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC,CAACP,MAAM,CAAC,CAAC;MACV,IAAMkD,QAAQ,GAAG,IAAI/H,OAAO,CAC1B0C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC,CAACP,MAAM,CAAC,CAAC;MACV,IAAMmD,QAAQ,GAAG,IAAIhI,OAAO,CAC1B0C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1B1C,YAAY,CAAC0C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3B,CAAC,CAACP,MAAM,CAAC,CAAC;MACVsC,MAAM,CAACc,OAAO,GAAG,CAACH,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;MAC/Cb,MAAM,CAACe,MAAM,GAAG,IAAIjI,OAAO,CAAC,CAAC;MAC7B,IAAIkI,OAAO,GAAG,CAAC;MACf,IAAIC,OAAO,GAAG,CAAC;MACf,IAAMC,OAAO,GAAG,CAAC;MACjB,IAAI3F,YAAY,CAAC4F,KAAK,IAAI,yBAAyB,EAAE;QACnDH,OAAO,GAAG,CAAC,CAAC;QACZC,OAAO,GAAG,CAAC,CAAC;MACd,CAAC,MAAM,IAAI1F,YAAY,CAAC4F,KAAK,KAAK,wBAAwB,EAAE;QAC1DH,OAAO,GAAG,CAAC,CAAC;MACd;MACA,IAAI,CAACzF,YAAY,CAAC0C,OAAO,EAAE;QACzB+B,MAAM,CAACe,MAAM,CAACK,GAAG,CAACJ,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACrF,CAAC,MAAM;QACL,IAAMG,CAAC,GAAG9F,YAAY,CAAC0C,OAAO;QAC9B+B,MAAM,CAACe,MAAM,CAACK,GAAG,CACfJ,OAAO,GAAGK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBL,OAAO,GAAGK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBL,OAAO,GAAGK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjB,CAAC,EACDJ,OAAO,GAAGI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBJ,OAAO,GAAGI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBJ,OAAO,GAAGI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjB,CAAC,EACDH,OAAO,GAAGG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBH,OAAO,GAAGG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjBH,OAAO,GAAGG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjB,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CACF,CAAC;MACH;MACArB,MAAM,CAACsB,aAAa,GAAG,IAAIxI,OAAO,CAAC,CAAC;MACpCkH,MAAM,CAACsB,aAAa,CAACC,IAAI,CAACvB,MAAM,CAACe,MAAM,CAAC,CAACS,MAAM,CAAC,CAAC;MACjDxB,MAAM,CAACyB,aAAa,GAAG,IAAI5I,OAAO,CAACmH,MAAM,CAACQ,OAAO,EAAER,MAAM,CAACS,OAAO,EAAET,MAAM,CAACU,OAAO,CAAC,CAACgB,YAAY,CAAC1B,MAAM,CAACe,MAAM,CAAC,CAACY,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC;MAC9I,IAAI/B,MAAM,CAACgC,cAAc,KAAK,CAACC,QAAQ,EAAE;QACvCjC,MAAM,CAACgC,cAAc,GAAG7B,GAAG;MAC7B;MACA,IAAIH,MAAM,CAACkC,cAAc,KAAKD,QAAQ,EAAE;QACtCjC,MAAM,CAACkC,cAAc,GAAG9B,GAAG;MAC7B;MACA,OAAOJ,MAAM;IACf;EAAC;IAAAtG,GAAA;IAAAC,KAAA,EACD,SAAAiG,WAAWtD,KAAK,EAAEgC,KAAK,EAAEC,GAAG,EAAE;MAC5B,IAAID,KAAK,KAAK,KAAK,CAAC,EAAE;QACpBA,KAAK,GAAG,CAAC;MACX;MACA,IAAIC,GAAG,KAAK,KAAK,CAAC,EAAE;QAClBA,GAAG,GAAGjC,KAAK,CAACoB,MAAM;MACpB;MACA,IAAIyE,MAAM,GAAG,EAAE;MACf,IAAIxC,CAAC,GAAG,CAAC;MACT,KAAKA,CAAC,GAAGrB,KAAK,EAAEqB,CAAC,GAAGpB,GAAG,EAAE,EAAEoB,CAAC,EAAE;QAC5BwC,MAAM,IAAI9C,MAAM,CAACC,YAAY,CAAChD,KAAK,CAACqD,CAAC,CAAC,CAAC;MACzC;MACA,OAAOwC,MAAM;IACf;EAAC;EAAA,OAAAlJ,UAAA;AAAA,EAvRsBN,MAAM;AAyR/B,IAAMmF,eAAe,GAAG;EACtBrC,IAAI,EAAE,SAAAA,KAASf,IAAI,EAAE;IACnB,QAAQA,IAAI;MACV,KAAK,OAAO;MACZ,KAAK,eAAe;MACpB,KAAK,OAAO;MACZ,KAAK,SAAS;QACZ,IAAI,CAACsE,OAAO,GAAGnD,UAAU;QACzB;MACF,KAAK,aAAa;MAClB,KAAK,MAAM;MACX,KAAK,QAAQ;QACX,IAAI,CAACmD,OAAO,GAAG7D,SAAS;QACxB;MACF,KAAK,OAAO;MACZ,KAAK,WAAW;MAChB,KAAK,cAAc;MACnB,KAAK,kBAAkB;MACvB,KAAK,OAAO;MACZ,KAAK,SAAS;QACZ,IAAI,CAAC6D,OAAO,GAAG5D,UAAU;QACzB;MACF,KAAK,QAAQ;MACb,KAAK,gBAAgB;MACrB,KAAK,oBAAoB;MACzB,KAAK,QAAQ;MACb,KAAK,UAAU;QACb,IAAI,CAAC4D,OAAO,GAAGlD,WAAW;QAC1B;MACF,KAAK,KAAK;MACV,KAAK,YAAY;MACjB,KAAK,OAAO;MACZ,KAAK,SAAS;QACZ,IAAI,CAACkD,OAAO,GAAGhD,UAAU;QACzB;MACF,KAAK,MAAM;MACX,KAAK,cAAc;MACnB,KAAK,QAAQ;MACb,KAAK,UAAU;QACb,IAAI,CAACgD,OAAO,GAAGjD,WAAW;QAC1B;MACF,KAAK,OAAO;QACV,IAAI,CAACiD,OAAO,GAAG/C,YAAY;QAC3B;MACF,KAAK,QAAQ;QACX,IAAI,CAAC+C,OAAO,GAAG9C,YAAY;QAC3B;MACF;QACE,MAAM,IAAI6B,KAAK,CAAC,8BAA8B,GAAGrD,IAAI,CAAC;IAC1D;IACA,OAAO,IAAI,CAACe,IAAI,GAAGf,IAAI;EACzB,CAAC;EACD0H,MAAM,EAAE,SAAAA,OAAS1H,IAAI,EAAE;IACrB,OAAO,IAAI,CAAC0H,MAAM,GAAG1H,IAAI;EAC3B,CAAC;EACDsD,QAAQ,EAAE,SAAAA,SAAStD,IAAI,EAAE;IACvB,OAAO,IAAI,CAACsD,QAAQ,GAAGtD,IAAI;EAC7B,CAAC;EACD2H,SAAS,EAAE,SAAAA,UAAS3H,IAAI,EAAE;IACxB,OAAO,IAAI,CAAC4H,GAAG,GAAGnD,QAAQ,CAACzE,IAAI,EAAE,EAAE,CAAC;EACtC,CAAC;EACDgE,KAAK,EAAE,SAAAA,MAAShE,IAAI,EAAE;IACpB,IAAIiF,CAAC;IACL,OAAO,IAAI,CAACjB,KAAK,GAAG,YAAW;MAC7B,IAAM6D,IAAI,GAAG7H,IAAI,CAAC+C,KAAK,CAAC,KAAK,CAAC;MAC9B,IAAM+E,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIlF,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGgF,IAAI,CAAC7E,MAAM,EAAEJ,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAE,EAAE;QACpDqC,CAAC,GAAG4C,IAAI,CAACjF,EAAE,CAAC;QACZkF,QAAQ,CAACC,IAAI,CAACtD,QAAQ,CAACQ,CAAC,EAAE,EAAE,CAAC,CAAC;MAChC;MACA,OAAO6C,QAAQ;IACjB,CAAC,CAAC,CAAC;EACL,CAAC;EACDrB,KAAK,EAAE,SAAAA,MAASzG,IAAI,EAAE;IACpB,OAAO,IAAI,CAACyG,KAAK,GAAGzG,IAAI;EAC1B,CAAC;EACD,cAAc,EAAE,SAAAgI,YAAShI,IAAI,EAAE;IAC7B,OAAO,IAAI,CAACiI,YAAY,GAAGjI,IAAI,CAAC+C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;EACxE,CAAC;EACD,kBAAkB,EAAE,SAAAmF,gBAASlI,IAAI,EAAE;IACjC,IAAImI,CAAC,EAAExB,CAAC;IACR,IAAMyB,KAAK,GAAGpI,IAAI,CAACiD,KAAK,CAAC,UAAU,CAAC;IACpC,OAAO,IAAI,CAACM,OAAO,GAAG,YAAW;MAC/B,IAAMuE,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIlF,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGuF,KAAK,CAACpF,MAAM,EAAEJ,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAE,EAAE;QACrD+D,CAAC,GAAGyB,KAAK,CAACxF,EAAE,CAAC;QACbkF,QAAQ,CAACC,IAAI,CACX,YAAW;UACT,IAAMF,IAAI,GAAGlB,CAAC,CAACjF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACqB,KAAK,CAAC,GAAG,CAAC;UACtC,IAAMsF,SAAS,GAAG,EAAE;UACpB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,KAAK,GAAGV,IAAI,CAAC7E,MAAM,EAAEsF,EAAE,GAAGC,KAAK,EAAED,EAAE,EAAE,EAAE;YACtDH,CAAC,GAAGN,IAAI,CAACS,EAAE,CAAC;YACZD,SAAS,CAACN,IAAI,CAACrD,UAAU,CAACyD,CAAC,CAAC,CAAC;UAC/B;UACA,OAAOE,SAAS;QAClB,CAAC,CAAC,CACJ,CAAC;MACH;MACA,OAAOP,QAAQ;IACjB,CAAC,CAAC,CAAC;EACL,CAAC;EACDtE,QAAQ,EAAE,SAAAA,SAASxD,IAAI,EAAE;IACvB,IAAImI,CAAC;IACL,IAAMC,KAAK,GAAGpI,IAAI,CAAC+C,KAAK,CAAC,KAAK,CAAC;IAC/B,OAAO,IAAI,CAACS,QAAQ,GAAG,YAAW;MAChC,IAAMsE,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIlF,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGuF,KAAK,CAACpF,MAAM,EAAEJ,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAE,EAAE;QACrDuF,CAAC,GAAGC,KAAK,CAACxF,EAAE,CAAC;QACbkF,QAAQ,CAACC,IAAI,CAACrD,UAAU,CAACyD,CAAC,CAAC,CAAC;MAC9B;MACA,OAAOL,QAAQ;IACjB,CAAC,CAAC,CAAC;EACL;AACF,CAAC;AACD,SACEvJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}