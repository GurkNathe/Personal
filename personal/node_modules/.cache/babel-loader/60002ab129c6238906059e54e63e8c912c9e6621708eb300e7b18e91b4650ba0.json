{"ast":null,"code":"let step2List = {\n    ational: \"ate\",\n    tional: \"tion\",\n    enci: \"ence\",\n    anci: \"ance\",\n    izer: \"ize\",\n    bli: \"ble\",\n    alli: \"al\",\n    entli: \"ent\",\n    eli: \"e\",\n    ousli: \"ous\",\n    ization: \"ize\",\n    ation: \"ate\",\n    ator: \"ate\",\n    alism: \"al\",\n    iveness: \"ive\",\n    fulness: \"ful\",\n    ousness: \"ous\",\n    aliti: \"al\",\n    iviti: \"ive\",\n    biliti: \"ble\",\n    logi: \"log\"\n  },\n  step3List = {\n    icate: \"ic\",\n    ative: \"\",\n    alize: \"al\",\n    iciti: \"ic\",\n    ical: \"ic\",\n    ful: \"\",\n    ness: \"\"\n  },\n  c = \"[^aeiou]\",\n  v = \"[aeiouy]\",\n  C = \"[^aeiou][^aeiouy]*\",\n  V = v + \"[aeiou]*\",\n  mgr0 = \"^(\" + C + \")?\" + V + C,\n  meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n  mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n  s_v = \"^(\" + C + \")?\" + v;\nexport function stemmer(e) {\n  let t, i, l, s, a, n;\n  if (e.length < 3) return e;\n  let o = e.substring(0, 1);\n  if (\"y\" == o && (e = o.toUpperCase() + e.substring(1)), s = /^(.+?)([^s])s$/, (l = /^(.+?)(ss|i)es$/).test(e) ? e = e.replace(l, \"$1$2\") : s.test(e) && (e = e.replace(s, \"$1$2\")), s = /^(.+?)(ed|ing)$/, (l = /^(.+?)eed$/).test(e)) {\n    let t = l.exec(e);\n    (l = RegExp(mgr0)).test(t[1]) && (l = /.$/, e = e.replace(l, \"\"));\n  } else if (s.test(e)) {\n    let i = s.exec(e);\n    t = i[1], (s = RegExp(s_v)).test(t) && (e = t, s = /(at|bl|iz)$/, a = RegExp(\"([^aeiouylsz])\\\\1$\"), n = RegExp(\"^\" + C + v + \"[^aeiouwxy]$\"), s.test(e) ? e += \"e\" : a.test(e) ? (l = /.$/, e = e.replace(l, \"\")) : n.test(e) && (e += \"e\"));\n  }\n  if ((l = /^(.+?)y$/).test(e)) {\n    let i = l.exec(e);\n    t = null == i ? void 0 : i[1], l = RegExp(s_v), t && l.test(t) && (e = t + \"i\");\n  }\n  if ((l = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/).test(e)) {\n    let s = l.exec(e);\n    t = null == s ? void 0 : s[1], i = null == s ? void 0 : s[2], l = RegExp(mgr0), t && l.test(t) && (e = t + step2List[i]);\n  }\n  if ((l = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/).test(e)) {\n    let s = l.exec(e);\n    t = null == s ? void 0 : s[1], i = null == s ? void 0 : s[2], l = RegExp(mgr0), t && l.test(t) && (e = t + step3List[i]);\n  }\n  if (s = /^(.+?)(s|t)(ion)$/, (l = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/).test(e)) {\n    let i = l.exec(e);\n    t = null == i ? void 0 : i[1], l = RegExp(mgr1), t && l.test(t) && (e = t);\n  } else if (s.test(e)) {\n    let i = s.exec(e);\n    t = (null == i ? void 0 : i[1]) ?? \"\" + (null == i ? void 0 : i[2]) ?? \"\", (s = RegExp(mgr1)).test(t) && (e = t);\n  }\n  if ((l = /^(.+?)e$/).test(e)) {\n    let i = l.exec(e);\n    t = null == i ? void 0 : i[1], l = RegExp(mgr1), s = RegExp(meq1), a = RegExp(\"^\" + C + v + \"[^aeiouwxy]$\"), t && (l.test(t) || s.test(t) && !a.test(t)) && (e = t);\n  }\n  return l = /ll$/, s = RegExp(mgr1), l.test(e) && s.test(e) && (l = /.$/, e = e.replace(l, \"\")), \"y\" == o && (e = o.toLowerCase() + e.substring(1)), e;\n}","map":{"version":3,"names":["step2List","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3List","icate","ative","alize","iciti","ical","ful","ness","c","v","C","V","mgr0","meq1","mgr1","s_v","stemmer","e","t","i","l","s","a","n","length","o","substring","toUpperCase","test","replace","exec","RegExp","toLowerCase"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+stemmers@1.0.3/node_modules/@orama/stemmers/dist/en.js"],"sourcesContent":["let step2List={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},step3List={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},c=\"[^aeiou]\",v=\"[aeiouy]\",C=\"[^aeiou][^aeiouy]*\",V=v+\"[aeiou]*\",mgr0=\"^(\"+C+\")?\"+V+C,meq1=\"^(\"+C+\")?\"+V+C+\"(\"+V+\")?$\",mgr1=\"^(\"+C+\")?\"+V+C+V+C,s_v=\"^(\"+C+\")?\"+v;export function stemmer(e){let t,i,l,s,a,n;if(e.length<3)return e;let o=e.substring(0,1);if(\"y\"==o&&(e=o.toUpperCase()+e.substring(1)),s=/^(.+?)([^s])s$/,(l=/^(.+?)(ss|i)es$/).test(e)?e=e.replace(l,\"$1$2\"):s.test(e)&&(e=e.replace(s,\"$1$2\")),s=/^(.+?)(ed|ing)$/,(l=/^(.+?)eed$/).test(e)){let t=l.exec(e);(l=RegExp(mgr0)).test(t[1])&&(l=/.$/,e=e.replace(l,\"\"))}else if(s.test(e)){let i=s.exec(e);t=i[1],(s=RegExp(s_v)).test(t)&&(e=t,s=/(at|bl|iz)$/,a=RegExp(\"([^aeiouylsz])\\\\1$\"),n=RegExp(\"^\"+C+v+\"[^aeiouwxy]$\"),s.test(e)?e+=\"e\":a.test(e)?(l=/.$/,e=e.replace(l,\"\")):n.test(e)&&(e+=\"e\"))}if((l=/^(.+?)y$/).test(e)){let i=l.exec(e);t=null==i?void 0:i[1],l=RegExp(s_v),t&&l.test(t)&&(e=t+\"i\")}if((l=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/).test(e)){let s=l.exec(e);t=null==s?void 0:s[1],i=null==s?void 0:s[2],l=RegExp(mgr0),t&&l.test(t)&&(e=t+step2List[i])}if((l=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/).test(e)){let s=l.exec(e);t=null==s?void 0:s[1],i=null==s?void 0:s[2],l=RegExp(mgr0),t&&l.test(t)&&(e=t+step3List[i])}if(s=/^(.+?)(s|t)(ion)$/,(l=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/).test(e)){let i=l.exec(e);t=null==i?void 0:i[1],l=RegExp(mgr1),t&&l.test(t)&&(e=t)}else if(s.test(e)){let i=s.exec(e);t=(null==i?void 0:i[1])??\"\"+(null==i?void 0:i[2])??\"\",(s=RegExp(mgr1)).test(t)&&(e=t)}if((l=/^(.+?)e$/).test(e)){let i=l.exec(e);t=null==i?void 0:i[1],l=RegExp(mgr1),s=RegExp(meq1),a=RegExp(\"^\"+C+v+\"[^aeiouwxy]$\"),t&&(l.test(t)||s.test(t)&&!a.test(t))&&(e=t)}return l=/ll$/,s=RegExp(mgr1),l.test(e)&&s.test(e)&&(l=/.$/,e=e.replace(l,\"\")),\"y\"==o&&(e=o.toLowerCase()+e.substring(1)),e}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}