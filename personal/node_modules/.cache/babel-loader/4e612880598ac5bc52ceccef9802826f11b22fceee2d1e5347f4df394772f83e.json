{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar WorkerPool = /*#__PURE__*/function () {\n  function WorkerPool() {\n    var pool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n    _classCallCheck(this, WorkerPool);\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n  _createClass(WorkerPool, [{\n    key: \"_initWorker\",\n    value: function _initWorker(workerId) {\n      if (!this.workers[workerId]) {\n        var worker = this.workerCreator();\n        worker.addEventListener(\"message\", this._onMessage.bind(this, workerId));\n        this.workers[workerId] = worker;\n      }\n    }\n  }, {\n    key: \"_getIdleWorker\",\n    value: function _getIdleWorker() {\n      for (var i = 0; i < this.pool; i++) if (!(this.workerStatus & 1 << i)) return i;\n      return -1;\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(workerId, msg) {\n      var resolve = this.workersResolve[workerId];\n      resolve && resolve(msg);\n      if (this.queue.length) {\n        var _this$queue$shift = this.queue.shift(),\n          resolve2 = _this$queue$shift.resolve,\n          msg2 = _this$queue$shift.msg,\n          transfer = _this$queue$shift.transfer;\n        this.workersResolve[workerId] = resolve2;\n        this.workers[workerId].postMessage(msg2, transfer);\n      } else {\n        this.workerStatus ^= 1 << workerId;\n      }\n    }\n  }, {\n    key: \"setWorkerCreator\",\n    value: function setWorkerCreator(workerCreator) {\n      this.workerCreator = workerCreator;\n    }\n  }, {\n    key: \"setWorkerLimit\",\n    value: function setWorkerLimit(pool) {\n      this.pool = pool;\n    }\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(msg, transfer) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        var workerId = _this._getIdleWorker();\n        if (workerId !== -1) {\n          _this._initWorker(workerId);\n          _this.workerStatus |= 1 << workerId;\n          _this.workersResolve[workerId] = resolve;\n          _this.workers[workerId].postMessage(msg, transfer);\n        } else {\n          _this.queue.push({\n            resolve: resolve,\n            msg: msg,\n            transfer: transfer\n          });\n        }\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.workers.forEach(function (worker) {\n        return worker.terminate();\n      });\n      this.workersResolve.length = 0;\n      this.workers.length = 0;\n      this.queue.length = 0;\n      this.workerStatus = 0;\n    }\n  }]);\n  return WorkerPool;\n}();\nexport { WorkerPool };","map":{"version":3,"names":["WorkerPool","pool","arguments","length","undefined","_classCallCheck","queue","workers","workersResolve","workerStatus","_createClass","key","value","_initWorker","workerId","worker","workerCreator","addEventListener","_onMessage","bind","_getIdleWorker","i","msg","resolve","_this$queue$shift","shift","resolve2","msg2","transfer","postMessage","setWorkerCreator","setWorkerLimit","_this","Promise","push","dispose","forEach","terminate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/utils/WorkerPool.js"],"sourcesContent":["class WorkerPool {\n  constructor(pool = 4) {\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n  _initWorker(workerId) {\n    if (!this.workers[workerId]) {\n      const worker = this.workerCreator();\n      worker.addEventListener(\"message\", this._onMessage.bind(this, workerId));\n      this.workers[workerId] = worker;\n    }\n  }\n  _getIdleWorker() {\n    for (let i = 0; i < this.pool; i++)\n      if (!(this.workerStatus & 1 << i))\n        return i;\n    return -1;\n  }\n  _onMessage(workerId, msg) {\n    const resolve = this.workersResolve[workerId];\n    resolve && resolve(msg);\n    if (this.queue.length) {\n      const { resolve: resolve2, msg: msg2, transfer } = this.queue.shift();\n      this.workersResolve[workerId] = resolve2;\n      this.workers[workerId].postMessage(msg2, transfer);\n    } else {\n      this.workerStatus ^= 1 << workerId;\n    }\n  }\n  setWorkerCreator(workerCreator) {\n    this.workerCreator = workerCreator;\n  }\n  setWorkerLimit(pool) {\n    this.pool = pool;\n  }\n  postMessage(msg, transfer) {\n    return new Promise((resolve) => {\n      const workerId = this._getIdleWorker();\n      if (workerId !== -1) {\n        this._initWorker(workerId);\n        this.workerStatus |= 1 << workerId;\n        this.workersResolve[workerId] = resolve;\n        this.workers[workerId].postMessage(msg, transfer);\n      } else {\n        this.queue.push({ resolve, msg, transfer });\n      }\n    });\n  }\n  dispose() {\n    this.workers.forEach((worker) => worker.terminate());\n    this.workersResolve.length = 0;\n    this.workers.length = 0;\n    this.queue.length = 0;\n    this.workerStatus = 0;\n  }\n}\nexport {\n  WorkerPool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}