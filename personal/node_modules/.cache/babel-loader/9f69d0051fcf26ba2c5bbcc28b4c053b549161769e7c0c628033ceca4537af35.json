{"ast":null,"code":"import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from \"three\";\nconst _matrix = /* @__PURE__ */new Matrix4();\nconst _vector = /* @__PURE__ */new Vector3();\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n    if (!options || !options.primitive || options.primitive === \"sphere\") {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === \"box\") {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = [\"wrist\", \"thumb-metacarpal\", \"thumb-phalanx-proximal\", \"thumb-phalanx-distal\", \"thumb-tip\", \"index-finger-metacarpal\", \"index-finger-phalanx-proximal\", \"index-finger-phalanx-intermediate\", \"index-finger-phalanx-distal\", \"index-finger-tip\", \"middle-finger-metacarpal\", \"middle-finger-phalanx-proximal\", \"middle-finger-phalanx-intermediate\", \"middle-finger-phalanx-distal\", \"middle-finger-tip\", \"ring-finger-metacarpal\", \"ring-finger-phalanx-proximal\", \"ring-finger-phalanx-intermediate\", \"ring-finger-phalanx-distal\", \"ring-finger-tip\", \"pinky-finger-metacarpal\", \"pinky-finger-phalanx-proximal\", \"pinky-finger-phalanx-intermediate\", \"pinky-finger-phalanx-distal\", \"pinky-finger-tip\"];\n  }\n  updateMesh() {\n    const defaultRadius = 8e-3;\n    const joints = this.controller.joints;\n    let count = 0;\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n}\nexport { XRHandPrimitiveModel };","map":{"version":3,"names":["Matrix4","Vector3","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","DynamicDrawUsage","_matrix","_vector","XRHandPrimitiveModel","constructor","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","updateMesh","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/webxr/XRHandPrimitiveModel.js"],"sourcesContent":["import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from \"three\";\nconst _matrix = /* @__PURE__ */ new Matrix4();\nconst _vector = /* @__PURE__ */ new Vector3();\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n    if (!options || !options.primitive || options.primitive === \"sphere\") {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === \"box\") {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage);\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = [\n      \"wrist\",\n      \"thumb-metacarpal\",\n      \"thumb-phalanx-proximal\",\n      \"thumb-phalanx-distal\",\n      \"thumb-tip\",\n      \"index-finger-metacarpal\",\n      \"index-finger-phalanx-proximal\",\n      \"index-finger-phalanx-intermediate\",\n      \"index-finger-phalanx-distal\",\n      \"index-finger-tip\",\n      \"middle-finger-metacarpal\",\n      \"middle-finger-phalanx-proximal\",\n      \"middle-finger-phalanx-intermediate\",\n      \"middle-finger-phalanx-distal\",\n      \"middle-finger-tip\",\n      \"ring-finger-metacarpal\",\n      \"ring-finger-phalanx-proximal\",\n      \"ring-finger-phalanx-intermediate\",\n      \"ring-finger-phalanx-distal\",\n      \"ring-finger-tip\",\n      \"pinky-finger-metacarpal\",\n      \"pinky-finger-phalanx-proximal\",\n      \"pinky-finger-phalanx-intermediate\",\n      \"pinky-finger-phalanx-distal\",\n      \"pinky-finger-tip\"\n    ];\n  }\n  updateMesh() {\n    const defaultRadius = 8e-3;\n    const joints = this.controller.joints;\n    let count = 0;\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n}\nexport {\n  XRHandPrimitiveModel\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}