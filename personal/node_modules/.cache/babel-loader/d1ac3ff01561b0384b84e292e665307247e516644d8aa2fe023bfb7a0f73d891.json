{"ast":null,"code":"import { Frustum, Vector3 } from \"three\";\nconst frustum = /* @__PURE__ */new Frustum();\nconst center = /* @__PURE__ */new Vector3();\nconst tmpPoint = /* @__PURE__ */new Vector3();\nconst vecNear = /* @__PURE__ */new Vector3();\nconst vecTopLeft = /* @__PURE__ */new Vector3();\nconst vecTopRight = /* @__PURE__ */new Vector3();\nconst vecDownRight = /* @__PURE__ */new Vector3();\nconst vecDownLeft = /* @__PURE__ */new Vector3();\nconst vecFarTopLeft = /* @__PURE__ */new Vector3();\nconst vecFarTopRight = /* @__PURE__ */new Vector3();\nconst vecFarDownRight = /* @__PURE__ */new Vector3();\nconst vecFarDownLeft = /* @__PURE__ */new Vector3();\nconst vectemp1 = /* @__PURE__ */new Vector3();\nconst vectemp2 = /* @__PURE__ */new Vector3();\nconst vectemp3 = /* @__PURE__ */new Vector3();\nclass SelectionBox {\n  constructor(camera, scene, deep) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new Vector3();\n    this.endPoint = new Vector3();\n    this.collection = [];\n    this.deep = deep || Number.MAX_VALUE;\n  }\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(frustum, this.scene);\n    return this.collection;\n  }\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint;\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n    if (this.camera.isPerspectiveCamera) {\n      tmpPoint.copy(startPoint);\n      tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n      vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n      vecTopLeft.copy(tmpPoint);\n      vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n      vecDownRight.copy(endPoint);\n      vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vectemp1.copy(vecTopLeft).sub(vecNear);\n      vectemp2.copy(vecTopRight).sub(vecNear);\n      vectemp3.copy(vecDownRight).sub(vecNear);\n      vectemp1.normalize();\n      vectemp2.normalize();\n      vectemp3.normalize();\n      vectemp1.multiplyScalar(this.deep);\n      vectemp2.multiplyScalar(this.deep);\n      vectemp3.multiplyScalar(this.deep);\n      vectemp1.add(vecNear);\n      vectemp2.add(vecNear);\n      vectemp3.add(vecNear);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n      planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n      planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n      planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n      vecTopLeft.set(left, top, -1);\n      vecTopRight.set(right, top, -1);\n      vecDownRight.set(right, down, -1);\n      vecDownLeft.set(left, down, -1);\n      vecFarTopLeft.set(left, top, 1);\n      vecFarTopRight.set(right, top, 1);\n      vecFarDownRight.set(right, down, 1);\n      vecFarDownLeft.set(left, down, 1);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vecFarTopLeft.unproject(this.camera);\n      vecFarTopRight.unproject(this.camera);\n      vecFarDownRight.unproject(this.camera);\n      vecFarDownLeft.unproject(this.camera);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n      planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n      planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n      planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n  searchChildInFrustum(frustum2, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.material !== void 0) {\n        if (object.geometry.boundingSphere === null) object.geometry.computeBoundingSphere();\n        center.copy(object.geometry.boundingSphere.center);\n        center.applyMatrix4(object.matrixWorld);\n        if (frustum2.containsPoint(center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum2, object.children[x]);\n      }\n    }\n  }\n}\nexport { SelectionBox };","map":{"version":3,"names":["Frustum","Vector3","frustum","center","tmpPoint","vecNear","vecTopLeft","vecTopRight","vecDownRight","vecDownLeft","vecFarTopLeft","vecFarTopRight","vecFarDownRight","vecFarDownLeft","vectemp1","vectemp2","vectemp3","SelectionBox","constructor","camera","scene","deep","startPoint","endPoint","collection","Number","MAX_VALUE","select","updateFrustum","searchChildInFrustum","x","EPSILON","y","updateProjectionMatrix","updateMatrixWorld","isPerspectiveCamera","copy","Math","min","max","setFromMatrixPosition","matrixWorld","set","unproject","sub","normalize","multiplyScalar","add","planes","setFromCoplanarPoints","normal","isOrthographicCamera","left","top","right","down","console","error","frustum2","object","isMesh","isLine","isPoints","material","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","containsPoint","push","children","length"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/interactive/SelectionBox.js"],"sourcesContent":["import { Frustum, Vector3 } from \"three\";\nconst frustum = /* @__PURE__ */ new Frustum();\nconst center = /* @__PURE__ */ new Vector3();\nconst tmpPoint = /* @__PURE__ */ new Vector3();\nconst vecNear = /* @__PURE__ */ new Vector3();\nconst vecTopLeft = /* @__PURE__ */ new Vector3();\nconst vecTopRight = /* @__PURE__ */ new Vector3();\nconst vecDownRight = /* @__PURE__ */ new Vector3();\nconst vecDownLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopLeft = /* @__PURE__ */ new Vector3();\nconst vecFarTopRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownRight = /* @__PURE__ */ new Vector3();\nconst vecFarDownLeft = /* @__PURE__ */ new Vector3();\nconst vectemp1 = /* @__PURE__ */ new Vector3();\nconst vectemp2 = /* @__PURE__ */ new Vector3();\nconst vectemp3 = /* @__PURE__ */ new Vector3();\nclass SelectionBox {\n  constructor(camera, scene, deep) {\n    this.camera = camera;\n    this.scene = scene;\n    this.startPoint = new Vector3();\n    this.endPoint = new Vector3();\n    this.collection = [];\n    this.deep = deep || Number.MAX_VALUE;\n  }\n  select(startPoint, endPoint) {\n    this.startPoint = startPoint || this.startPoint;\n    this.endPoint = endPoint || this.endPoint;\n    this.collection = [];\n    this.updateFrustum(this.startPoint, this.endPoint);\n    this.searchChildInFrustum(frustum, this.scene);\n    return this.collection;\n  }\n  updateFrustum(startPoint, endPoint) {\n    startPoint = startPoint || this.startPoint;\n    endPoint = endPoint || this.endPoint;\n    if (startPoint.x === endPoint.x) {\n      endPoint.x += Number.EPSILON;\n    }\n    if (startPoint.y === endPoint.y) {\n      endPoint.y += Number.EPSILON;\n    }\n    this.camera.updateProjectionMatrix();\n    this.camera.updateMatrixWorld();\n    if (this.camera.isPerspectiveCamera) {\n      tmpPoint.copy(startPoint);\n      tmpPoint.x = Math.min(startPoint.x, endPoint.x);\n      tmpPoint.y = Math.max(startPoint.y, endPoint.y);\n      endPoint.x = Math.max(startPoint.x, endPoint.x);\n      endPoint.y = Math.min(startPoint.y, endPoint.y);\n      vecNear.setFromMatrixPosition(this.camera.matrixWorld);\n      vecTopLeft.copy(tmpPoint);\n      vecTopRight.set(endPoint.x, tmpPoint.y, 0);\n      vecDownRight.copy(endPoint);\n      vecDownLeft.set(tmpPoint.x, endPoint.y, 0);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vectemp1.copy(vecTopLeft).sub(vecNear);\n      vectemp2.copy(vecTopRight).sub(vecNear);\n      vectemp3.copy(vecDownRight).sub(vecNear);\n      vectemp1.normalize();\n      vectemp2.normalize();\n      vectemp3.normalize();\n      vectemp1.multiplyScalar(this.deep);\n      vectemp2.multiplyScalar(this.deep);\n      vectemp3.multiplyScalar(this.deep);\n      vectemp1.add(vecNear);\n      vectemp2.add(vecNear);\n      vectemp3.add(vecNear);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecNear, vecTopLeft, vecTopRight);\n      planes[1].setFromCoplanarPoints(vecNear, vecTopRight, vecDownRight);\n      planes[2].setFromCoplanarPoints(vecDownRight, vecDownLeft, vecNear);\n      planes[3].setFromCoplanarPoints(vecDownLeft, vecTopLeft, vecNear);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vectemp3, vectemp2, vectemp1);\n      planes[5].normal.multiplyScalar(-1);\n    } else if (this.camera.isOrthographicCamera) {\n      const left = Math.min(startPoint.x, endPoint.x);\n      const top = Math.max(startPoint.y, endPoint.y);\n      const right = Math.max(startPoint.x, endPoint.x);\n      const down = Math.min(startPoint.y, endPoint.y);\n      vecTopLeft.set(left, top, -1);\n      vecTopRight.set(right, top, -1);\n      vecDownRight.set(right, down, -1);\n      vecDownLeft.set(left, down, -1);\n      vecFarTopLeft.set(left, top, 1);\n      vecFarTopRight.set(right, top, 1);\n      vecFarDownRight.set(right, down, 1);\n      vecFarDownLeft.set(left, down, 1);\n      vecTopLeft.unproject(this.camera);\n      vecTopRight.unproject(this.camera);\n      vecDownRight.unproject(this.camera);\n      vecDownLeft.unproject(this.camera);\n      vecFarTopLeft.unproject(this.camera);\n      vecFarTopRight.unproject(this.camera);\n      vecFarDownRight.unproject(this.camera);\n      vecFarDownLeft.unproject(this.camera);\n      var planes = frustum.planes;\n      planes[0].setFromCoplanarPoints(vecTopLeft, vecFarTopLeft, vecFarTopRight);\n      planes[1].setFromCoplanarPoints(vecTopRight, vecFarTopRight, vecFarDownRight);\n      planes[2].setFromCoplanarPoints(vecFarDownRight, vecFarDownLeft, vecDownLeft);\n      planes[3].setFromCoplanarPoints(vecFarDownLeft, vecFarTopLeft, vecTopLeft);\n      planes[4].setFromCoplanarPoints(vecTopRight, vecDownRight, vecDownLeft);\n      planes[5].setFromCoplanarPoints(vecFarDownRight, vecFarTopRight, vecFarTopLeft);\n      planes[5].normal.multiplyScalar(-1);\n    } else {\n      console.error(\"THREE.SelectionBox: Unsupported camera type.\");\n    }\n  }\n  searchChildInFrustum(frustum2, object) {\n    if (object.isMesh || object.isLine || object.isPoints) {\n      if (object.material !== void 0) {\n        if (object.geometry.boundingSphere === null)\n          object.geometry.computeBoundingSphere();\n        center.copy(object.geometry.boundingSphere.center);\n        center.applyMatrix4(object.matrixWorld);\n        if (frustum2.containsPoint(center)) {\n          this.collection.push(object);\n        }\n      }\n    }\n    if (object.children.length > 0) {\n      for (let x = 0; x < object.children.length; x++) {\n        this.searchChildInFrustum(frustum2, object.children[x]);\n      }\n    }\n  }\n}\nexport {\n  SelectionBox\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}