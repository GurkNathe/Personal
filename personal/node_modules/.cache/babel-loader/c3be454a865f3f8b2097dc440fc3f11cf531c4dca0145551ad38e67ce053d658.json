{"ast":null,"code":"// Split strategy constants\nexport var CENTER = 0;\nexport var AVERAGE = 1;\nexport var SAH = 2;\n\n// Traversal constants\nexport var NOT_INTERSECTED = 0;\nexport var INTERSECTED = 1;\nexport var CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport var TRIANGLE_INTERSECT_COST = 1.25;\nexport var TRAVERSAL_COST = 1;\n\n// Build constants\nexport var BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport var IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport var FLOAT32_EPSILON = Math.pow(2, -24);","map":{"version":3,"names":["CENTER","AVERAGE","SAH","NOT_INTERSECTED","INTERSECTED","CONTAINED","TRIANGLE_INTERSECT_COST","TRAVERSAL_COST","BYTES_PER_NODE","IS_LEAFNODE_FLAG","FLOAT32_EPSILON","Math","pow"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-mesh-bvh@0.5.24_three@0.151.3/node_modules/three-mesh-bvh/src/core/Constants.js"],"sourcesContent":["// Split strategy constants\nexport const CENTER = 0;\nexport const AVERAGE = 1;\nexport const SAH = 2;\n\n// Traversal constants\nexport const NOT_INTERSECTED = 0;\nexport const INTERSECTED = 1;\nexport const CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport const TRIANGLE_INTERSECT_COST = 1.25;\nexport const TRAVERSAL_COST = 1;\n\n\n// Build constants\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\n\n"],"mappings":"AAAA;AACA,OAAO,IAAMA,MAAM,GAAG,CAAC;AACvB,OAAO,IAAMC,OAAO,GAAG,CAAC;AACxB,OAAO,IAAMC,GAAG,GAAG,CAAC;;AAEpB;AACA,OAAO,IAAMC,eAAe,GAAG,CAAC;AAChC,OAAO,IAAMC,WAAW,GAAG,CAAC;AAC5B,OAAO,IAAMC,SAAS,GAAG,CAAC;;AAE1B;AACA;AACA;AACA;AACA,OAAO,IAAMC,uBAAuB,GAAG,IAAI;AAC3C,OAAO,IAAMC,cAAc,GAAG,CAAC;;AAG/B;AACA,OAAO,IAAMC,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3C,OAAO,IAAMC,gBAAgB,GAAG,MAAM;;AAEtC;AACA;AACA,OAAO,IAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAE,CAAC,EAAE,CAAE,EAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}