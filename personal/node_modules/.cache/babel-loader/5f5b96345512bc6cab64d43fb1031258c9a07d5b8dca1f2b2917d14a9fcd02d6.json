{"ast":null,"code":"import _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { PerspectiveCamera, Vector3, Quaternion } from \"three\";\nvar PeppersGhostEffect = /*#__PURE__*/_createClass(function PeppersGhostEffect(renderer) {\n  _classCallCheck(this, PeppersGhostEffect);\n  var scope = this;\n  scope.cameraDistance = 15;\n  scope.reflectFromAbove = false;\n  var _halfWidth, _width, _height;\n  var _cameraF = new PerspectiveCamera();\n  var _cameraB = new PerspectiveCamera();\n  var _cameraL = new PerspectiveCamera();\n  var _cameraR = new PerspectiveCamera();\n  var _position = new Vector3();\n  var _quaternion = new Quaternion();\n  var _scale = new Vector3();\n  renderer.autoClear = false;\n  this.setSize = function (width, height) {\n    _halfWidth = width / 2;\n    if (width < height) {\n      _width = width / 3;\n      _height = width / 3;\n    } else {\n      _width = height / 3;\n      _height = height / 3;\n    }\n    renderer.setSize(width, height);\n  };\n  this.render = function (scene, camera) {\n    if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n    if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n    camera.matrixWorld.decompose(_position, _quaternion, _scale);\n    _cameraF.position.copy(_position);\n    _cameraF.quaternion.copy(_quaternion);\n    _cameraF.translateZ(scope.cameraDistance);\n    _cameraF.lookAt(scene.position);\n    _cameraB.position.copy(_position);\n    _cameraB.quaternion.copy(_quaternion);\n    _cameraB.translateZ(-scope.cameraDistance);\n    _cameraB.lookAt(scene.position);\n    _cameraB.rotation.z += 180 * (Math.PI / 180);\n    _cameraL.position.copy(_position);\n    _cameraL.quaternion.copy(_quaternion);\n    _cameraL.translateX(-scope.cameraDistance);\n    _cameraL.lookAt(scene.position);\n    _cameraL.rotation.x += 90 * (Math.PI / 180);\n    _cameraR.position.copy(_position);\n    _cameraR.quaternion.copy(_quaternion);\n    _cameraR.translateX(scope.cameraDistance);\n    _cameraR.lookAt(scene.position);\n    _cameraR.rotation.x += 90 * (Math.PI / 180);\n    renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraB);\n    } else {\n      renderer.render(scene, _cameraF);\n    }\n    renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraF);\n    } else {\n      renderer.render(scene, _cameraB);\n    }\n    renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraR);\n    } else {\n      renderer.render(scene, _cameraL);\n    }\n    renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n    renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraL);\n    } else {\n      renderer.render(scene, _cameraR);\n    }\n    renderer.setScissorTest(false);\n  };\n});\nexport { PeppersGhostEffect };","map":{"version":3,"names":["PerspectiveCamera","Vector3","Quaternion","PeppersGhostEffect","_createClass","renderer","_classCallCheck","scope","cameraDistance","reflectFromAbove","_halfWidth","_width","_height","_cameraF","_cameraB","_cameraL","_cameraR","_position","_quaternion","_scale","autoClear","setSize","width","height","render","scene","camera","matrixWorldAutoUpdate","updateMatrixWorld","parent","matrixWorld","decompose","position","copy","quaternion","translateZ","lookAt","rotation","z","Math","PI","translateX","x","clear","setScissorTest","setScissor","setViewport"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/effects/PeppersGhostEffect.js"],"sourcesContent":["import { PerspectiveCamera, Vector3, Quaternion } from \"three\";\nclass PeppersGhostEffect {\n  constructor(renderer) {\n    const scope = this;\n    scope.cameraDistance = 15;\n    scope.reflectFromAbove = false;\n    let _halfWidth, _width, _height;\n    const _cameraF = new PerspectiveCamera();\n    const _cameraB = new PerspectiveCamera();\n    const _cameraL = new PerspectiveCamera();\n    const _cameraR = new PerspectiveCamera();\n    const _position = new Vector3();\n    const _quaternion = new Quaternion();\n    const _scale = new Vector3();\n    renderer.autoClear = false;\n    this.setSize = function(width, height) {\n      _halfWidth = width / 2;\n      if (width < height) {\n        _width = width / 3;\n        _height = width / 3;\n      } else {\n        _width = height / 3;\n        _height = height / 3;\n      }\n      renderer.setSize(width, height);\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      camera.matrixWorld.decompose(_position, _quaternion, _scale);\n      _cameraF.position.copy(_position);\n      _cameraF.quaternion.copy(_quaternion);\n      _cameraF.translateZ(scope.cameraDistance);\n      _cameraF.lookAt(scene.position);\n      _cameraB.position.copy(_position);\n      _cameraB.quaternion.copy(_quaternion);\n      _cameraB.translateZ(-scope.cameraDistance);\n      _cameraB.lookAt(scene.position);\n      _cameraB.rotation.z += 180 * (Math.PI / 180);\n      _cameraL.position.copy(_position);\n      _cameraL.quaternion.copy(_quaternion);\n      _cameraL.translateX(-scope.cameraDistance);\n      _cameraL.lookAt(scene.position);\n      _cameraL.rotation.x += 90 * (Math.PI / 180);\n      _cameraR.position.copy(_position);\n      _cameraR.quaternion.copy(_quaternion);\n      _cameraR.translateX(scope.cameraDistance);\n      _cameraR.lookAt(scene.position);\n      _cameraR.rotation.x += 90 * (Math.PI / 180);\n      renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraB);\n      } else {\n        renderer.render(scene, _cameraF);\n      }\n      renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraF);\n      } else {\n        renderer.render(scene, _cameraB);\n      }\n      renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraR);\n      } else {\n        renderer.render(scene, _cameraL);\n      }\n      renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n      renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraL);\n      } else {\n        renderer.render(scene, _cameraR);\n      }\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport {\n  PeppersGhostEffect\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}