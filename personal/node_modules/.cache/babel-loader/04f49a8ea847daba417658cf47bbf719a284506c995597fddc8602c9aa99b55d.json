{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar LWO2Parser = /*#__PURE__*/function () {\n  function LWO2Parser(IFFParser) {\n    _classCallCheck(this, LWO2Parser);\n    this.IFF = IFFParser;\n  }\n  _createClass(LWO2Parser, [{\n    key: \"parseBlock\",\n    value: function parseBlock() {\n      this.IFF.debugger.offset = this.IFF.reader.offset;\n      this.IFF.debugger.closeForms();\n      var blockID = this.IFF.reader.getIDTag();\n      var length = this.IFF.reader.getUint32();\n      if (length > this.IFF.reader.dv.byteLength - this.IFF.reader.offset) {\n        this.IFF.reader.offset -= 4;\n        length = this.IFF.reader.getUint16();\n      }\n      this.IFF.debugger.dataOffset = this.IFF.reader.offset;\n      this.IFF.debugger.length = length;\n      switch (blockID) {\n        case \"FORM\":\n          this.IFF.parseForm(length);\n          break;\n        case \"ICON\":\n        case \"VMPA\":\n        case \"BBOX\":\n        case \"NORM\":\n        case \"PRE \":\n        case \"POST\":\n        case \"KEY \":\n        case \"SPAN\":\n        case \"TIME\":\n        case \"CLRS\":\n        case \"CLRA\":\n        case \"FILT\":\n        case \"DITH\":\n        case \"CONT\":\n        case \"BRIT\":\n        case \"SATR\":\n        case \"HUE \":\n        case \"GAMM\":\n        case \"NEGA\":\n        case \"IFLT\":\n        case \"PFLT\":\n        case \"PROJ\":\n        case \"AXIS\":\n        case \"AAST\":\n        case \"PIXB\":\n        case \"AUVO\":\n        case \"STCK\":\n        case \"PROC\":\n        case \"VALU\":\n        case \"FUNC\":\n        case \"PNAM\":\n        case \"INAM\":\n        case \"GRST\":\n        case \"GREN\":\n        case \"GRPT\":\n        case \"FKEY\":\n        case \"IKEY\":\n        case \"CSYS\":\n        case \"OPAQ\":\n        case \"CMAP\":\n        case \"NLOC\":\n        case \"NZOM\":\n        case \"NVER\":\n        case \"NSRV\":\n        case \"NVSK\":\n        case \"NCRD\":\n        case \"WRPW\":\n        case \"WRPH\":\n        case \"NMOD\":\n        case \"NSEL\":\n        case \"NPRW\":\n        case \"NPLA\":\n        case \"NODS\":\n        case \"VERS\":\n        case \"ENUM\":\n        case \"TAG \":\n        case \"OPAC\":\n        case \"CGMD\":\n        case \"CGTY\":\n        case \"CGST\":\n        case \"CGEN\":\n        case \"CGTS\":\n        case \"CGTE\":\n        case \"OSMP\":\n        case \"OMDE\":\n        case \"OUTR\":\n        case \"FLAG\":\n        case \"TRNL\":\n        case \"GLOW\":\n        case \"GVAL\":\n        case \"SHRP\":\n        case \"RFOP\":\n        case \"RSAN\":\n        case \"TROP\":\n        case \"RBLR\":\n        case \"TBLR\":\n        case \"CLRH\":\n        case \"CLRF\":\n        case \"ADTR\":\n        case \"LINE\":\n        case \"ALPH\":\n        case \"VCOL\":\n        case \"ENAB\":\n          this.IFF.debugger.skipped = true;\n          this.IFF.reader.skip(length);\n          break;\n        case \"SURF\":\n          this.IFF.parseSurfaceLwo2(length);\n          break;\n        case \"CLIP\":\n          this.IFF.parseClipLwo2(length);\n          break;\n        case \"IPIX\":\n        case \"IMIP\":\n        case \"IMOD\":\n        case \"AMOD\":\n        case \"IINV\":\n        case \"INCR\":\n        case \"IAXS\":\n        case \"IFOT\":\n        case \"ITIM\":\n        case \"IWRL\":\n        case \"IUTI\":\n        case \"IINX\":\n        case \"IINY\":\n        case \"IINZ\":\n        case \"IREF\":\n          if (length === 4) this.IFF.currentNode[blockID] = this.IFF.reader.getInt32();else this.IFF.reader.skip(length);\n          break;\n        case \"OTAG\":\n          this.IFF.parseObjectTag();\n          break;\n        case \"LAYR\":\n          this.IFF.parseLayer(length);\n          break;\n        case \"PNTS\":\n          this.IFF.parsePoints(length);\n          break;\n        case \"VMAP\":\n          this.IFF.parseVertexMapping(length);\n          break;\n        case \"AUVU\":\n        case \"AUVN\":\n          this.IFF.reader.skip(length - 1);\n          this.IFF.reader.getVariableLengthIndex();\n          break;\n        case \"POLS\":\n          this.IFF.parsePolygonList(length);\n          break;\n        case \"TAGS\":\n          this.IFF.parseTagStrings(length);\n          break;\n        case \"PTAG\":\n          this.IFF.parsePolygonTagMapping(length);\n          break;\n        case \"VMAD\":\n          this.IFF.parseVertexMapping(length, true);\n          break;\n        case \"DESC\":\n          this.IFF.currentForm.description = this.IFF.reader.getString();\n          break;\n        case \"TEXT\":\n        case \"CMNT\":\n        case \"NCOM\":\n          this.IFF.currentForm.comment = this.IFF.reader.getString();\n          break;\n        case \"NAME\":\n          this.IFF.currentForm.channelName = this.IFF.reader.getString();\n          break;\n        case \"WRAP\":\n          this.IFF.currentForm.wrap = {\n            w: this.IFF.reader.getUint16(),\n            h: this.IFF.reader.getUint16()\n          };\n          break;\n        case \"IMAG\":\n          var index = this.IFF.reader.getVariableLengthIndex();\n          this.IFF.currentForm.imageIndex = index;\n          break;\n        case \"OREF\":\n          this.IFF.currentForm.referenceObject = this.IFF.reader.getString();\n          break;\n        case \"ROID\":\n          this.IFF.currentForm.referenceObjectID = this.IFF.reader.getUint32();\n          break;\n        case \"SSHN\":\n          this.IFF.currentSurface.surfaceShaderName = this.IFF.reader.getString();\n          break;\n        case \"AOVN\":\n          this.IFF.currentSurface.surfaceCustomAOVName = this.IFF.reader.getString();\n          break;\n        case \"NSTA\":\n          this.IFF.currentForm.disabled = this.IFF.reader.getUint16();\n          break;\n        case \"NRNM\":\n          this.IFF.currentForm.realName = this.IFF.reader.getString();\n          break;\n        case \"NNME\":\n          this.IFF.currentForm.refName = this.IFF.reader.getString();\n          this.IFF.currentSurface.nodes[this.IFF.currentForm.refName] = this.IFF.currentForm;\n          break;\n        case \"INME\":\n          if (!this.IFF.currentForm.nodeName) this.IFF.currentForm.nodeName = [];\n          this.IFF.currentForm.nodeName.push(this.IFF.reader.getString());\n          break;\n        case \"IINN\":\n          if (!this.IFF.currentForm.inputNodeName) this.IFF.currentForm.inputNodeName = [];\n          this.IFF.currentForm.inputNodeName.push(this.IFF.reader.getString());\n          break;\n        case \"IINM\":\n          if (!this.IFF.currentForm.inputName) this.IFF.currentForm.inputName = [];\n          this.IFF.currentForm.inputName.push(this.IFF.reader.getString());\n          break;\n        case \"IONM\":\n          if (!this.IFF.currentForm.inputOutputName) this.IFF.currentForm.inputOutputName = [];\n          this.IFF.currentForm.inputOutputName.push(this.IFF.reader.getString());\n          break;\n        case \"FNAM\":\n          this.IFF.currentForm.fileName = this.IFF.reader.getString();\n          break;\n        case \"CHAN\":\n          if (length === 4) this.IFF.currentForm.textureChannel = this.IFF.reader.getIDTag();else this.IFF.reader.skip(length);\n          break;\n        case \"SMAN\":\n          var maxSmoothingAngle = this.IFF.reader.getFloat32();\n          this.IFF.currentSurface.attributes.smooth = maxSmoothingAngle < 0 ? false : true;\n          break;\n        case \"COLR\":\n          this.IFF.currentSurface.attributes.Color = {\n            value: this.IFF.reader.getFloat32Array(3)\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"LUMI\":\n          this.IFF.currentSurface.attributes.Luminosity = {\n            value: this.IFF.reader.getFloat32()\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"SPEC\":\n          this.IFF.currentSurface.attributes.Specular = {\n            value: this.IFF.reader.getFloat32()\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"DIFF\":\n          this.IFF.currentSurface.attributes.Diffuse = {\n            value: this.IFF.reader.getFloat32()\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"REFL\":\n          this.IFF.currentSurface.attributes.Reflection = {\n            value: this.IFF.reader.getFloat32()\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"GLOS\":\n          this.IFF.currentSurface.attributes.Glossiness = {\n            value: this.IFF.reader.getFloat32()\n          };\n          this.IFF.reader.skip(2);\n          break;\n        case \"TRAN\":\n          this.IFF.currentSurface.attributes.opacity = this.IFF.reader.getFloat32();\n          this.IFF.reader.skip(2);\n          break;\n        case \"BUMP\":\n          this.IFF.currentSurface.attributes.bumpStrength = this.IFF.reader.getFloat32();\n          this.IFF.reader.skip(2);\n          break;\n        case \"SIDE\":\n          this.IFF.currentSurface.attributes.side = this.IFF.reader.getUint16();\n          break;\n        case \"RIMG\":\n          this.IFF.currentSurface.attributes.reflectionMap = this.IFF.reader.getVariableLengthIndex();\n          break;\n        case \"RIND\":\n          this.IFF.currentSurface.attributes.refractiveIndex = this.IFF.reader.getFloat32();\n          this.IFF.reader.skip(2);\n          break;\n        case \"TIMG\":\n          this.IFF.currentSurface.attributes.refractionMap = this.IFF.reader.getVariableLengthIndex();\n          break;\n        case \"IMAP\":\n          this.IFF.reader.skip(2);\n          break;\n        case \"TMAP\":\n          this.IFF.debugger.skipped = true;\n          this.IFF.reader.skip(length);\n          break;\n        case \"IUVI\":\n          this.IFF.currentNode.UVChannel = this.IFF.reader.getString(length);\n          break;\n        case \"IUTL\":\n          this.IFF.currentNode.widthWrappingMode = this.IFF.reader.getUint32();\n          break;\n        case \"IVTL\":\n          this.IFF.currentNode.heightWrappingMode = this.IFF.reader.getUint32();\n          break;\n        case \"BLOK\":\n          break;\n        default:\n          this.IFF.parseUnknownCHUNK(blockID, length);\n      }\n      if (blockID != \"FORM\") {\n        this.IFF.debugger.node = 1;\n        this.IFF.debugger.nodeID = blockID;\n        this.IFF.debugger.log();\n      }\n      if (this.IFF.reader.offset >= this.IFF.currentFormEnd) {\n        this.IFF.currentForm = this.IFF.parentForm;\n      }\n    }\n  }]);\n  return LWO2Parser;\n}();\nexport { LWO2Parser };","map":{"version":3,"names":["LWO2Parser","IFFParser","_classCallCheck","IFF","_createClass","key","value","parseBlock","debugger","offset","reader","closeForms","blockID","getIDTag","length","getUint32","dv","byteLength","getUint16","dataOffset","parseForm","skipped","skip","parseSurfaceLwo2","parseClipLwo2","currentNode","getInt32","parseObjectTag","parseLayer","parsePoints","parseVertexMapping","getVariableLengthIndex","parsePolygonList","parseTagStrings","parsePolygonTagMapping","currentForm","description","getString","comment","channelName","wrap","w","h","index","imageIndex","referenceObject","referenceObjectID","currentSurface","surfaceShaderName","surfaceCustomAOVName","disabled","realName","refName","nodes","nodeName","push","inputNodeName","inputName","inputOutputName","fileName","textureChannel","maxSmoothingAngle","getFloat32","attributes","smooth","Color","getFloat32Array","Luminosity","Specular","Diffuse","Reflection","Glossiness","opacity","bumpStrength","side","reflectionMap","refractiveIndex","refractionMap","UVChannel","widthWrappingMode","heightWrappingMode","parseUnknownCHUNK","node","nodeID","log","currentFormEnd","parentForm"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/lwo/LWO2Parser.js"],"sourcesContent":["class LWO2Parser {\n  constructor(IFFParser) {\n    this.IFF = IFFParser;\n  }\n  parseBlock() {\n    this.IFF.debugger.offset = this.IFF.reader.offset;\n    this.IFF.debugger.closeForms();\n    const blockID = this.IFF.reader.getIDTag();\n    let length = this.IFF.reader.getUint32();\n    if (length > this.IFF.reader.dv.byteLength - this.IFF.reader.offset) {\n      this.IFF.reader.offset -= 4;\n      length = this.IFF.reader.getUint16();\n    }\n    this.IFF.debugger.dataOffset = this.IFF.reader.offset;\n    this.IFF.debugger.length = length;\n    switch (blockID) {\n      case \"FORM\":\n        this.IFF.parseForm(length);\n        break;\n      case \"ICON\":\n      case \"VMPA\":\n      case \"BBOX\":\n      case \"NORM\":\n      case \"PRE \":\n      case \"POST\":\n      case \"KEY \":\n      case \"SPAN\":\n      case \"TIME\":\n      case \"CLRS\":\n      case \"CLRA\":\n      case \"FILT\":\n      case \"DITH\":\n      case \"CONT\":\n      case \"BRIT\":\n      case \"SATR\":\n      case \"HUE \":\n      case \"GAMM\":\n      case \"NEGA\":\n      case \"IFLT\":\n      case \"PFLT\":\n      case \"PROJ\":\n      case \"AXIS\":\n      case \"AAST\":\n      case \"PIXB\":\n      case \"AUVO\":\n      case \"STCK\":\n      case \"PROC\":\n      case \"VALU\":\n      case \"FUNC\":\n      case \"PNAM\":\n      case \"INAM\":\n      case \"GRST\":\n      case \"GREN\":\n      case \"GRPT\":\n      case \"FKEY\":\n      case \"IKEY\":\n      case \"CSYS\":\n      case \"OPAQ\":\n      case \"CMAP\":\n      case \"NLOC\":\n      case \"NZOM\":\n      case \"NVER\":\n      case \"NSRV\":\n      case \"NVSK\":\n      case \"NCRD\":\n      case \"WRPW\":\n      case \"WRPH\":\n      case \"NMOD\":\n      case \"NSEL\":\n      case \"NPRW\":\n      case \"NPLA\":\n      case \"NODS\":\n      case \"VERS\":\n      case \"ENUM\":\n      case \"TAG \":\n      case \"OPAC\":\n      case \"CGMD\":\n      case \"CGTY\":\n      case \"CGST\":\n      case \"CGEN\":\n      case \"CGTS\":\n      case \"CGTE\":\n      case \"OSMP\":\n      case \"OMDE\":\n      case \"OUTR\":\n      case \"FLAG\":\n      case \"TRNL\":\n      case \"GLOW\":\n      case \"GVAL\":\n      case \"SHRP\":\n      case \"RFOP\":\n      case \"RSAN\":\n      case \"TROP\":\n      case \"RBLR\":\n      case \"TBLR\":\n      case \"CLRH\":\n      case \"CLRF\":\n      case \"ADTR\":\n      case \"LINE\":\n      case \"ALPH\":\n      case \"VCOL\":\n      case \"ENAB\":\n        this.IFF.debugger.skipped = true;\n        this.IFF.reader.skip(length);\n        break;\n      case \"SURF\":\n        this.IFF.parseSurfaceLwo2(length);\n        break;\n      case \"CLIP\":\n        this.IFF.parseClipLwo2(length);\n        break;\n      case \"IPIX\":\n      case \"IMIP\":\n      case \"IMOD\":\n      case \"AMOD\":\n      case \"IINV\":\n      case \"INCR\":\n      case \"IAXS\":\n      case \"IFOT\":\n      case \"ITIM\":\n      case \"IWRL\":\n      case \"IUTI\":\n      case \"IINX\":\n      case \"IINY\":\n      case \"IINZ\":\n      case \"IREF\":\n        if (length === 4)\n          this.IFF.currentNode[blockID] = this.IFF.reader.getInt32();\n        else\n          this.IFF.reader.skip(length);\n        break;\n      case \"OTAG\":\n        this.IFF.parseObjectTag();\n        break;\n      case \"LAYR\":\n        this.IFF.parseLayer(length);\n        break;\n      case \"PNTS\":\n        this.IFF.parsePoints(length);\n        break;\n      case \"VMAP\":\n        this.IFF.parseVertexMapping(length);\n        break;\n      case \"AUVU\":\n      case \"AUVN\":\n        this.IFF.reader.skip(length - 1);\n        this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"POLS\":\n        this.IFF.parsePolygonList(length);\n        break;\n      case \"TAGS\":\n        this.IFF.parseTagStrings(length);\n        break;\n      case \"PTAG\":\n        this.IFF.parsePolygonTagMapping(length);\n        break;\n      case \"VMAD\":\n        this.IFF.parseVertexMapping(length, true);\n        break;\n      case \"DESC\":\n        this.IFF.currentForm.description = this.IFF.reader.getString();\n        break;\n      case \"TEXT\":\n      case \"CMNT\":\n      case \"NCOM\":\n        this.IFF.currentForm.comment = this.IFF.reader.getString();\n        break;\n      case \"NAME\":\n        this.IFF.currentForm.channelName = this.IFF.reader.getString();\n        break;\n      case \"WRAP\":\n        this.IFF.currentForm.wrap = { w: this.IFF.reader.getUint16(), h: this.IFF.reader.getUint16() };\n        break;\n      case \"IMAG\":\n        const index = this.IFF.reader.getVariableLengthIndex();\n        this.IFF.currentForm.imageIndex = index;\n        break;\n      case \"OREF\":\n        this.IFF.currentForm.referenceObject = this.IFF.reader.getString();\n        break;\n      case \"ROID\":\n        this.IFF.currentForm.referenceObjectID = this.IFF.reader.getUint32();\n        break;\n      case \"SSHN\":\n        this.IFF.currentSurface.surfaceShaderName = this.IFF.reader.getString();\n        break;\n      case \"AOVN\":\n        this.IFF.currentSurface.surfaceCustomAOVName = this.IFF.reader.getString();\n        break;\n      case \"NSTA\":\n        this.IFF.currentForm.disabled = this.IFF.reader.getUint16();\n        break;\n      case \"NRNM\":\n        this.IFF.currentForm.realName = this.IFF.reader.getString();\n        break;\n      case \"NNME\":\n        this.IFF.currentForm.refName = this.IFF.reader.getString();\n        this.IFF.currentSurface.nodes[this.IFF.currentForm.refName] = this.IFF.currentForm;\n        break;\n      case \"INME\":\n        if (!this.IFF.currentForm.nodeName)\n          this.IFF.currentForm.nodeName = [];\n        this.IFF.currentForm.nodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINN\":\n        if (!this.IFF.currentForm.inputNodeName)\n          this.IFF.currentForm.inputNodeName = [];\n        this.IFF.currentForm.inputNodeName.push(this.IFF.reader.getString());\n        break;\n      case \"IINM\":\n        if (!this.IFF.currentForm.inputName)\n          this.IFF.currentForm.inputName = [];\n        this.IFF.currentForm.inputName.push(this.IFF.reader.getString());\n        break;\n      case \"IONM\":\n        if (!this.IFF.currentForm.inputOutputName)\n          this.IFF.currentForm.inputOutputName = [];\n        this.IFF.currentForm.inputOutputName.push(this.IFF.reader.getString());\n        break;\n      case \"FNAM\":\n        this.IFF.currentForm.fileName = this.IFF.reader.getString();\n        break;\n      case \"CHAN\":\n        if (length === 4)\n          this.IFF.currentForm.textureChannel = this.IFF.reader.getIDTag();\n        else\n          this.IFF.reader.skip(length);\n        break;\n      case \"SMAN\":\n        const maxSmoothingAngle = this.IFF.reader.getFloat32();\n        this.IFF.currentSurface.attributes.smooth = maxSmoothingAngle < 0 ? false : true;\n        break;\n      case \"COLR\":\n        this.IFF.currentSurface.attributes.Color = { value: this.IFF.reader.getFloat32Array(3) };\n        this.IFF.reader.skip(2);\n        break;\n      case \"LUMI\":\n        this.IFF.currentSurface.attributes.Luminosity = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"SPEC\":\n        this.IFF.currentSurface.attributes.Specular = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"DIFF\":\n        this.IFF.currentSurface.attributes.Diffuse = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"REFL\":\n        this.IFF.currentSurface.attributes.Reflection = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"GLOS\":\n        this.IFF.currentSurface.attributes.Glossiness = { value: this.IFF.reader.getFloat32() };\n        this.IFF.reader.skip(2);\n        break;\n      case \"TRAN\":\n        this.IFF.currentSurface.attributes.opacity = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"BUMP\":\n        this.IFF.currentSurface.attributes.bumpStrength = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"SIDE\":\n        this.IFF.currentSurface.attributes.side = this.IFF.reader.getUint16();\n        break;\n      case \"RIMG\":\n        this.IFF.currentSurface.attributes.reflectionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"RIND\":\n        this.IFF.currentSurface.attributes.refractiveIndex = this.IFF.reader.getFloat32();\n        this.IFF.reader.skip(2);\n        break;\n      case \"TIMG\":\n        this.IFF.currentSurface.attributes.refractionMap = this.IFF.reader.getVariableLengthIndex();\n        break;\n      case \"IMAP\":\n        this.IFF.reader.skip(2);\n        break;\n      case \"TMAP\":\n        this.IFF.debugger.skipped = true;\n        this.IFF.reader.skip(length);\n        break;\n      case \"IUVI\":\n        this.IFF.currentNode.UVChannel = this.IFF.reader.getString(length);\n        break;\n      case \"IUTL\":\n        this.IFF.currentNode.widthWrappingMode = this.IFF.reader.getUint32();\n        break;\n      case \"IVTL\":\n        this.IFF.currentNode.heightWrappingMode = this.IFF.reader.getUint32();\n        break;\n      case \"BLOK\":\n        break;\n      default:\n        this.IFF.parseUnknownCHUNK(blockID, length);\n    }\n    if (blockID != \"FORM\") {\n      this.IFF.debugger.node = 1;\n      this.IFF.debugger.nodeID = blockID;\n      this.IFF.debugger.log();\n    }\n    if (this.IFF.reader.offset >= this.IFF.currentFormEnd) {\n      this.IFF.currentForm = this.IFF.parentForm;\n    }\n  }\n}\nexport {\n  LWO2Parser\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}