{"ast":null,"code":"import { findSimilarVectors } from '../components/cosine-similarity.js';\nimport { getInternalDocumentId } from '../components/internal-document-id-store.js';\nimport { createError } from '../errors.js';\nimport { formatNanoseconds, getNanosecondsTime } from '../utils.js';\nexport async function searchVector(orama, params) {\n  const timeStart = await getNanosecondsTime();\n  let {\n    vector\n  } = params;\n  const {\n    property,\n    limit = 10,\n    offset = 0,\n    includeVectors = false\n  } = params;\n  const vectorIndex = orama.data.index.vectorIndexes[property];\n  const vectorSize = vectorIndex.size;\n  const vectors = vectorIndex.vectors;\n  if (vector.length !== vectorSize) {\n    throw createError('INVALID_INPUT_VECTOR', property, vectorSize, vector.length);\n  }\n  if (!(vector instanceof Float32Array)) {\n    vector = new Float32Array(vector);\n  }\n  const results = findSimilarVectors(vector, vectors, vectorSize, params.similarity);\n  const docs = Array.from({\n    length: limit\n  });\n  for (let i = 0; i < limit; i++) {\n    const result = results[i + offset];\n    if (!result) {\n      break;\n    }\n    const originalID = getInternalDocumentId(orama.internalDocumentIDStore, result.id);\n    const doc = orama.data.docs.docs[originalID];\n    if (doc) {\n      if (!includeVectors) {\n        doc[property] = null;\n      }\n      const newDoc = {\n        id: result.id,\n        score: result.score,\n        document: doc\n      };\n      docs[i] = newDoc;\n    }\n  }\n  const timeEnd = await getNanosecondsTime();\n  const elapsedTime = timeEnd - timeStart;\n  return {\n    count: results.length,\n    hits: docs.filter(Boolean),\n    elapsed: {\n      raw: Number(elapsedTime),\n      formatted: await formatNanoseconds(elapsedTime)\n    }\n  };\n}","map":{"version":3,"names":["findSimilarVectors","getInternalDocumentId","createError","formatNanoseconds","getNanosecondsTime","searchVector","orama","params","timeStart","vector","property","limit","offset","includeVectors","vectorIndex","data","index","vectorIndexes","vectorSize","size","vectors","length","Float32Array","results","similarity","docs","Array","from","i","result","originalID","internalDocumentIDStore","id","doc","newDoc","score","document","timeEnd","elapsedTime","count","hits","filter","Boolean","elapsed","raw","Number","formatted"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.2.11/node_modules/@orama/orama/src/methods/search-vector.ts"],"sourcesContent":["import { findSimilarVectors } from '../components/cosine-similarity.js'\nimport { getInternalDocumentId } from '../components/internal-document-id-store.js'\nimport { createError } from '../errors.js'\nimport type { AnyOrama, Result, Results, TypedDocument } from '../types.js'\nimport { formatNanoseconds, getNanosecondsTime } from '../utils.js'\n\nexport type SearchVectorParams = {\n  vector: number[] | Float32Array\n  property: string\n  similarity?: number\n  limit?: number\n  offset?: number\n  includeVectors?: boolean\n}\n\nexport async function searchVector<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  orama: T,\n  params: SearchVectorParams,\n): Promise<Results<ResultDocument>> {\n  const timeStart = await getNanosecondsTime()\n  let { vector } = params\n  const { property, limit = 10, offset = 0, includeVectors = false } = params\n  const vectorIndex = orama.data.index.vectorIndexes[property]\n  const vectorSize = vectorIndex.size\n  const vectors = vectorIndex.vectors\n\n  if (vector.length !== vectorSize) {\n    throw createError('INVALID_INPUT_VECTOR', property, vectorSize, vector.length)\n  }\n\n  if (!(vector instanceof Float32Array)) {\n    vector = new Float32Array(vector)\n  }\n\n  const results = findSimilarVectors(vector, vectors, vectorSize, params.similarity)\n\n  const docs: Result<ResultDocument>[] = Array.from({ length: limit })\n\n  for (let i = 0; i < limit; i++) {\n    const result = results[i + offset]\n    if (!result) {\n      break\n    }\n\n    const originalID = getInternalDocumentId(orama.internalDocumentIDStore, result.id)\n    const doc = orama.data.docs.docs[originalID]\n\n    if (doc) {\n      if (!includeVectors) {\n        doc[property] = null\n      }\n\n      const newDoc: Result<ResultDocument> = {\n        id: result.id,\n        score: result.score,\n        document: doc,\n      }\n      docs[i] = newDoc\n    }\n  }\n\n  const timeEnd = await getNanosecondsTime()\n  const elapsedTime = timeEnd - timeStart\n\n  return {\n    count: results.length,\n    hits: docs.filter(Boolean),\n    elapsed: {\n      raw: Number(elapsedTime),\n      formatted: await formatNanoseconds(elapsedTime),\n    },\n  }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ;AACnC,SAASC,qBAAqB,QAAQ;AACtC,SAASC,WAAW,QAAQ;AAE5B,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ;AAWtD,OAAO,eAAeC,aACpBC,KAAQ,EACRC,MAA0B,EACQ;EAClC,MAAMC,SAAA,GAAY,MAAMJ,kBAAA;EACxB,IAAI;IAAEK;EAAM,CAAE,GAAGF,MAAA;EACjB,MAAM;IAAEG,QAAA;IAAUC,KAAA,GAAQ;IAAIC,MAAA,GAAS;IAAGC,cAAA,GAAiB;EAAK,CAAE,GAAGN,MAAA;EACrE,MAAMO,WAAA,GAAcR,KAAA,CAAMS,IAAI,CAACC,KAAK,CAACC,aAAa,CAACP,QAAA,CAAS;EAC5D,MAAMQ,UAAA,GAAaJ,WAAA,CAAYK,IAAI;EACnC,MAAMC,OAAA,GAAUN,WAAA,CAAYM,OAAO;EAEnC,IAAIX,MAAA,CAAOY,MAAM,KAAKH,UAAA,EAAY;IAChC,MAAMhB,WAAA,CAAY,wBAAwBQ,QAAA,EAAUQ,UAAA,EAAYT,MAAA,CAAOY,MAAM;EAC/E;EAEA,IAAI,EAAEZ,MAAA,YAAkBa,YAAW,GAAI;IACrCb,MAAA,GAAS,IAAIa,YAAA,CAAab,MAAA;EAC5B;EAEA,MAAMc,OAAA,GAAUvB,kBAAA,CAAmBS,MAAA,EAAQW,OAAA,EAASF,UAAA,EAAYX,MAAA,CAAOiB,UAAU;EAEjF,MAAMC,IAAA,GAAiCC,KAAA,CAAMC,IAAI,CAAC;IAAEN,MAAA,EAAQV;EAAM;EAElE,KAAK,IAAIiB,CAAA,GAAI,GAAGA,CAAA,GAAIjB,KAAA,EAAOiB,CAAA,IAAK;IAC9B,MAAMC,MAAA,GAASN,OAAO,CAACK,CAAA,GAAIhB,MAAA,CAAO;IAClC,IAAI,CAACiB,MAAA,EAAQ;MACX;IACF;IAEA,MAAMC,UAAA,GAAa7B,qBAAA,CAAsBK,KAAA,CAAMyB,uBAAuB,EAAEF,MAAA,CAAOG,EAAE;IACjF,MAAMC,GAAA,GAAM3B,KAAA,CAAMS,IAAI,CAACU,IAAI,CAACA,IAAI,CAACK,UAAA,CAAW;IAE5C,IAAIG,GAAA,EAAK;MACP,IAAI,CAACpB,cAAA,EAAgB;QACnBoB,GAAG,CAACvB,QAAA,CAAS,GAAG,IAAI;MACtB;MAEA,MAAMwB,MAAA,GAAiC;QACrCF,EAAA,EAAIH,MAAA,CAAOG,EAAE;QACbG,KAAA,EAAON,MAAA,CAAOM,KAAK;QACnBC,QAAA,EAAUH;MACZ;MACAR,IAAI,CAACG,CAAA,CAAE,GAAGM,MAAA;IACZ;EACF;EAEA,MAAMG,OAAA,GAAU,MAAMjC,kBAAA;EACtB,MAAMkC,WAAA,GAAcD,OAAA,GAAU7B,SAAA;EAE9B,OAAO;IACL+B,KAAA,EAAOhB,OAAA,CAAQF,MAAM;IACrBmB,IAAA,EAAMf,IAAA,CAAKgB,MAAM,CAACC,OAAA;IAClBC,OAAA,EAAS;MACPC,GAAA,EAAKC,MAAA,CAAOP,WAAA;MACZQ,SAAA,EAAW,MAAM3C,iBAAA,CAAkBmC,WAAA;IACrC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}