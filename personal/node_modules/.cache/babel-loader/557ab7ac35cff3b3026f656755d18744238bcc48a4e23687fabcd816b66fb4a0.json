{"ast":null,"code":"import { Color } from \"three\";\nconst LuminosityHighPassShader = {\n  shaderID: \"luminosityHighPass\",\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    luminosityThreshold: {\n      value: 1\n    },\n    smoothWidth: {\n      value: 1\n    },\n    defaultColor: {\n      value: /* @__PURE__ */new Color(0)\n    },\n    defaultOpacity: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform vec3 defaultColor;\", \"uniform float defaultOpacity;\", \"uniform float luminosityThreshold;\", \"uniform float smoothWidth;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"\tfloat v = dot( texel.xyz, luma );\", \"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\", \"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\", \"\tgl_FragColor = mix( outputColor, texel, alpha );\", \"}\"].join(\"\\n\")\n};\nexport { LuminosityHighPassShader };","map":{"version":3,"names":["Color","LuminosityHighPassShader","shaderID","uniforms","tDiffuse","value","luminosityThreshold","smoothWidth","defaultColor","defaultOpacity","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/LuminosityHighPassShader.js"],"sourcesContent":["import { Color } from \"three\";\nconst LuminosityHighPassShader = {\n  shaderID: \"luminosityHighPass\",\n  uniforms: {\n    tDiffuse: { value: null },\n    luminosityThreshold: { value: 1 },\n    smoothWidth: { value: 1 },\n    defaultColor: { value: /* @__PURE__ */ new Color(0) },\n    defaultOpacity: { value: 0 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform vec3 defaultColor;\",\n    \"uniform float defaultOpacity;\",\n    \"uniform float luminosityThreshold;\",\n    \"uniform float smoothWidth;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvec4 texel = texture2D( tDiffuse, vUv );\",\n    \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n    \"\tfloat v = dot( texel.xyz, luma );\",\n    \"\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\",\n    \"\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\",\n    \"\tgl_FragColor = mix( outputColor, texel, alpha );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  LuminosityHighPassShader\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,MAAMC,wBAAwB,GAAG;EAC/BC,QAAQ,EAAE,oBAAoB;EAC9BC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IACzBC,mBAAmB,EAAE;MAAED,KAAK,EAAE;IAAE,CAAC;IACjCE,WAAW,EAAE;MAAEF,KAAK,EAAE;IAAE,CAAC;IACzBG,YAAY,EAAE;MAAEH,KAAK,EAAE,eAAgB,IAAIL,KAAK,CAAC,CAAC;IAAE,CAAC;IACrDS,cAAc,EAAE;MAAEJ,KAAK,EAAE;IAAE;EAC7B,CAAC;EACDK,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,6BAA6B,EAC7B,4BAA4B,EAC5B,+BAA+B,EAC/B,oCAAoC,EACpC,4BAA4B,EAC5B,mBAAmB,EACnB,eAAe,EACf,2CAA2C,EAC3C,2CAA2C,EAC3C,oCAAoC,EACpC,+DAA+D,EAC/D,yFAAyF,EACzF,mDAAmD,EACnD,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACEV,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}