{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, DataTexture, RGBAFormat, UnsignedByteType, LinearFilter, ClampToEdgeWrapping } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nvar LUT3dlLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(LUT3dlLoader, _Loader);\n  var _super = _createSuper(LUT3dlLoader);\n  function LUT3dlLoader() {\n    _classCallCheck(this, LUT3dlLoader);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LUT3dlLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType(\"text\");\n      loader.load(url, function (text) {\n        try {\n          onLoad(_this.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          _this.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(str) {\n      str = str.replace(/^#.*?(\\n|\\r)/gm, \"\").replace(/^\\s*?(\\n|\\r)/gm, \"\").trim();\n      var lines = str.split(/[\\n\\r]+/g);\n      var gridLines = lines[0].trim().split(/\\s+/g).map(function (e) {\n        return parseFloat(e);\n      });\n      var gridStep = gridLines[1] - gridLines[0];\n      var size = gridLines.length;\n      for (var i = 1, l = gridLines.length; i < l; i++) {\n        if (gridStep !== gridLines[i] - gridLines[i - 1]) {\n          throw new Error(\"LUT3dlLoader: Inconsistent grid size not supported.\");\n        }\n      }\n      var dataArray = new Array(size * size * size * 4);\n      var index = 0;\n      var maxOutputValue = 0;\n      for (var _i = 1, _l = lines.length; _i < _l; _i++) {\n        var line = lines[_i].trim();\n        var split = line.split(/\\s/g);\n        var r = parseFloat(split[0]);\n        var g = parseFloat(split[1]);\n        var b = parseFloat(split[2]);\n        maxOutputValue = Math.max(maxOutputValue, r, g, b);\n        var bLayer = index % size;\n        var gLayer = Math.floor(index / size) % size;\n        var rLayer = Math.floor(index / (size * size)) % size;\n        var pixelIndex = bLayer * size * size + gLayer * size + rLayer;\n        dataArray[4 * pixelIndex + 0] = r;\n        dataArray[4 * pixelIndex + 1] = g;\n        dataArray[4 * pixelIndex + 2] = b;\n        dataArray[4 * pixelIndex + 3] = 1;\n        index += 1;\n      }\n      var bits = Math.ceil(Math.log2(maxOutputValue));\n      var maxBitValue = Math.pow(2, bits);\n      for (var _i2 = 0, _l2 = dataArray.length; _i2 < _l2; _i2 += 4) {\n        var _r = dataArray[_i2 + 0];\n        var _g = dataArray[_i2 + 1];\n        var _b = dataArray[_i2 + 2];\n        dataArray[_i2 + 0] = 255 * _r / maxBitValue;\n        dataArray[_i2 + 1] = 255 * _g / maxBitValue;\n        dataArray[_i2 + 2] = 255 * _b / maxBitValue;\n      }\n      var data = new Uint8Array(dataArray);\n      var texture = new DataTexture();\n      texture.image.data = data;\n      texture.image.width = size;\n      texture.image.height = size * size;\n      texture.format = RGBAFormat;\n      texture.type = UnsignedByteType;\n      texture.magFilter = LinearFilter;\n      texture.minFilter = LinearFilter;\n      texture.wrapS = ClampToEdgeWrapping;\n      texture.wrapT = ClampToEdgeWrapping;\n      texture.generateMipmaps = false;\n      texture.needsUpdate = true;\n      var texture3D = new Data3DTexture();\n      texture3D.image.data = data;\n      texture3D.image.width = size;\n      texture3D.image.height = size;\n      texture3D.image.depth = size;\n      texture3D.format = RGBAFormat;\n      texture3D.type = UnsignedByteType;\n      texture3D.magFilter = LinearFilter;\n      texture3D.minFilter = LinearFilter;\n      texture3D.wrapS = ClampToEdgeWrapping;\n      texture3D.wrapT = ClampToEdgeWrapping;\n      texture3D.wrapR = ClampToEdgeWrapping;\n      texture3D.generateMipmaps = false;\n      texture3D.needsUpdate = true;\n      return {\n        size: size,\n        texture: texture,\n        texture3D: texture3D\n      };\n    }\n  }]);\n  return LUT3dlLoader;\n}(Loader);\nexport { LUT3dlLoader };","map":{"version":3,"names":["Loader","FileLoader","DataTexture","RGBAFormat","UnsignedByteType","LinearFilter","ClampToEdgeWrapping","Data3DTexture","LUT3dlLoader","_Loader","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","load","url","onLoad","onProgress","onError","_this","loader","manager","setPath","path","setResponseType","text","parse","e","console","error","itemError","str","replace","trim","lines","split","gridLines","map","parseFloat","gridStep","size","length","i","l","Error","dataArray","Array","index","maxOutputValue","line","r","g","b","Math","max","bLayer","gLayer","floor","rLayer","pixelIndex","bits","ceil","log2","maxBitValue","pow","data","Uint8Array","texture","image","width","height","format","type","magFilter","minFilter","wrapS","wrapT","generateMipmaps","needsUpdate","texture3D","depth","wrapR"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/LUT3dlLoader.js"],"sourcesContent":["import { Loader, FileLoader, DataTexture, RGBAFormat, UnsignedByteType, LinearFilter, ClampToEdgeWrapping } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nclass LUT3dlLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"text\");\n    loader.load(\n      url,\n      (text) => {\n        try {\n          onLoad(this.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          this.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(str) {\n    str = str.replace(/^#.*?(\\n|\\r)/gm, \"\").replace(/^\\s*?(\\n|\\r)/gm, \"\").trim();\n    const lines = str.split(/[\\n\\r]+/g);\n    const gridLines = lines[0].trim().split(/\\s+/g).map((e) => parseFloat(e));\n    const gridStep = gridLines[1] - gridLines[0];\n    const size = gridLines.length;\n    for (let i = 1, l = gridLines.length; i < l; i++) {\n      if (gridStep !== gridLines[i] - gridLines[i - 1]) {\n        throw new Error(\"LUT3dlLoader: Inconsistent grid size not supported.\");\n      }\n    }\n    const dataArray = new Array(size * size * size * 4);\n    let index = 0;\n    let maxOutputValue = 0;\n    for (let i = 1, l = lines.length; i < l; i++) {\n      const line = lines[i].trim();\n      const split = line.split(/\\s/g);\n      const r = parseFloat(split[0]);\n      const g = parseFloat(split[1]);\n      const b = parseFloat(split[2]);\n      maxOutputValue = Math.max(maxOutputValue, r, g, b);\n      const bLayer = index % size;\n      const gLayer = Math.floor(index / size) % size;\n      const rLayer = Math.floor(index / (size * size)) % size;\n      const pixelIndex = bLayer * size * size + gLayer * size + rLayer;\n      dataArray[4 * pixelIndex + 0] = r;\n      dataArray[4 * pixelIndex + 1] = g;\n      dataArray[4 * pixelIndex + 2] = b;\n      dataArray[4 * pixelIndex + 3] = 1;\n      index += 1;\n    }\n    const bits = Math.ceil(Math.log2(maxOutputValue));\n    const maxBitValue = Math.pow(2, bits);\n    for (let i = 0, l = dataArray.length; i < l; i += 4) {\n      const r = dataArray[i + 0];\n      const g = dataArray[i + 1];\n      const b = dataArray[i + 2];\n      dataArray[i + 0] = 255 * r / maxBitValue;\n      dataArray[i + 1] = 255 * g / maxBitValue;\n      dataArray[i + 2] = 255 * b / maxBitValue;\n    }\n    const data = new Uint8Array(dataArray);\n    const texture = new DataTexture();\n    texture.image.data = data;\n    texture.image.width = size;\n    texture.image.height = size * size;\n    texture.format = RGBAFormat;\n    texture.type = UnsignedByteType;\n    texture.magFilter = LinearFilter;\n    texture.minFilter = LinearFilter;\n    texture.wrapS = ClampToEdgeWrapping;\n    texture.wrapT = ClampToEdgeWrapping;\n    texture.generateMipmaps = false;\n    texture.needsUpdate = true;\n    const texture3D = new Data3DTexture();\n    texture3D.image.data = data;\n    texture3D.image.width = size;\n    texture3D.image.height = size;\n    texture3D.image.depth = size;\n    texture3D.format = RGBAFormat;\n    texture3D.type = UnsignedByteType;\n    texture3D.magFilter = LinearFilter;\n    texture3D.minFilter = LinearFilter;\n    texture3D.wrapS = ClampToEdgeWrapping;\n    texture3D.wrapT = ClampToEdgeWrapping;\n    texture3D.wrapR = ClampToEdgeWrapping;\n    texture3D.generateMipmaps = false;\n    texture3D.needsUpdate = true;\n    return {\n      size,\n      texture,\n      texture3D\n    };\n  }\n}\nexport {\n  LUT3dlLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}