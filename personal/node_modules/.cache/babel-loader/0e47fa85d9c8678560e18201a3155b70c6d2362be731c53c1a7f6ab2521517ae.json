{"ast":null,"code":"import { Loader, FileLoader } from \"three\";\nimport { parse } from \"opentype.js\";\nclass TTFLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.reversed = false;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(arraybuffer) {\n    function convert(font, reversed) {\n      const round = Math.round;\n      const glyphs = {};\n      const scale = 1e5 / ((font.unitsPerEm || 2048) * 72);\n      const glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      const unicodes = Object.keys(glyphIndexMap);\n      for (let i = 0; i < unicodes.length; i++) {\n        const unicode = unicodes[i];\n        const glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n        if (unicode !== void 0) {\n          const token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: \"\"\n          };\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === \"c\") {\n              command.type = \"b\";\n            }\n            token.o += command.type.toLowerCase() + \" \";\n            if (command.x !== void 0 && command.y !== void 0) {\n              token.o += round(command.x * scale) + \" \" + round(command.y * scale) + \" \";\n            }\n            if (command.x1 !== void 0 && command.y1 !== void 0) {\n              token.o += round(command.x1 * scale) + \" \" + round(command.y1 * scale) + \" \";\n            }\n            if (command.x2 !== void 0 && command.y2 !== void 0) {\n              token.o += round(command.x2 * scale) + \" \" + round(command.y2 * scale) + \" \";\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n      return {\n        glyphs,\n        familyName: font.getEnglishName(\"fullName\"),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1e3,\n        original_font_information: font.tables.name\n      };\n    }\n    function reverseCommands(commands) {\n      const paths = [];\n      let path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === \"m\") {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== \"z\") {\n          path.push(c);\n        }\n      });\n      const reversed = [];\n      paths.forEach(function (p) {\n        const result = {\n          type: \"m\",\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n        for (let i = p.length - 1; i > 0; i--) {\n          const command = p[i];\n          const result2 = {\n            type: command.type\n          };\n          if (command.x2 !== void 0 && command.y2 !== void 0) {\n            result2.x1 = command.x2;\n            result2.y1 = command.y2;\n            result2.x2 = command.x1;\n            result2.y2 = command.y1;\n          } else if (command.x1 !== void 0 && command.y1 !== void 0) {\n            result2.x1 = command.x1;\n            result2.y1 = command.y1;\n          }\n          result2.x = p[i - 1].x;\n          result2.y = p[i - 1].y;\n          reversed.push(result2);\n        }\n      });\n      return reversed;\n    }\n    return convert(parse(arraybuffer), this.reversed);\n  }\n}\nexport { TTFLoader };","map":{"version":3,"names":["Loader","FileLoader","parse","TTFLoader","constructor","manager","reversed","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","e","console","error","itemError","arraybuffer","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","Object","keys","i","length","unicode","glyph","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","forEach","command","type","toLowerCase","x","y","x1","y1","x2","y2","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","paths","c","push","p","result","result2"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/TTFLoader.js"],"sourcesContent":["import { Loader, FileLoader } from \"three\";\nimport { parse } from \"opentype.js\";\nclass TTFLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.reversed = false;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function(buffer) {\n        try {\n          onLoad(parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(arraybuffer) {\n    function convert(font, reversed) {\n      const round = Math.round;\n      const glyphs = {};\n      const scale = 1e5 / ((font.unitsPerEm || 2048) * 72);\n      const glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      const unicodes = Object.keys(glyphIndexMap);\n      for (let i = 0; i < unicodes.length; i++) {\n        const unicode = unicodes[i];\n        const glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n        if (unicode !== void 0) {\n          const token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: \"\"\n          };\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n          glyph.path.commands.forEach(function(command) {\n            if (command.type.toLowerCase() === \"c\") {\n              command.type = \"b\";\n            }\n            token.o += command.type.toLowerCase() + \" \";\n            if (command.x !== void 0 && command.y !== void 0) {\n              token.o += round(command.x * scale) + \" \" + round(command.y * scale) + \" \";\n            }\n            if (command.x1 !== void 0 && command.y1 !== void 0) {\n              token.o += round(command.x1 * scale) + \" \" + round(command.y1 * scale) + \" \";\n            }\n            if (command.x2 !== void 0 && command.y2 !== void 0) {\n              token.o += round(command.x2 * scale) + \" \" + round(command.y2 * scale) + \" \";\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n      return {\n        glyphs,\n        familyName: font.getEnglishName(\"fullName\"),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1e3,\n        original_font_information: font.tables.name\n      };\n    }\n    function reverseCommands(commands) {\n      const paths = [];\n      let path;\n      commands.forEach(function(c) {\n        if (c.type.toLowerCase() === \"m\") {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== \"z\") {\n          path.push(c);\n        }\n      });\n      const reversed = [];\n      paths.forEach(function(p) {\n        const result = {\n          type: \"m\",\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n        for (let i = p.length - 1; i > 0; i--) {\n          const command = p[i];\n          const result2 = { type: command.type };\n          if (command.x2 !== void 0 && command.y2 !== void 0) {\n            result2.x1 = command.x2;\n            result2.y1 = command.y2;\n            result2.x2 = command.x1;\n            result2.y2 = command.y1;\n          } else if (command.x1 !== void 0 && command.y1 !== void 0) {\n            result2.x1 = command.x1;\n            result2.y1 = command.y1;\n          }\n          result2.x = p[i - 1].x;\n          result2.y = p[i - 1].y;\n          reversed.push(result2);\n        }\n      });\n      return reversed;\n    }\n    return convert(parse(arraybuffer), this.reversed);\n  }\n}\nexport {\n  TTFLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}