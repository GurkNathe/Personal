{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Sphere, Box3 } from \"three\";\nimport { XRHandMeshModel } from \"./XRHandMeshModel.js\";\nvar TOUCH_RADIUS = 0.01;\nvar POINTING_JOINT = \"index-finger-tip\";\nvar OculusHandModel = /*#__PURE__*/function (_Object3D) {\n  _inherits(OculusHandModel, _Object3D);\n  var _super = _createSuper(OculusHandModel);\n  function OculusHandModel(controller, leftModelPath, rightModelPath) {\n    var _this;\n    _classCallCheck(this, OculusHandModel);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"controller\");\n    __publicField(_assertThisInitialized(_this), \"motionController\");\n    __publicField(_assertThisInitialized(_this), \"envMap\");\n    __publicField(_assertThisInitialized(_this), \"mesh\");\n    __publicField(_assertThisInitialized(_this), \"xrInputSource\");\n    _this.controller = controller;\n    _this.motionController = null;\n    _this.envMap = null;\n    _this.mesh = null;\n    _this.xrInputSource = null;\n    controller.addEventListener(\"connected\", function (event) {\n      var xrInputSource = event.data;\n      if (xrInputSource.hand && !_this.motionController) {\n        _this.xrInputSource = xrInputSource;\n        _this.motionController = new XRHandMeshModel(_assertThisInitialized(_this), controller, void 0, xrInputSource.handedness, xrInputSource.handedness === \"left\" ? leftModelPath : rightModelPath);\n      }\n    });\n    controller.addEventListener(\"disconnected\", function () {\n      _this.dispose();\n    });\n    return _this;\n  }\n  _createClass(OculusHandModel, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(OculusHandModel.prototype), \"updateMatrixWorld\", this).call(this, force);\n      if (this.motionController) {\n        this.motionController.updateMesh();\n      }\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var indexFingerTip = this.controller.joints[POINTING_JOINT];\n      if (indexFingerTip) {\n        return indexFingerTip.position;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"intersectBoxObject\",\n    value: function intersectBoxObject(boxObject) {\n      var pointerPosition = this.getPointerPosition();\n      if (pointerPosition) {\n        var indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n        var box = new Box3().setFromObject(boxObject);\n        return indexSphere.intersectsBox(box);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(button) {\n      if (this.intersectBoxObject(button)) {\n        button.onPress();\n      } else {\n        button.onClear();\n      }\n      if (button.isPressed()) {\n        button.whilePressed();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.clear();\n      this.motionController = null;\n    }\n  }]);\n  return OculusHandModel;\n}(Object3D);\nexport { OculusHandModel };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Object3D","Sphere","Box3","XRHandMeshModel","TOUCH_RADIUS","POINTING_JOINT","OculusHandModel","_Object3D","_inherits","_super","_createSuper","controller","leftModelPath","rightModelPath","_this","_classCallCheck","call","_assertThisInitialized","motionController","envMap","mesh","xrInputSource","addEventListener","event","data","hand","handedness","dispose","_createClass","updateMatrixWorld","force","_get","_getPrototypeOf","prototype","updateMesh","getPointerPosition","indexFingerTip","joints","position","intersectBoxObject","boxObject","pointerPosition","indexSphere","box","setFromObject","intersectsBox","checkButton","button","onPress","onClear","isPressed","whilePressed","clear"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/webxr/OculusHandModel.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Object3D, Sphere, Box3 } from \"three\";\nimport { XRHandMeshModel } from \"./XRHandMeshModel.js\";\nconst TOUCH_RADIUS = 0.01;\nconst POINTING_JOINT = \"index-finger-tip\";\nclass OculusHandModel extends Object3D {\n  constructor(controller, leftModelPath, rightModelPath) {\n    super();\n    __publicField(this, \"controller\");\n    __publicField(this, \"motionController\");\n    __publicField(this, \"envMap\");\n    __publicField(this, \"mesh\");\n    __publicField(this, \"xrInputSource\");\n    this.controller = controller;\n    this.motionController = null;\n    this.envMap = null;\n    this.mesh = null;\n    this.xrInputSource = null;\n    controller.addEventListener(\"connected\", (event) => {\n      const xrInputSource = event.data;\n      if (xrInputSource.hand && !this.motionController) {\n        this.xrInputSource = xrInputSource;\n        this.motionController = new XRHandMeshModel(\n          this,\n          controller,\n          void 0,\n          xrInputSource.handedness,\n          xrInputSource.handedness === \"left\" ? leftModelPath : rightModelPath\n        );\n      }\n    });\n    controller.addEventListener(\"disconnected\", () => {\n      this.dispose();\n    });\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.motionController) {\n      this.motionController.updateMesh();\n    }\n  }\n  getPointerPosition() {\n    const indexFingerTip = this.controller.joints[POINTING_JOINT];\n    if (indexFingerTip) {\n      return indexFingerTip.position;\n    } else {\n      return null;\n    }\n  }\n  intersectBoxObject(boxObject) {\n    const pointerPosition = this.getPointerPosition();\n    if (pointerPosition) {\n      const indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n      const box = new Box3().setFromObject(boxObject);\n      return indexSphere.intersectsBox(box);\n    } else {\n      return false;\n    }\n  }\n  checkButton(button) {\n    if (this.intersectBoxObject(button)) {\n      button.onPress();\n    } else {\n      button.onClear();\n    }\n    if (button.isPressed()) {\n      button.whilePressed();\n    }\n  }\n  dispose() {\n    this.clear();\n    this.motionController = null;\n  }\n}\nexport {\n  OculusHandModel\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}