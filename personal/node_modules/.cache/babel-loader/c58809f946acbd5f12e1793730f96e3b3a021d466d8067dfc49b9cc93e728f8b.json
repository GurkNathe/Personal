{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Object3D, MeshLambertMaterial, Mesh, TextureLoader, UVMapping, Box3, AnimationMixer } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nvar MD2Character = /*#__PURE__*/function () {\n  function MD2Character() {\n    _classCallCheck(this, MD2Character);\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n    this.onLoadComplete = function () {};\n    this.loadCounter = 0;\n  }\n  _createClass(MD2Character, [{\n    key: \"loadParts\",\n    value: function loadParts(config) {\n      var scope = this;\n      function createPart(geometry, skinMap) {\n        var materialWireframe = new MeshLambertMaterial({\n          color: 16755200,\n          wireframe: true,\n          morphTargets: true,\n          morphNormals: true\n        });\n        var materialTexture = new MeshLambertMaterial({\n          color: 16777215,\n          wireframe: false,\n          map: skinMap,\n          morphTargets: true,\n          morphNormals: true\n        });\n        var mesh = new Mesh(geometry, materialTexture);\n        mesh.rotation.y = -Math.PI / 2;\n        mesh.castShadow = true;\n        mesh.receiveShadow = true;\n        mesh.materialTexture = materialTexture;\n        mesh.materialWireframe = materialWireframe;\n        return mesh;\n      }\n      function loadTextures(baseUrl, textureUrls) {\n        var textureLoader = new TextureLoader();\n        var textures = [];\n        for (var i = 0; i < textureUrls.length; i++) {\n          textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n          textures[i].mapping = UVMapping;\n          textures[i].name = textureUrls[i];\n          if (\"colorSpace\" in textures[i]) textures[i].colorSpace = \"srgb\";else textures[i].encoding = 3001;\n        }\n        return textures;\n      }\n      function checkLoadingComplete() {\n        scope.loadCounter -= 1;\n        if (scope.loadCounter === 0) scope.onLoadComplete();\n      }\n      this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n      var weaponsTextures = [];\n      for (var i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1];\n      this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n      this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n      var loader = new MD2Loader();\n      loader.load(config.baseUrl + config.body, function (geo) {\n        var boundingBox = new Box3();\n        boundingBox.setFromBufferAttribute(geo.attributes.position);\n        scope.root.position.y = -scope.scale * boundingBox.min.y;\n        var mesh = createPart(geo, scope.skinsBody[0]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        scope.root.add(mesh);\n        scope.meshBody = mesh;\n        scope.meshBody.clipOffset = 0;\n        scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n        scope.mixer = new AnimationMixer(mesh);\n        checkLoadingComplete();\n      });\n      var generateCallback = function generateCallback(index, name) {\n        return function (geo) {\n          var mesh = createPart(geo, scope.skinsWeapon[index]);\n          mesh.scale.set(scope.scale, scope.scale, scope.scale);\n          mesh.visible = false;\n          mesh.name = name;\n          scope.root.add(mesh);\n          scope.weapons[index] = mesh;\n          scope.meshWeapon = mesh;\n          checkLoadingComplete();\n        };\n      };\n      for (var _i = 0; _i < config.weapons.length; _i++) {\n        loader.load(config.baseUrl + config.weapons[_i][0], generateCallback(_i, config.weapons[_i][0]));\n      }\n    }\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(rate) {\n      if (rate !== 0) {\n        this.mixer.timeScale = 1 / rate;\n      } else {\n        this.mixer.timeScale = 0;\n      }\n    }\n  }, {\n    key: \"setWireframe\",\n    value: function setWireframe(wireframeEnabled) {\n      if (wireframeEnabled) {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n      } else {\n        if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n        if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n      }\n    }\n  }, {\n    key: \"setSkin\",\n    value: function setSkin(index) {\n      if (this.meshBody && this.meshBody.material.wireframe === false) {\n        this.meshBody.material.map = this.skinsBody[index];\n      }\n    }\n  }, {\n    key: \"setWeapon\",\n    value: function setWeapon(index) {\n      for (var i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\n      var activeWeapon = this.weapons[index];\n      if (activeWeapon) {\n        activeWeapon.visible = true;\n        this.meshWeapon = activeWeapon;\n        this.syncWeaponAnimation();\n      }\n    }\n  }, {\n    key: \"setAnimation\",\n    value: function setAnimation(clipName) {\n      if (this.meshBody) {\n        if (this.meshBody.activeAction) {\n          this.meshBody.activeAction.stop();\n          this.meshBody.activeAction = null;\n        }\n        var action = this.mixer.clipAction(clipName, this.meshBody);\n        if (action) {\n          this.meshBody.activeAction = action.play();\n        }\n      }\n      this.activeClipName = clipName;\n      this.syncWeaponAnimation();\n    }\n  }, {\n    key: \"syncWeaponAnimation\",\n    value: function syncWeaponAnimation() {\n      var clipName = this.activeClipName;\n      if (this.meshWeapon) {\n        if (this.meshWeapon.activeAction) {\n          this.meshWeapon.activeAction.stop();\n          this.meshWeapon.activeAction = null;\n        }\n        var action = this.mixer.clipAction(clipName, this.meshWeapon);\n        if (action) {\n          this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n        }\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.mixer) this.mixer.update(delta);\n    }\n  }]);\n  return MD2Character;\n}();\nexport { MD2Character };","map":{"version":3,"names":["Object3D","MeshLambertMaterial","Mesh","TextureLoader","UVMapping","Box3","AnimationMixer","MD2Loader","MD2Character","_classCallCheck","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","onLoadComplete","loadCounter","_createClass","key","value","loadParts","config","scope","createPart","geometry","skinMap","materialWireframe","color","wireframe","morphTargets","morphNormals","materialTexture","map","mesh","rotation","y","Math","PI","castShadow","receiveShadow","loadTextures","baseUrl","textureUrls","textureLoader","textures","i","length","load","checkLoadingComplete","mapping","name","colorSpace","encoding","skins","weaponsTextures","loader","body","geo","boundingBox","setFromBufferAttribute","attributes","position","min","set","add","clipOffset","activeAnimationClipName","animations","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","setSkin","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/misc/MD2Character.js"],"sourcesContent":["import { Object3D, MeshLambertMaterial, Mesh, TextureLoader, UVMapping, Box3, AnimationMixer } from \"three\";\nimport { MD2Loader } from \"../loaders/MD2Loader.js\";\nclass MD2Character {\n  constructor() {\n    this.scale = 1;\n    this.animationFPS = 6;\n    this.root = new Object3D();\n    this.meshBody = null;\n    this.meshWeapon = null;\n    this.skinsBody = [];\n    this.skinsWeapon = [];\n    this.weapons = [];\n    this.activeAnimation = null;\n    this.mixer = null;\n    this.onLoadComplete = function() {\n    };\n    this.loadCounter = 0;\n  }\n  loadParts(config) {\n    const scope = this;\n    function createPart(geometry, skinMap) {\n      const materialWireframe = new MeshLambertMaterial({\n        color: 16755200,\n        wireframe: true,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const materialTexture = new MeshLambertMaterial({\n        color: 16777215,\n        wireframe: false,\n        map: skinMap,\n        morphTargets: true,\n        morphNormals: true\n      });\n      const mesh = new Mesh(geometry, materialTexture);\n      mesh.rotation.y = -Math.PI / 2;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      mesh.materialTexture = materialTexture;\n      mesh.materialWireframe = materialWireframe;\n      return mesh;\n    }\n    function loadTextures(baseUrl, textureUrls) {\n      const textureLoader = new TextureLoader();\n      const textures = [];\n      for (let i = 0; i < textureUrls.length; i++) {\n        textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n        textures[i].mapping = UVMapping;\n        textures[i].name = textureUrls[i];\n        if (\"colorSpace\" in textures[i])\n          textures[i].colorSpace = \"srgb\";\n        else\n          textures[i].encoding = 3001;\n      }\n      return textures;\n    }\n    function checkLoadingComplete() {\n      scope.loadCounter -= 1;\n      if (scope.loadCounter === 0)\n        scope.onLoadComplete();\n    }\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    const weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++)\n      weaponsTextures[i] = config.weapons[i][1];\n    this.skinsBody = loadTextures(config.baseUrl + \"skins/\", config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + \"skins/\", weaponsTextures);\n    const loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function(geo) {\n      const boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      const mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    });\n    const generateCallback = function(index, name) {\n      return function(geo) {\n        const mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  }\n  setPlaybackRate(rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  }\n  setWireframe(wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody)\n        this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon)\n        this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  }\n  setSkin(index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  }\n  setWeapon(index) {\n    for (let i = 0; i < this.weapons.length; i++)\n      this.weapons[i].visible = false;\n    const activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      this.syncWeaponAnimation();\n    }\n  }\n  setAnimation(clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshBody);\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n    this.activeClipName = clipName;\n    this.syncWeaponAnimation();\n  }\n  syncWeaponAnimation() {\n    const clipName = this.activeClipName;\n    if (this.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n      const action = this.mixer.clipAction(clipName, this.meshWeapon);\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  }\n  update(delta) {\n    if (this.mixer)\n      this.mixer.update(delta);\n  }\n}\nexport {\n  MD2Character\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}