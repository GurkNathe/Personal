{"ast":null,"code":"import _assertThisInitialized from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { WebGLCubeRenderTarget, Group, LightProbe, DirectionalLight } from \"three\";\nvar SessionLightProbe = /*#__PURE__*/function () {\n  function SessionLightProbe(xrLight, renderer, lightProbe, environmentEstimation, estimationStartCallback) {\n    var _this = this;\n    _classCallCheck(this, SessionLightProbe);\n    this.xrLight = xrLight;\n    this.renderer = renderer;\n    this.lightProbe = lightProbe;\n    this.xrWebGLBinding = null;\n    this.estimationStartCallback = estimationStartCallback;\n    this.frameCallback = this.onXRFrame.bind(this);\n    var session = renderer.xr.getSession();\n    if (environmentEstimation && \"XRWebGLBinding\" in window) {\n      var cubeRenderTarget = new WebGLCubeRenderTarget(16);\n      xrLight.environment = cubeRenderTarget.texture;\n      var gl = renderer.getContext();\n      switch (session.preferredReflectionFormat) {\n        case \"srgba8\":\n          gl.getExtension(\"EXT_sRGB\");\n          break;\n        case \"rgba16f\":\n          gl.getExtension(\"OES_texture_half_float\");\n          break;\n      }\n      this.xrWebGLBinding = new XRWebGLBinding(session, gl);\n      this.lightProbe.addEventListener(\"reflectionchange\", function () {\n        _this.updateReflection();\n      });\n    }\n    session.requestAnimationFrame(this.frameCallback);\n  }\n  _createClass(SessionLightProbe, [{\n    key: \"updateReflection\",\n    value: function updateReflection() {\n      var textureProperties = this.renderer.properties.get(this.xrLight.environment);\n      if (textureProperties) {\n        var cubeMap = this.xrWebGLBinding.getReflectionCubeMap(this.lightProbe);\n        if (cubeMap) {\n          textureProperties.__webglTexture = cubeMap;\n          this.xrLight.environment.needsPMREMUpdate = true;\n        }\n      }\n    }\n  }, {\n    key: \"onXRFrame\",\n    value: function onXRFrame(time, xrFrame) {\n      if (!this.xrLight) {\n        return;\n      }\n      var session = xrFrame.session;\n      session.requestAnimationFrame(this.frameCallback);\n      var lightEstimate = xrFrame.getLightEstimate(this.lightProbe);\n      if (lightEstimate) {\n        this.xrLight.lightProbe.sh.fromArray(lightEstimate.sphericalHarmonicsCoefficients);\n        this.xrLight.lightProbe.intensity = 1;\n        var intensityScalar = Math.max(1, Math.max(lightEstimate.primaryLightIntensity.x, Math.max(lightEstimate.primaryLightIntensity.y, lightEstimate.primaryLightIntensity.z)));\n        this.xrLight.directionalLight.color.setRGB(lightEstimate.primaryLightIntensity.x / intensityScalar, lightEstimate.primaryLightIntensity.y / intensityScalar, lightEstimate.primaryLightIntensity.z / intensityScalar);\n        this.xrLight.directionalLight.intensity = intensityScalar;\n        this.xrLight.directionalLight.position.copy(lightEstimate.primaryLightDirection);\n        if (this.estimationStartCallback) {\n          this.estimationStartCallback();\n          this.estimationStartCallback = null;\n        }\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.xrLight = null;\n      this.renderer = null;\n      this.lightProbe = null;\n      this.xrWebGLBinding = null;\n    }\n  }]);\n  return SessionLightProbe;\n}();\nvar XREstimatedLight = /*#__PURE__*/function (_Group) {\n  _inherits(XREstimatedLight, _Group);\n  var _super = _createSuper(XREstimatedLight);\n  function XREstimatedLight(renderer) {\n    var _this2;\n    var environmentEstimation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    _classCallCheck(this, XREstimatedLight);\n    _this2 = _super.call(this);\n    _this2.lightProbe = new LightProbe();\n    _this2.lightProbe.intensity = 0;\n    _this2.add(_this2.lightProbe);\n    _this2.directionalLight = new DirectionalLight();\n    _this2.directionalLight.intensity = 0;\n    _this2.add(_this2.directionalLight);\n    _this2.environment = null;\n    var sessionLightProbe = null;\n    var estimationStarted = false;\n    renderer.xr.addEventListener(\"sessionstart\", function () {\n      var session = renderer.xr.getSession();\n      if (\"requestLightProbe\" in session) {\n        session.requestLightProbe({\n          reflectionFormat: session.preferredReflectionFormat\n        }).then(function (probe) {\n          sessionLightProbe = new SessionLightProbe(_assertThisInitialized(_this2), renderer, probe, environmentEstimation, function () {\n            estimationStarted = true;\n            _this2.dispatchEvent({\n              type: \"estimationstart\"\n            });\n          });\n        });\n      }\n    });\n    renderer.xr.addEventListener(\"sessionend\", function () {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      if (estimationStarted) {\n        _this2.dispatchEvent({\n          type: \"estimationend\"\n        });\n      }\n    });\n    _this2.dispose = function () {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      _this2.remove(_this2.lightProbe);\n      _this2.lightProbe = null;\n      _this2.remove(_this2.directionalLight);\n      _this2.directionalLight = null;\n      _this2.environment = null;\n    };\n    return _this2;\n  }\n  return _createClass(XREstimatedLight);\n}(Group);\nexport { XREstimatedLight };","map":{"version":3,"names":["WebGLCubeRenderTarget","Group","LightProbe","DirectionalLight","SessionLightProbe","xrLight","renderer","lightProbe","environmentEstimation","estimationStartCallback","_this","_classCallCheck","xrWebGLBinding","frameCallback","onXRFrame","bind","session","xr","getSession","window","cubeRenderTarget","environment","texture","gl","getContext","preferredReflectionFormat","getExtension","XRWebGLBinding","addEventListener","updateReflection","requestAnimationFrame","_createClass","key","value","textureProperties","properties","get","cubeMap","getReflectionCubeMap","__webglTexture","needsPMREMUpdate","time","xrFrame","lightEstimate","getLightEstimate","sh","fromArray","sphericalHarmonicsCoefficients","intensity","intensityScalar","Math","max","primaryLightIntensity","x","y","z","directionalLight","color","setRGB","position","copy","primaryLightDirection","dispose","XREstimatedLight","_Group","_inherits","_super","_createSuper","_this2","arguments","length","undefined","call","add","sessionLightProbe","estimationStarted","requestLightProbe","reflectionFormat","then","probe","_assertThisInitialized","dispatchEvent","type","remove"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/webxr/XREstimatedLight.js"],"sourcesContent":["import { WebGLCubeRenderTarget, Group, LightProbe, DirectionalLight } from \"three\";\nclass SessionLightProbe {\n  constructor(xrLight, renderer, lightProbe, environmentEstimation, estimationStartCallback) {\n    this.xrLight = xrLight;\n    this.renderer = renderer;\n    this.lightProbe = lightProbe;\n    this.xrWebGLBinding = null;\n    this.estimationStartCallback = estimationStartCallback;\n    this.frameCallback = this.onXRFrame.bind(this);\n    const session = renderer.xr.getSession();\n    if (environmentEstimation && \"XRWebGLBinding\" in window) {\n      const cubeRenderTarget = new WebGLCubeRenderTarget(16);\n      xrLight.environment = cubeRenderTarget.texture;\n      const gl = renderer.getContext();\n      switch (session.preferredReflectionFormat) {\n        case \"srgba8\":\n          gl.getExtension(\"EXT_sRGB\");\n          break;\n        case \"rgba16f\":\n          gl.getExtension(\"OES_texture_half_float\");\n          break;\n      }\n      this.xrWebGLBinding = new XRWebGLBinding(session, gl);\n      this.lightProbe.addEventListener(\"reflectionchange\", () => {\n        this.updateReflection();\n      });\n    }\n    session.requestAnimationFrame(this.frameCallback);\n  }\n  updateReflection() {\n    const textureProperties = this.renderer.properties.get(this.xrLight.environment);\n    if (textureProperties) {\n      const cubeMap = this.xrWebGLBinding.getReflectionCubeMap(this.lightProbe);\n      if (cubeMap) {\n        textureProperties.__webglTexture = cubeMap;\n        this.xrLight.environment.needsPMREMUpdate = true;\n      }\n    }\n  }\n  onXRFrame(time, xrFrame) {\n    if (!this.xrLight) {\n      return;\n    }\n    const session = xrFrame.session;\n    session.requestAnimationFrame(this.frameCallback);\n    const lightEstimate = xrFrame.getLightEstimate(this.lightProbe);\n    if (lightEstimate) {\n      this.xrLight.lightProbe.sh.fromArray(lightEstimate.sphericalHarmonicsCoefficients);\n      this.xrLight.lightProbe.intensity = 1;\n      const intensityScalar = Math.max(\n        1,\n        Math.max(\n          lightEstimate.primaryLightIntensity.x,\n          Math.max(lightEstimate.primaryLightIntensity.y, lightEstimate.primaryLightIntensity.z)\n        )\n      );\n      this.xrLight.directionalLight.color.setRGB(\n        lightEstimate.primaryLightIntensity.x / intensityScalar,\n        lightEstimate.primaryLightIntensity.y / intensityScalar,\n        lightEstimate.primaryLightIntensity.z / intensityScalar\n      );\n      this.xrLight.directionalLight.intensity = intensityScalar;\n      this.xrLight.directionalLight.position.copy(lightEstimate.primaryLightDirection);\n      if (this.estimationStartCallback) {\n        this.estimationStartCallback();\n        this.estimationStartCallback = null;\n      }\n    }\n  }\n  dispose() {\n    this.xrLight = null;\n    this.renderer = null;\n    this.lightProbe = null;\n    this.xrWebGLBinding = null;\n  }\n}\nclass XREstimatedLight extends Group {\n  constructor(renderer, environmentEstimation = true) {\n    super();\n    this.lightProbe = new LightProbe();\n    this.lightProbe.intensity = 0;\n    this.add(this.lightProbe);\n    this.directionalLight = new DirectionalLight();\n    this.directionalLight.intensity = 0;\n    this.add(this.directionalLight);\n    this.environment = null;\n    let sessionLightProbe = null;\n    let estimationStarted = false;\n    renderer.xr.addEventListener(\"sessionstart\", () => {\n      const session = renderer.xr.getSession();\n      if (\"requestLightProbe\" in session) {\n        session.requestLightProbe({\n          reflectionFormat: session.preferredReflectionFormat\n        }).then((probe) => {\n          sessionLightProbe = new SessionLightProbe(this, renderer, probe, environmentEstimation, () => {\n            estimationStarted = true;\n            this.dispatchEvent({ type: \"estimationstart\" });\n          });\n        });\n      }\n    });\n    renderer.xr.addEventListener(\"sessionend\", () => {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      if (estimationStarted) {\n        this.dispatchEvent({ type: \"estimationend\" });\n      }\n    });\n    this.dispose = () => {\n      if (sessionLightProbe) {\n        sessionLightProbe.dispose();\n        sessionLightProbe = null;\n      }\n      this.remove(this.lightProbe);\n      this.lightProbe = null;\n      this.remove(this.directionalLight);\n      this.directionalLight = null;\n      this.environment = null;\n    };\n  }\n}\nexport {\n  XREstimatedLight\n};\n"],"mappings":";;;;;AAAA,SAASA,qBAAqB,EAAEC,KAAK,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,OAAO;AAAC,IAC7EC,iBAAiB;EACrB,SAAAA,kBAAYC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,qBAAqB,EAAEC,uBAAuB,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,iBAAA;IACzF,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACK,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACH,uBAAuB,GAAGA,uBAAuB;IACtD,IAAI,CAACI,aAAa,GAAG,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAMC,OAAO,GAAGV,QAAQ,CAACW,EAAE,CAACC,UAAU,CAAC,CAAC;IACxC,IAAIV,qBAAqB,IAAI,gBAAgB,IAAIW,MAAM,EAAE;MACvD,IAAMC,gBAAgB,GAAG,IAAIpB,qBAAqB,CAAC,EAAE,CAAC;MACtDK,OAAO,CAACgB,WAAW,GAAGD,gBAAgB,CAACE,OAAO;MAC9C,IAAMC,EAAE,GAAGjB,QAAQ,CAACkB,UAAU,CAAC,CAAC;MAChC,QAAQR,OAAO,CAACS,yBAAyB;QACvC,KAAK,QAAQ;UACXF,EAAE,CAACG,YAAY,CAAC,UAAU,CAAC;UAC3B;QACF,KAAK,SAAS;UACZH,EAAE,CAACG,YAAY,CAAC,wBAAwB,CAAC;UACzC;MACJ;MACA,IAAI,CAACd,cAAc,GAAG,IAAIe,cAAc,CAACX,OAAO,EAAEO,EAAE,CAAC;MACrD,IAAI,CAAChB,UAAU,CAACqB,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;QACzDlB,KAAI,CAACmB,gBAAgB,CAAC,CAAC;MACzB,CAAC,CAAC;IACJ;IACAb,OAAO,CAACc,qBAAqB,CAAC,IAAI,CAACjB,aAAa,CAAC;EACnD;EAACkB,YAAA,CAAA3B,iBAAA;IAAA4B,GAAA;IAAAC,KAAA,EACD,SAAAJ,iBAAA,EAAmB;MACjB,IAAMK,iBAAiB,GAAG,IAAI,CAAC5B,QAAQ,CAAC6B,UAAU,CAACC,GAAG,CAAC,IAAI,CAAC/B,OAAO,CAACgB,WAAW,CAAC;MAChF,IAAIa,iBAAiB,EAAE;QACrB,IAAMG,OAAO,GAAG,IAAI,CAACzB,cAAc,CAAC0B,oBAAoB,CAAC,IAAI,CAAC/B,UAAU,CAAC;QACzE,IAAI8B,OAAO,EAAE;UACXH,iBAAiB,CAACK,cAAc,GAAGF,OAAO;UAC1C,IAAI,CAAChC,OAAO,CAACgB,WAAW,CAACmB,gBAAgB,GAAG,IAAI;QAClD;MACF;IACF;EAAC;IAAAR,GAAA;IAAAC,KAAA,EACD,SAAAnB,UAAU2B,IAAI,EAAEC,OAAO,EAAE;MACvB,IAAI,CAAC,IAAI,CAACrC,OAAO,EAAE;QACjB;MACF;MACA,IAAMW,OAAO,GAAG0B,OAAO,CAAC1B,OAAO;MAC/BA,OAAO,CAACc,qBAAqB,CAAC,IAAI,CAACjB,aAAa,CAAC;MACjD,IAAM8B,aAAa,GAAGD,OAAO,CAACE,gBAAgB,CAAC,IAAI,CAACrC,UAAU,CAAC;MAC/D,IAAIoC,aAAa,EAAE;QACjB,IAAI,CAACtC,OAAO,CAACE,UAAU,CAACsC,EAAE,CAACC,SAAS,CAACH,aAAa,CAACI,8BAA8B,CAAC;QAClF,IAAI,CAAC1C,OAAO,CAACE,UAAU,CAACyC,SAAS,GAAG,CAAC;QACrC,IAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAC9B,CAAC,EACDD,IAAI,CAACC,GAAG,CACNR,aAAa,CAACS,qBAAqB,CAACC,CAAC,EACrCH,IAAI,CAACC,GAAG,CAACR,aAAa,CAACS,qBAAqB,CAACE,CAAC,EAAEX,aAAa,CAACS,qBAAqB,CAACG,CAAC,CACvF,CACF,CAAC;QACD,IAAI,CAAClD,OAAO,CAACmD,gBAAgB,CAACC,KAAK,CAACC,MAAM,CACxCf,aAAa,CAACS,qBAAqB,CAACC,CAAC,GAAGJ,eAAe,EACvDN,aAAa,CAACS,qBAAqB,CAACE,CAAC,GAAGL,eAAe,EACvDN,aAAa,CAACS,qBAAqB,CAACG,CAAC,GAAGN,eAC1C,CAAC;QACD,IAAI,CAAC5C,OAAO,CAACmD,gBAAgB,CAACR,SAAS,GAAGC,eAAe;QACzD,IAAI,CAAC5C,OAAO,CAACmD,gBAAgB,CAACG,QAAQ,CAACC,IAAI,CAACjB,aAAa,CAACkB,qBAAqB,CAAC;QAChF,IAAI,IAAI,CAACpD,uBAAuB,EAAE;UAChC,IAAI,CAACA,uBAAuB,CAAC,CAAC;UAC9B,IAAI,CAACA,uBAAuB,GAAG,IAAI;QACrC;MACF;IACF;EAAC;IAAAuB,GAAA;IAAAC,KAAA,EACD,SAAA6B,QAAA,EAAU;MACR,IAAI,CAACzD,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACK,cAAc,GAAG,IAAI;IAC5B;EAAC;EAAA,OAAAR,iBAAA;AAAA;AAAA,IAEG2D,gBAAgB,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EACpB,SAAAA,iBAAYzD,QAAQ,EAAgC;IAAA,IAAA8D,MAAA;IAAA,IAA9B5D,qBAAqB,GAAA6D,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;IAAA1D,eAAA,OAAAoD,gBAAA;IAChDK,MAAA,GAAAF,MAAA,CAAAM,IAAA;IACAJ,MAAA,CAAK7D,UAAU,GAAG,IAAIL,UAAU,CAAC,CAAC;IAClCkE,MAAA,CAAK7D,UAAU,CAACyC,SAAS,GAAG,CAAC;IAC7BoB,MAAA,CAAKK,GAAG,CAACL,MAAA,CAAK7D,UAAU,CAAC;IACzB6D,MAAA,CAAKZ,gBAAgB,GAAG,IAAIrD,gBAAgB,CAAC,CAAC;IAC9CiE,MAAA,CAAKZ,gBAAgB,CAACR,SAAS,GAAG,CAAC;IACnCoB,MAAA,CAAKK,GAAG,CAACL,MAAA,CAAKZ,gBAAgB,CAAC;IAC/BY,MAAA,CAAK/C,WAAW,GAAG,IAAI;IACvB,IAAIqD,iBAAiB,GAAG,IAAI;IAC5B,IAAIC,iBAAiB,GAAG,KAAK;IAC7BrE,QAAQ,CAACW,EAAE,CAACW,gBAAgB,CAAC,cAAc,EAAE,YAAM;MACjD,IAAMZ,OAAO,GAAGV,QAAQ,CAACW,EAAE,CAACC,UAAU,CAAC,CAAC;MACxC,IAAI,mBAAmB,IAAIF,OAAO,EAAE;QAClCA,OAAO,CAAC4D,iBAAiB,CAAC;UACxBC,gBAAgB,EAAE7D,OAAO,CAACS;QAC5B,CAAC,CAAC,CAACqD,IAAI,CAAC,UAACC,KAAK,EAAK;UACjBL,iBAAiB,GAAG,IAAItE,iBAAiB,CAAA4E,sBAAA,CAAAZ,MAAA,GAAO9D,QAAQ,EAAEyE,KAAK,EAAEvE,qBAAqB,EAAE,YAAM;YAC5FmE,iBAAiB,GAAG,IAAI;YACxBP,MAAA,CAAKa,aAAa,CAAC;cAAEC,IAAI,EAAE;YAAkB,CAAC,CAAC;UACjD,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF5E,QAAQ,CAACW,EAAE,CAACW,gBAAgB,CAAC,YAAY,EAAE,YAAM;MAC/C,IAAI8C,iBAAiB,EAAE;QACrBA,iBAAiB,CAACZ,OAAO,CAAC,CAAC;QAC3BY,iBAAiB,GAAG,IAAI;MAC1B;MACA,IAAIC,iBAAiB,EAAE;QACrBP,MAAA,CAAKa,aAAa,CAAC;UAAEC,IAAI,EAAE;QAAgB,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC;IACFd,MAAA,CAAKN,OAAO,GAAG,YAAM;MACnB,IAAIY,iBAAiB,EAAE;QACrBA,iBAAiB,CAACZ,OAAO,CAAC,CAAC;QAC3BY,iBAAiB,GAAG,IAAI;MAC1B;MACAN,MAAA,CAAKe,MAAM,CAACf,MAAA,CAAK7D,UAAU,CAAC;MAC5B6D,MAAA,CAAK7D,UAAU,GAAG,IAAI;MACtB6D,MAAA,CAAKe,MAAM,CAACf,MAAA,CAAKZ,gBAAgB,CAAC;MAClCY,MAAA,CAAKZ,gBAAgB,GAAG,IAAI;MAC5BY,MAAA,CAAK/C,WAAW,GAAG,IAAI;IACzB,CAAC;IAAC,OAAA+C,MAAA;EACJ;EAAC,OAAArC,YAAA,CAAAgC,gBAAA;AAAA,EA7C4B9D,KAAK;AA+CpC,SACE8D,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}