{"ast":null,"code":"import { Loader, FileLoader, NumberKeyframeTrack, AnimationClip, BufferAttribute } from \"three\";\nclass MDDLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.load(url, function (data) {\n      onLoad(scope.parse(data));\n    }, onProgress, onError);\n  }\n  parse(data) {\n    const view = new DataView(data);\n    const totalFrames = view.getUint32(0);\n    const totalPoints = view.getUint32(4);\n    let offset = 8;\n    const times = new Float32Array(totalFrames);\n    const values = new Float32Array(totalFrames * totalFrames).fill(0);\n    for (let i = 0; i < totalFrames; i++) {\n      times[i] = view.getFloat32(offset);\n      offset += 4;\n      values[totalFrames * i + i] = 1;\n    }\n    const track = new NumberKeyframeTrack(\".morphTargetInfluences\", times, values);\n    const clip = new AnimationClip(\"default\", times[times.length - 1], [track]);\n    const morphTargets = [];\n    for (let i = 0; i < totalFrames; i++) {\n      const morphTarget = new Float32Array(totalPoints * 3);\n      for (let j = 0; j < totalPoints; j++) {\n        const stride = j * 3;\n        morphTarget[stride + 0] = view.getFloat32(offset);\n        offset += 4;\n        morphTarget[stride + 1] = view.getFloat32(offset);\n        offset += 4;\n        morphTarget[stride + 2] = view.getFloat32(offset);\n        offset += 4;\n      }\n      const attribute = new BufferAttribute(morphTarget, 3);\n      attribute.name = \"morph_\" + i;\n      morphTargets.push(attribute);\n    }\n    return {\n      morphTargets,\n      clip\n    };\n  }\n}\nexport { MDDLoader };","map":{"version":3,"names":["Loader","FileLoader","NumberKeyframeTrack","AnimationClip","BufferAttribute","MDDLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","data","parse","view","DataView","totalFrames","getUint32","totalPoints","offset","times","Float32Array","values","fill","i","getFloat32","track","clip","length","morphTargets","morphTarget","j","stride","attribute","name","push"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/MDDLoader.js"],"sourcesContent":["import { Loader, FileLoader, NumberKeyframeTrack, AnimationClip, BufferAttribute } from \"three\";\nclass MDDLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.load(\n      url,\n      function(data) {\n        onLoad(scope.parse(data));\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    const view = new DataView(data);\n    const totalFrames = view.getUint32(0);\n    const totalPoints = view.getUint32(4);\n    let offset = 8;\n    const times = new Float32Array(totalFrames);\n    const values = new Float32Array(totalFrames * totalFrames).fill(0);\n    for (let i = 0; i < totalFrames; i++) {\n      times[i] = view.getFloat32(offset);\n      offset += 4;\n      values[totalFrames * i + i] = 1;\n    }\n    const track = new NumberKeyframeTrack(\".morphTargetInfluences\", times, values);\n    const clip = new AnimationClip(\"default\", times[times.length - 1], [track]);\n    const morphTargets = [];\n    for (let i = 0; i < totalFrames; i++) {\n      const morphTarget = new Float32Array(totalPoints * 3);\n      for (let j = 0; j < totalPoints; j++) {\n        const stride = j * 3;\n        morphTarget[stride + 0] = view.getFloat32(offset);\n        offset += 4;\n        morphTarget[stride + 1] = view.getFloat32(offset);\n        offset += 4;\n        morphTarget[stride + 2] = view.getFloat32(offset);\n        offset += 4;\n      }\n      const attribute = new BufferAttribute(morphTarget, 3);\n      attribute.name = \"morph_\" + i;\n      morphTargets.push(attribute);\n    }\n    return {\n      morphTargets,\n      clip\n    };\n  }\n}\nexport {\n  MDDLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}