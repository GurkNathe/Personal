{"ast":null,"code":"var _jsxFileName = \"/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/Test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"../css/test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AboutMe() {\n  _s();\n  const ref = useRef(null);\n  let animationFrameId = null;\n  useEffect(() => {\n    animate();\n    return () => {\n      // Clean up the animation loop on component unmount\n      if (animationFrameId !== null) {\n        window.cancelAnimationFrame(animationFrameId);\n      }\n    };\n  }, []);\n  const animate = () => {\n    const canvas = ref.current;\n    if (!canvas) return;\n    const context = canvas.getContext('2d');\n    if (!context) return;\n    // Clear the canvas\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    // Example: Draw a line representing part of the flow field\n    context.beginPath();\n    context.moveTo(50, 50);\n    context.lineTo(200, 200);\n    context.stroke();\n    // Request the next frame\n    animationFrameId = window.requestAnimationFrame(animate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(AboutMe, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = AboutMe;\nvar _c;\n$RefreshReg$(_c, \"AboutMe\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","AboutMe","_s","ref","animationFrameId","animate","window","cancelAnimationFrame","canvas","current","context","getContext","clearRect","width","height","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/Test.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport \"../css/test.css\"\n\nexport default function AboutMe() {\n    const ref = useRef<HTMLCanvasElement>(null);\n    let animationFrameId: number | null = null;\n\n    useEffect(() => {\n        animate();\n\n        return () => {\n            // Clean up the animation loop on component unmount\n            if (animationFrameId!== null) {\n            window.cancelAnimationFrame(animationFrameId);\n            }\n        };\n    }, []);\n\n    const animate = () => {\n        const canvas = ref.current;\n        if (!canvas) return;\n        const context = canvas.getContext('2d');\n        if (!context) return;\n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        // Example: Draw a line representing part of the flow field\n        context.beginPath();\n        context.moveTo(50, 50);\n        context.lineTo(200, 200);\n        context.stroke();\n        // Request the next frame\n        animationFrameId = window.requestAnimationFrame(animate);\n    }\n\n    return (\n        <canvas ref={ref}/>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEhD,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,GAAG,GAAGL,MAAM,CAAoB,IAAI,CAAC;EAC3C,IAAIM,gBAA+B,GAAG,IAAI;EAE1CP,SAAS,CAAC,MAAM;IACZQ,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACT;MACA,IAAID,gBAAgB,KAAI,IAAI,EAAE;QAC9BE,MAAM,CAACC,oBAAoB,CAACH,gBAAgB,CAAC;MAC7C;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAMG,MAAM,GAAGL,GAAG,CAACM,OAAO;IAC1B,IAAI,CAACD,MAAM,EAAE;IACb,MAAME,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACvC,IAAI,CAACD,OAAO,EAAE;IACd;IACAA,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;IACpD;IACAJ,OAAO,CAACK,SAAS,CAAC,CAAC;IACnBL,OAAO,CAACM,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;IACtBN,OAAO,CAACO,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;IACxBP,OAAO,CAACQ,MAAM,CAAC,CAAC;IAChB;IACAd,gBAAgB,GAAGE,MAAM,CAACa,qBAAqB,CAACd,OAAO,CAAC;EAC5D,CAAC;EAED,oBACIL,OAAA;IAAQG,GAAG,EAAEA;EAAI;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE3B;AAACrB,EAAA,CAlCuBD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}