{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, Mesh, BufferGeometry, Float32BufferAttribute, MeshStandardMaterial, RedFormat, NearestFilter, LinearFilter } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nvar VOXLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(VOXLoader, _Loader);\n  var _super = _createSuper(VOXLoader);\n  function VOXLoader() {\n    _classCallCheck(this, VOXLoader);\n    return _super.apply(this, arguments);\n  }\n  _createClass(VOXLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(scope.requestHeader);\n      loader.load(url, function (buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(buffer) {\n      var data = new DataView(buffer);\n      var id = data.getUint32(0, true);\n      var version = data.getUint32(4, true);\n      if (id !== 542658390 || version !== 150) {\n        console.error(\"Not a valid VOX file\");\n        return;\n      }\n      var DEFAULT_PALETTE = [0, 4294967295, 4291624959, 4288282623, 4284940287, 4281597951, 4278255615, 4294954239, 4291611903, 4288269567, 4284927231, 4281584895, 4278242559, 4294941183, 4291598847, 4288256511, 4284914175, 4281571839, 4278229503, 4294928127, 4291585791, 4288243455, 4284901119, 4281558783, 4278216447, 4294915071, 4291572735, 4288230399, 4284888063, 4281545727, 4278203391, 4294902015, 4291559679, 4288217343, 4284875007, 4281532671, 4278190335, 4294967244, 4291624908, 4288282572, 4284940236, 4281597900, 4278255564, 4294954188, 4291611852, 4288269516, 4284927180, 4281584844, 4278242508, 4294941132, 4291598796, 4288256460, 4284914124, 4281571788, 4278229452, 4294928076, 4291585740, 4288243404, 4284901068, 4281558732, 4278216396, 4294915020, 4291572684, 4288230348, 4284888012, 4281545676, 4278203340, 4294901964, 4291559628, 4288217292, 4284874956, 4281532620, 4278190284, 4294967193, 4291624857, 4288282521, 4284940185, 4281597849, 4278255513, 4294954137, 4291611801, 4288269465, 4284927129, 4281584793, 4278242457, 4294941081, 4291598745, 4288256409, 4284914073, 4281571737, 4278229401, 4294928025, 4291585689, 4288243353, 4284901017, 4281558681, 4278216345, 4294914969, 4291572633, 4288230297, 4284887961, 4281545625, 4278203289, 4294901913, 4291559577, 4288217241, 4284874905, 4281532569, 4278190233, 4294967142, 4291624806, 4288282470, 4284940134, 4281597798, 4278255462, 4294954086, 4291611750, 4288269414, 4284927078, 4281584742, 4278242406, 4294941030, 4291598694, 4288256358, 4284914022, 4281571686, 4278229350, 4294927974, 4291585638, 4288243302, 4284900966, 4281558630, 4278216294, 4294914918, 4291572582, 4288230246, 4284887910, 4281545574, 4278203238, 4294901862, 4291559526, 4288217190, 4284874854, 4281532518, 4278190182, 4294967091, 4291624755, 4288282419, 4284940083, 4281597747, 4278255411, 4294954035, 4291611699, 4288269363, 4284927027, 4281584691, 4278242355, 4294940979, 4291598643, 4288256307, 4284913971, 4281571635, 4278229299, 4294927923, 4291585587, 4288243251, 4284900915, 4281558579, 4278216243, 4294914867, 4291572531, 4288230195, 4284887859, 4281545523, 4278203187, 4294901811, 4291559475, 4288217139, 4284874803, 4281532467, 4278190131, 4294967040, 4291624704, 4288282368, 4284940032, 4281597696, 4278255360, 4294953984, 4291611648, 4288269312, 4284926976, 4281584640, 4278242304, 4294940928, 4291598592, 4288256256, 4284913920, 4281571584, 4278229248, 4294927872, 4291585536, 4288243200, 4284900864, 4281558528, 4278216192, 4294914816, 4291572480, 4288230144, 4284887808, 4281545472, 4278203136, 4294901760, 4291559424, 4288217088, 4284874752, 4281532416, 4278190318, 4278190301, 4278190267, 4278190250, 4278190216, 4278190199, 4278190165, 4278190148, 4278190114, 4278190097, 4278251008, 4278246656, 4278237952, 4278233600, 4278224896, 4278220544, 4278211840, 4278207488, 4278198784, 4278194432, 4293787648, 4292673536, 4290445312, 4289331200, 4287102976, 4285988864, 4283760640, 4282646528, 4280418304, 4279304192, 4293848814, 4292730333, 4290493371, 4289374890, 4287137928, 4286019447, 4283782485, 4282664004, 4280427042, 4279308561];\n      var i = 8;\n      var chunk;\n      var chunks = [];\n      while (i < data.byteLength) {\n        var id2 = \"\";\n        for (var j = 0; j < 4; j++) {\n          id2 += String.fromCharCode(data.getUint8(i++));\n        }\n        var chunkSize = data.getUint32(i, true);\n        i += 4;\n        i += 4;\n        if (id2 === \"SIZE\") {\n          var x = data.getUint32(i, true);\n          i += 4;\n          var y = data.getUint32(i, true);\n          i += 4;\n          var z = data.getUint32(i, true);\n          i += 4;\n          chunk = {\n            palette: DEFAULT_PALETTE,\n            size: {\n              x: x,\n              y: y,\n              z: z\n            }\n          };\n          chunks.push(chunk);\n          i += chunkSize - 3 * 4;\n        } else if (id2 === \"XYZI\") {\n          var numVoxels = data.getUint32(i, true);\n          i += 4;\n          chunk.data = new Uint8Array(buffer, i, numVoxels * 4);\n          i += numVoxels * 4;\n        } else if (id2 === \"RGBA\") {\n          var palette = [0];\n          for (var _j = 0; _j < 256; _j++) {\n            palette[_j + 1] = data.getUint32(i, true);\n            i += 4;\n          }\n          chunk.palette = palette;\n        } else {\n          i += chunkSize;\n        }\n      }\n      return chunks;\n    }\n  }]);\n  return VOXLoader;\n}(Loader);\nvar VOXMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(VOXMesh, _Mesh);\n  var _super2 = _createSuper(VOXMesh);\n  function VOXMesh(chunk) {\n    _classCallCheck(this, VOXMesh);\n    var data = chunk.data;\n    var size = chunk.size;\n    var palette = chunk.palette;\n    var vertices = [];\n    var colors = [];\n    var nx = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1];\n    var px = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0];\n    var py = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1];\n    var ny = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0];\n    var nz = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0];\n    var pz = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1];\n    function add(tile, x, y, z, r, g, b) {\n      x -= size.x / 2;\n      y -= size.z / 2;\n      z += size.y / 2;\n      for (var i = 0; i < 18; i += 3) {\n        vertices.push(tile[i + 0] + x, tile[i + 1] + y, tile[i + 2] + z);\n        colors.push(r, g, b);\n      }\n    }\n    var offsety = size.x;\n    var offsetz = size.x * size.y;\n    var array = new Uint8Array(size.x * size.y * size.z);\n    for (var j = 0; j < data.length; j += 4) {\n      var x = data[j + 0];\n      var y = data[j + 1];\n      var z = data[j + 2];\n      var index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    var hasColors = false;\n    for (var _j2 = 0; _j2 < data.length; _j2 += 4) {\n      var _x = data[_j2 + 0];\n      var _y = data[_j2 + 1];\n      var _z = data[_j2 + 2];\n      var c = data[_j2 + 3];\n      var hex = palette[c];\n      var r = (hex >> 0 & 255) / 255;\n      var g = (hex >> 8 & 255) / 255;\n      var b = (hex >> 16 & 255) / 255;\n      if (r > 0 || g > 0 || b > 0) hasColors = true;\n      var _index = _x + _y * offsety + _z * offsetz;\n      if (array[_index + 1] === 0 || _x === size.x - 1) add(px, _x, _z, -_y, r, g, b);\n      if (array[_index - 1] === 0 || _x === 0) add(nx, _x, _z, -_y, r, g, b);\n      if (array[_index + offsety] === 0 || _y === size.y - 1) add(ny, _x, _z, -_y, r, g, b);\n      if (array[_index - offsety] === 0 || _y === 0) add(py, _x, _z, -_y, r, g, b);\n      if (array[_index + offsetz] === 0 || _z === size.z - 1) add(pz, _x, _z, -_y, r, g, b);\n      if (array[_index - offsetz] === 0 || _z === 0) add(nz, _x, _z, -_y, r, g, b);\n    }\n    var geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.computeVertexNormals();\n    var material = new MeshStandardMaterial();\n    if (hasColors) {\n      geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n      material.vertexColors = true;\n    }\n    return _super2.call(this, geometry, material);\n  }\n  return _createClass(VOXMesh);\n}(Mesh);\nvar VOXData3DTexture = /*#__PURE__*/function (_Data3DTexture) {\n  _inherits(VOXData3DTexture, _Data3DTexture);\n  var _super3 = _createSuper(VOXData3DTexture);\n  function VOXData3DTexture(chunk) {\n    var _this;\n    _classCallCheck(this, VOXData3DTexture);\n    var data = chunk.data;\n    var size = chunk.size;\n    var offsety = size.x;\n    var offsetz = size.x * size.y;\n    var array = new Uint8Array(size.x * size.y * size.z);\n    for (var j = 0; j < data.length; j += 4) {\n      var x = data[j + 0];\n      var y = data[j + 1];\n      var z = data[j + 2];\n      var index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    _this = _super3.call(this, array, size.x, size.y, size.z);\n    _this.format = RedFormat;\n    _this.minFilter = NearestFilter;\n    _this.magFilter = LinearFilter;\n    _this.unpackAlignment = 1;\n    _this.needsUpdate = true;\n    return _this;\n  }\n  return _createClass(VOXData3DTexture);\n}(Data3DTexture);\nexport { VOXData3DTexture, VOXLoader, VOXMesh };","map":{"version":3,"names":["Loader","FileLoader","Mesh","BufferGeometry","Float32BufferAttribute","MeshStandardMaterial","RedFormat","NearestFilter","LinearFilter","Data3DTexture","VOXLoader","_Loader","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","manager","setPath","path","setResponseType","setRequestHeader","requestHeader","buffer","parse","e","console","error","itemError","data","DataView","id","getUint32","version","DEFAULT_PALETTE","i","chunk","chunks","byteLength","id2","j","String","fromCharCode","getUint8","chunkSize","x","y","z","palette","size","push","numVoxels","Uint8Array","VOXMesh","_Mesh","_super2","vertices","colors","nx","px","py","ny","nz","pz","add","tile","r","g","b","offsety","offsetz","array","length","index","hasColors","c","hex","geometry","setAttribute","computeVertexNormals","material","vertexColors","call","VOXData3DTexture","_Data3DTexture","_super3","_this","format","minFilter","magFilter","unpackAlignment","needsUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/VOXLoader.js"],"sourcesContent":["import { Loader, FileLoader, Mesh, BufferGeometry, Float32BufferAttribute, MeshStandardMaterial, RedFormat, NearestFilter, LinearFilter } from \"three\";\nimport { Data3DTexture } from \"../_polyfill/Data3DTexture.js\";\nclass VOXLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.load(\n      url,\n      function(buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(buffer) {\n    const data = new DataView(buffer);\n    const id = data.getUint32(0, true);\n    const version = data.getUint32(4, true);\n    if (id !== 542658390 || version !== 150) {\n      console.error(\"Not a valid VOX file\");\n      return;\n    }\n    const DEFAULT_PALETTE = [\n      0,\n      4294967295,\n      4291624959,\n      4288282623,\n      4284940287,\n      4281597951,\n      4278255615,\n      4294954239,\n      4291611903,\n      4288269567,\n      4284927231,\n      4281584895,\n      4278242559,\n      4294941183,\n      4291598847,\n      4288256511,\n      4284914175,\n      4281571839,\n      4278229503,\n      4294928127,\n      4291585791,\n      4288243455,\n      4284901119,\n      4281558783,\n      4278216447,\n      4294915071,\n      4291572735,\n      4288230399,\n      4284888063,\n      4281545727,\n      4278203391,\n      4294902015,\n      4291559679,\n      4288217343,\n      4284875007,\n      4281532671,\n      4278190335,\n      4294967244,\n      4291624908,\n      4288282572,\n      4284940236,\n      4281597900,\n      4278255564,\n      4294954188,\n      4291611852,\n      4288269516,\n      4284927180,\n      4281584844,\n      4278242508,\n      4294941132,\n      4291598796,\n      4288256460,\n      4284914124,\n      4281571788,\n      4278229452,\n      4294928076,\n      4291585740,\n      4288243404,\n      4284901068,\n      4281558732,\n      4278216396,\n      4294915020,\n      4291572684,\n      4288230348,\n      4284888012,\n      4281545676,\n      4278203340,\n      4294901964,\n      4291559628,\n      4288217292,\n      4284874956,\n      4281532620,\n      4278190284,\n      4294967193,\n      4291624857,\n      4288282521,\n      4284940185,\n      4281597849,\n      4278255513,\n      4294954137,\n      4291611801,\n      4288269465,\n      4284927129,\n      4281584793,\n      4278242457,\n      4294941081,\n      4291598745,\n      4288256409,\n      4284914073,\n      4281571737,\n      4278229401,\n      4294928025,\n      4291585689,\n      4288243353,\n      4284901017,\n      4281558681,\n      4278216345,\n      4294914969,\n      4291572633,\n      4288230297,\n      4284887961,\n      4281545625,\n      4278203289,\n      4294901913,\n      4291559577,\n      4288217241,\n      4284874905,\n      4281532569,\n      4278190233,\n      4294967142,\n      4291624806,\n      4288282470,\n      4284940134,\n      4281597798,\n      4278255462,\n      4294954086,\n      4291611750,\n      4288269414,\n      4284927078,\n      4281584742,\n      4278242406,\n      4294941030,\n      4291598694,\n      4288256358,\n      4284914022,\n      4281571686,\n      4278229350,\n      4294927974,\n      4291585638,\n      4288243302,\n      4284900966,\n      4281558630,\n      4278216294,\n      4294914918,\n      4291572582,\n      4288230246,\n      4284887910,\n      4281545574,\n      4278203238,\n      4294901862,\n      4291559526,\n      4288217190,\n      4284874854,\n      4281532518,\n      4278190182,\n      4294967091,\n      4291624755,\n      4288282419,\n      4284940083,\n      4281597747,\n      4278255411,\n      4294954035,\n      4291611699,\n      4288269363,\n      4284927027,\n      4281584691,\n      4278242355,\n      4294940979,\n      4291598643,\n      4288256307,\n      4284913971,\n      4281571635,\n      4278229299,\n      4294927923,\n      4291585587,\n      4288243251,\n      4284900915,\n      4281558579,\n      4278216243,\n      4294914867,\n      4291572531,\n      4288230195,\n      4284887859,\n      4281545523,\n      4278203187,\n      4294901811,\n      4291559475,\n      4288217139,\n      4284874803,\n      4281532467,\n      4278190131,\n      4294967040,\n      4291624704,\n      4288282368,\n      4284940032,\n      4281597696,\n      4278255360,\n      4294953984,\n      4291611648,\n      4288269312,\n      4284926976,\n      4281584640,\n      4278242304,\n      4294940928,\n      4291598592,\n      4288256256,\n      4284913920,\n      4281571584,\n      4278229248,\n      4294927872,\n      4291585536,\n      4288243200,\n      4284900864,\n      4281558528,\n      4278216192,\n      4294914816,\n      4291572480,\n      4288230144,\n      4284887808,\n      4281545472,\n      4278203136,\n      4294901760,\n      4291559424,\n      4288217088,\n      4284874752,\n      4281532416,\n      4278190318,\n      4278190301,\n      4278190267,\n      4278190250,\n      4278190216,\n      4278190199,\n      4278190165,\n      4278190148,\n      4278190114,\n      4278190097,\n      4278251008,\n      4278246656,\n      4278237952,\n      4278233600,\n      4278224896,\n      4278220544,\n      4278211840,\n      4278207488,\n      4278198784,\n      4278194432,\n      4293787648,\n      4292673536,\n      4290445312,\n      4289331200,\n      4287102976,\n      4285988864,\n      4283760640,\n      4282646528,\n      4280418304,\n      4279304192,\n      4293848814,\n      4292730333,\n      4290493371,\n      4289374890,\n      4287137928,\n      4286019447,\n      4283782485,\n      4282664004,\n      4280427042,\n      4279308561\n    ];\n    let i = 8;\n    let chunk;\n    const chunks = [];\n    while (i < data.byteLength) {\n      let id2 = \"\";\n      for (let j = 0; j < 4; j++) {\n        id2 += String.fromCharCode(data.getUint8(i++));\n      }\n      const chunkSize = data.getUint32(i, true);\n      i += 4;\n      i += 4;\n      if (id2 === \"SIZE\") {\n        const x = data.getUint32(i, true);\n        i += 4;\n        const y = data.getUint32(i, true);\n        i += 4;\n        const z = data.getUint32(i, true);\n        i += 4;\n        chunk = {\n          palette: DEFAULT_PALETTE,\n          size: { x, y, z }\n        };\n        chunks.push(chunk);\n        i += chunkSize - 3 * 4;\n      } else if (id2 === \"XYZI\") {\n        const numVoxels = data.getUint32(i, true);\n        i += 4;\n        chunk.data = new Uint8Array(buffer, i, numVoxels * 4);\n        i += numVoxels * 4;\n      } else if (id2 === \"RGBA\") {\n        const palette = [0];\n        for (let j = 0; j < 256; j++) {\n          palette[j + 1] = data.getUint32(i, true);\n          i += 4;\n        }\n        chunk.palette = palette;\n      } else {\n        i += chunkSize;\n      }\n    }\n    return chunks;\n  }\n}\nclass VOXMesh extends Mesh {\n  constructor(chunk) {\n    const data = chunk.data;\n    const size = chunk.size;\n    const palette = chunk.palette;\n    const vertices = [];\n    const colors = [];\n    const nx = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1];\n    const px = [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0];\n    const py = [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1];\n    const ny = [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0];\n    const nz = [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0];\n    const pz = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1];\n    function add(tile, x, y, z, r, g, b) {\n      x -= size.x / 2;\n      y -= size.z / 2;\n      z += size.y / 2;\n      for (let i = 0; i < 18; i += 3) {\n        vertices.push(tile[i + 0] + x, tile[i + 1] + y, tile[i + 2] + z);\n        colors.push(r, g, b);\n      }\n    }\n    const offsety = size.x;\n    const offsetz = size.x * size.y;\n    const array = new Uint8Array(size.x * size.y * size.z);\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    let hasColors = false;\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const c = data[j + 3];\n      const hex = palette[c];\n      const r = (hex >> 0 & 255) / 255;\n      const g = (hex >> 8 & 255) / 255;\n      const b = (hex >> 16 & 255) / 255;\n      if (r > 0 || g > 0 || b > 0)\n        hasColors = true;\n      const index = x + y * offsety + z * offsetz;\n      if (array[index + 1] === 0 || x === size.x - 1)\n        add(px, x, z, -y, r, g, b);\n      if (array[index - 1] === 0 || x === 0)\n        add(nx, x, z, -y, r, g, b);\n      if (array[index + offsety] === 0 || y === size.y - 1)\n        add(ny, x, z, -y, r, g, b);\n      if (array[index - offsety] === 0 || y === 0)\n        add(py, x, z, -y, r, g, b);\n      if (array[index + offsetz] === 0 || z === size.z - 1)\n        add(pz, x, z, -y, r, g, b);\n      if (array[index - offsetz] === 0 || z === 0)\n        add(nz, x, z, -y, r, g, b);\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    geometry.computeVertexNormals();\n    const material = new MeshStandardMaterial();\n    if (hasColors) {\n      geometry.setAttribute(\"color\", new Float32BufferAttribute(colors, 3));\n      material.vertexColors = true;\n    }\n    super(geometry, material);\n  }\n}\nclass VOXData3DTexture extends Data3DTexture {\n  constructor(chunk) {\n    const data = chunk.data;\n    const size = chunk.size;\n    const offsety = size.x;\n    const offsetz = size.x * size.y;\n    const array = new Uint8Array(size.x * size.y * size.z);\n    for (let j = 0; j < data.length; j += 4) {\n      const x = data[j + 0];\n      const y = data[j + 1];\n      const z = data[j + 2];\n      const index = x + y * offsety + z * offsetz;\n      array[index] = 255;\n    }\n    super(array, size.x, size.y, size.z);\n    this.format = RedFormat;\n    this.minFilter = NearestFilter;\n    this.magFilter = LinearFilter;\n    this.unpackAlignment = 1;\n    this.needsUpdate = true;\n  }\n}\nexport {\n  VOXData3DTexture,\n  VOXLoader,\n  VOXMesh\n};\n"],"mappings":";;;;AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,cAAc,EAAEC,sBAAsB,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,aAAa,EAAEC,YAAY,QAAQ,OAAO;AACtJ,SAASC,aAAa,QAAQ,+BAA+B;AAAC,IACxDC,SAAS,0BAAAC,OAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,OAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAAA,SAAAA,UAAA;IAAAK,eAAA,OAAAL,SAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,SAAA;IAAAS,GAAA;IAAAC,KAAA,EACb,SAAAC,KAAKC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;MACrC,IAAMC,KAAK,GAAG,IAAI;MAClB,IAAMC,MAAM,GAAG,IAAI1B,UAAU,CAACyB,KAAK,CAACE,OAAO,CAAC;MAC5CD,MAAM,CAACE,OAAO,CAACH,KAAK,CAACI,IAAI,CAAC;MAC1BH,MAAM,CAACI,eAAe,CAAC,aAAa,CAAC;MACrCJ,MAAM,CAACK,gBAAgB,CAACN,KAAK,CAACO,aAAa,CAAC;MAC5CN,MAAM,CAACN,IAAI,CACTC,GAAG,EACH,UAASY,MAAM,EAAE;QACf,IAAI;UACFX,MAAM,CAACG,KAAK,CAACS,KAAK,CAACD,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,OAAOE,CAAC,EAAE;UACV,IAAIX,OAAO,EAAE;YACXA,OAAO,CAACW,CAAC,CAAC;UACZ,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAClB;UACAV,KAAK,CAACE,OAAO,CAACW,SAAS,CAACjB,GAAG,CAAC;QAC9B;MACF,CAAC,EACDE,UAAU,EACVC,OACF,CAAC;IACH;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAe,MAAMD,MAAM,EAAE;MACZ,IAAMM,IAAI,GAAG,IAAIC,QAAQ,CAACP,MAAM,CAAC;MACjC,IAAMQ,EAAE,GAAGF,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC;MAClC,IAAMC,OAAO,GAAGJ,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC;MACvC,IAAID,EAAE,KAAK,SAAS,IAAIE,OAAO,KAAK,GAAG,EAAE;QACvCP,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF;MACA,IAAMO,eAAe,GAAG,CACtjB,OAAOF,CAAC,GAAGN,IAAI,CAACS,UAAU,EAAE;QAC1B,IAAIC,GAAG,GAAG,EAAE;QACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1BD,GAAG,IAAIE,MAAM,CAACC,YAAY,CAACb,IAAI,CAACc,QAAQ,CAACR,CAAC,EAAE,CAAC,CAAC;QAChD;QACA,IAAMS,SAAS,GAAGf,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;QACzCA,CAAC,IAAI,CAAC;QACNA,CAAC,IAAI,CAAC;QACN,IAAII,GAAG,KAAK,MAAM,EAAE;UAClB,IAAMM,CAAC,GAAGhB,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;UACjCA,CAAC,IAAI,CAAC;UACN,IAAMW,CAAC,GAAGjB,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;UACjCA,CAAC,IAAI,CAAC;UACN,IAAMY,CAAC,GAAGlB,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;UACjCA,CAAC,IAAI,CAAC;UACNC,KAAK,GAAG;YACNY,OAAO,EAAEd,eAAe;YACxBe,IAAI,EAAE;cAAEJ,CAAC,EAADA,CAAC;cAAEC,CAAC,EAADA,CAAC;cAAEC,CAAC,EAADA;YAAE;UAClB,CAAC;UACDV,MAAM,CAACa,IAAI,CAACd,KAAK,CAAC;UAClBD,CAAC,IAAIS,SAAS,GAAG,CAAC,GAAG,CAAC;QACxB,CAAC,MAAM,IAAIL,GAAG,KAAK,MAAM,EAAE;UACzB,IAAMY,SAAS,GAAGtB,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;UACzCA,CAAC,IAAI,CAAC;UACNC,KAAK,CAACP,IAAI,GAAG,IAAIuB,UAAU,CAAC7B,MAAM,EAAEY,CAAC,EAAEgB,SAAS,GAAG,CAAC,CAAC;UACrDhB,CAAC,IAAIgB,SAAS,GAAG,CAAC;QACpB,CAAC,MAAM,IAAIZ,GAAG,KAAK,MAAM,EAAE;UACzB,IAAMS,OAAO,GAAG,CAAC,CAAC,CAAC;UACnB,KAAK,IAAIR,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,GAAG,EAAEA,EAAC,EAAE,EAAE;YAC5BQ,OAAO,CAACR,EAAC,GAAG,CAAC,CAAC,GAAGX,IAAI,CAACG,SAAS,CAACG,CAAC,EAAE,IAAI,CAAC;YACxCA,CAAC,IAAI,CAAC;UACR;UACAC,KAAK,CAACY,OAAO,GAAGA,OAAO;QACzB,CAAC,MAAM;UACLb,CAAC,IAAIS,SAAS;QAChB;MACF;MACA,OAAOP,MAAM;IACf;EAAC;EAAA,OAAAtC,SAAA;AAAA,EA5UqBV,MAAM;AAAA,IA8UxBgE,OAAO,0BAAAC,KAAA;EAAArD,SAAA,CAAAoD,OAAA,EAAAC,KAAA;EAAA,IAAAC,OAAA,GAAApD,YAAA,CAAAkD,OAAA;EACX,SAAAA,QAAYjB,KAAK,EAAE;IAAAhC,eAAA,OAAAiD,OAAA;IACjB,IAAMxB,IAAI,GAAGO,KAAK,CAACP,IAAI;IACvB,IAAMoB,IAAI,GAAGb,KAAK,CAACa,IAAI;IACvB,IAAMD,OAAO,GAAGZ,KAAK,CAACY,OAAO;IAC7B,IAAMQ,QAAQ,GAAG,EAAE;IACnB,IAAMC,MAAM,GAAG,EAAE;IACjB,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,IAAMC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjE,SAASC,GAAGA,CAACC,IAAI,EAAEpB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEmB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;MACnCvB,CAAC,IAAII,IAAI,CAACJ,CAAC,GAAG,CAAC;MACfC,CAAC,IAAIG,IAAI,CAACF,CAAC,GAAG,CAAC;MACfA,CAAC,IAAIE,IAAI,CAACH,CAAC,GAAG,CAAC;MACf,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;QAC9BqB,QAAQ,CAACN,IAAI,CAACe,IAAI,CAAC9B,CAAC,GAAG,CAAC,CAAC,GAAGU,CAAC,EAAEoB,IAAI,CAAC9B,CAAC,GAAG,CAAC,CAAC,GAAGW,CAAC,EAAEmB,IAAI,CAAC9B,CAAC,GAAG,CAAC,CAAC,GAAGY,CAAC,CAAC;QAChEU,MAAM,CAACP,IAAI,CAACgB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MACtB;IACF;IACA,IAAMC,OAAO,GAAGpB,IAAI,CAACJ,CAAC;IACtB,IAAMyB,OAAO,GAAGrB,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH,CAAC;IAC/B,IAAMyB,KAAK,GAAG,IAAInB,UAAU,CAACH,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH,CAAC,GAAGG,IAAI,CAACF,CAAC,CAAC;IACtD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAAC2C,MAAM,EAAEhC,CAAC,IAAI,CAAC,EAAE;MACvC,IAAMK,CAAC,GAAGhB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMM,CAAC,GAAGjB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMO,CAAC,GAAGlB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMiC,KAAK,GAAG5B,CAAC,GAAGC,CAAC,GAAGuB,OAAO,GAAGtB,CAAC,GAAGuB,OAAO;MAC3CC,KAAK,CAACE,KAAK,CAAC,GAAG,GAAG;IACpB;IACA,IAAIC,SAAS,GAAG,KAAK;IACrB,KAAK,IAAIlC,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGX,IAAI,CAAC2C,MAAM,EAAEhC,GAAC,IAAI,CAAC,EAAE;MACvC,IAAMK,EAAC,GAAGhB,IAAI,CAACW,GAAC,GAAG,CAAC,CAAC;MACrB,IAAMM,EAAC,GAAGjB,IAAI,CAACW,GAAC,GAAG,CAAC,CAAC;MACrB,IAAMO,EAAC,GAAGlB,IAAI,CAACW,GAAC,GAAG,CAAC,CAAC;MACrB,IAAMmC,CAAC,GAAG9C,IAAI,CAACW,GAAC,GAAG,CAAC,CAAC;MACrB,IAAMoC,GAAG,GAAG5B,OAAO,CAAC2B,CAAC,CAAC;MACtB,IAAMT,CAAC,GAAG,CAACU,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;MAChC,IAAMT,CAAC,GAAG,CAACS,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG;MAChC,IAAMR,CAAC,GAAG,CAACQ,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,GAAG;MACjC,IAAIV,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,IAAIC,CAAC,GAAG,CAAC,EACzBM,SAAS,GAAG,IAAI;MAClB,IAAMD,MAAK,GAAG5B,EAAC,GAAGC,EAAC,GAAGuB,OAAO,GAAGtB,EAAC,GAAGuB,OAAO;MAC3C,IAAIC,KAAK,CAACE,MAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI5B,EAAC,KAAKI,IAAI,CAACJ,CAAC,GAAG,CAAC,EAC5CmB,GAAG,CAACL,EAAE,EAAEd,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC5B,IAAIG,KAAK,CAACE,MAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI5B,EAAC,KAAK,CAAC,EACnCmB,GAAG,CAACN,EAAE,EAAEb,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC5B,IAAIG,KAAK,CAACE,MAAK,GAAGJ,OAAO,CAAC,KAAK,CAAC,IAAIvB,EAAC,KAAKG,IAAI,CAACH,CAAC,GAAG,CAAC,EAClDkB,GAAG,CAACH,EAAE,EAAEhB,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC5B,IAAIG,KAAK,CAACE,MAAK,GAAGJ,OAAO,CAAC,KAAK,CAAC,IAAIvB,EAAC,KAAK,CAAC,EACzCkB,GAAG,CAACJ,EAAE,EAAEf,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC5B,IAAIG,KAAK,CAACE,MAAK,GAAGH,OAAO,CAAC,KAAK,CAAC,IAAIvB,EAAC,KAAKE,IAAI,CAACF,CAAC,GAAG,CAAC,EAClDiB,GAAG,CAACD,EAAE,EAAElB,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC5B,IAAIG,KAAK,CAACE,MAAK,GAAGH,OAAO,CAAC,KAAK,CAAC,IAAIvB,EAAC,KAAK,CAAC,EACzCiB,GAAG,CAACF,EAAE,EAAEjB,EAAC,EAAEE,EAAC,EAAE,CAACD,EAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;IAC9B;IACA,IAAMS,QAAQ,GAAG,IAAIrF,cAAc,CAAC,CAAC;IACrCqF,QAAQ,CAACC,YAAY,CAAC,UAAU,EAAE,IAAIrF,sBAAsB,CAAC+D,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC1EqB,QAAQ,CAACE,oBAAoB,CAAC,CAAC;IAC/B,IAAMC,QAAQ,GAAG,IAAItF,oBAAoB,CAAC,CAAC;IAC3C,IAAIgF,SAAS,EAAE;MACbG,QAAQ,CAACC,YAAY,CAAC,OAAO,EAAE,IAAIrF,sBAAsB,CAACgE,MAAM,EAAE,CAAC,CAAC,CAAC;MACrEuB,QAAQ,CAACC,YAAY,GAAG,IAAI;IAC9B;IAAC,OAAA1B,OAAA,CAAA2B,IAAA,OACKL,QAAQ,EAAEG,QAAQ;EAC1B;EAAC,OAAAzE,YAAA,CAAA8C,OAAA;AAAA,EAnEmB9D,IAAI;AAAA,IAqEpB4F,gBAAgB,0BAAAC,cAAA;EAAAnF,SAAA,CAAAkF,gBAAA,EAAAC,cAAA;EAAA,IAAAC,OAAA,GAAAlF,YAAA,CAAAgF,gBAAA;EACpB,SAAAA,iBAAY/C,KAAK,EAAE;IAAA,IAAAkD,KAAA;IAAAlF,eAAA,OAAA+E,gBAAA;IACjB,IAAMtD,IAAI,GAAGO,KAAK,CAACP,IAAI;IACvB,IAAMoB,IAAI,GAAGb,KAAK,CAACa,IAAI;IACvB,IAAMoB,OAAO,GAAGpB,IAAI,CAACJ,CAAC;IACtB,IAAMyB,OAAO,GAAGrB,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH,CAAC;IAC/B,IAAMyB,KAAK,GAAG,IAAInB,UAAU,CAACH,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACH,CAAC,GAAGG,IAAI,CAACF,CAAC,CAAC;IACtD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAAC2C,MAAM,EAAEhC,CAAC,IAAI,CAAC,EAAE;MACvC,IAAMK,CAAC,GAAGhB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMM,CAAC,GAAGjB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMO,CAAC,GAAGlB,IAAI,CAACW,CAAC,GAAG,CAAC,CAAC;MACrB,IAAMiC,KAAK,GAAG5B,CAAC,GAAGC,CAAC,GAAGuB,OAAO,GAAGtB,CAAC,GAAGuB,OAAO;MAC3CC,KAAK,CAACE,KAAK,CAAC,GAAG,GAAG;IACpB;IACAa,KAAA,GAAAD,OAAA,CAAAH,IAAA,OAAMX,KAAK,EAAEtB,IAAI,CAACJ,CAAC,EAAEI,IAAI,CAACH,CAAC,EAAEG,IAAI,CAACF,CAAC;IACnCuC,KAAA,CAAKC,MAAM,GAAG5F,SAAS;IACvB2F,KAAA,CAAKE,SAAS,GAAG5F,aAAa;IAC9B0F,KAAA,CAAKG,SAAS,GAAG5F,YAAY;IAC7ByF,KAAA,CAAKI,eAAe,GAAG,CAAC;IACxBJ,KAAA,CAAKK,WAAW,GAAG,IAAI;IAAC,OAAAL,KAAA;EAC1B;EAAC,OAAA/E,YAAA,CAAA4E,gBAAA;AAAA,EApB4BrF,aAAa;AAsB5C,SACEqF,gBAAgB,EAChBpF,SAAS,EACTsD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}