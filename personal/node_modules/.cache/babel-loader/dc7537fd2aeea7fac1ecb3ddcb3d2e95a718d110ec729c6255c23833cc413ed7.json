{"ast":null,"code":"import { runMultipleHook, runSingleHook } from '../components/hooks.js';\nimport { createError } from '../errors.js';\nimport { innerInsertMultiple, insert } from './insert.js';\nimport { remove, removeMultiple } from './remove.js';\nexport async function update(orama, id, doc, language, skipHooks) {\n  if (!skipHooks && orama.beforeUpdate) {\n    await runSingleHook(orama.beforeUpdate, orama, id);\n  }\n  await remove(orama, id, language, skipHooks);\n  const newId = await insert(orama, doc, language, skipHooks);\n  if (!skipHooks && orama.afterUpdate) {\n    await runSingleHook(orama.afterUpdate, orama, newId);\n  }\n  return newId;\n}\nexport async function updateMultiple(orama, ids, docs, batchSize, language, skipHooks) {\n  if (!skipHooks) {\n    await runMultipleHook(orama.beforeMultipleUpdate, orama, ids);\n  }\n  // Validate all documents before the insertion\n  const docsLength = docs.length;\n  for (let i = 0; i < docsLength; i++) {\n    const errorProperty = await orama.validateSchema(docs[i], orama.schema);\n    if (errorProperty) {\n      throw createError('SCHEMA_VALIDATION_FAILURE', errorProperty);\n    }\n  }\n  await removeMultiple(orama, ids, batchSize, language, skipHooks);\n  const newIds = await innerInsertMultiple(orama, docs, batchSize, language, skipHooks);\n  if (!skipHooks) {\n    await runMultipleHook(orama.afterMultipleUpdate, orama, newIds);\n  }\n  return newIds;\n}","map":{"version":3,"names":["runMultipleHook","runSingleHook","createError","innerInsertMultiple","insert","remove","removeMultiple","update","orama","id","doc","language","skipHooks","beforeUpdate","newId","afterUpdate","updateMultiple","ids","docs","batchSize","beforeMultipleUpdate","docsLength","length","i","errorProperty","validateSchema","schema","newIds","afterMultipleUpdate"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.2.11/node_modules/@orama/orama/src/methods/update.ts"],"sourcesContent":["import { runMultipleHook, runSingleHook } from '../components/hooks.js'\nimport { createError } from '../errors.js'\nimport { AnyOrama, PartialSchemaDeep, TypedDocument } from '../types.js'\nimport { innerInsertMultiple, insert } from './insert.js'\nimport { remove, removeMultiple } from './remove.js'\n\nexport async function update<T extends AnyOrama>(\n  orama: T,\n  id: string,\n  doc: PartialSchemaDeep<TypedDocument<T>>,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string> {\n  if (!skipHooks && orama.beforeUpdate) {\n    await runSingleHook(orama.beforeUpdate, orama, id)\n  }\n\n  await remove(orama, id, language, skipHooks)\n  const newId = await insert(orama, doc, language, skipHooks)\n\n  if (!skipHooks && orama.afterUpdate) {\n    await runSingleHook(orama.afterUpdate, orama, newId)\n  }\n\n  return newId\n}\n\nexport async function updateMultiple<T extends AnyOrama>(\n  orama: T,\n  ids: string[],\n  docs: PartialSchemaDeep<TypedDocument<T>>[],\n  batchSize?: number,\n  language?: string,\n  skipHooks?: boolean,\n): Promise<string[]> {\n  if (!skipHooks) {\n    await runMultipleHook(orama.beforeMultipleUpdate, orama, ids)\n  }\n\n  // Validate all documents before the insertion\n  const docsLength = docs.length\n  for (let i = 0; i < docsLength; i++) {\n    const errorProperty = await orama.validateSchema(docs[i], orama.schema)\n    if (errorProperty) {\n      throw createError('SCHEMA_VALIDATION_FAILURE', errorProperty)\n    }\n  }\n\n  await removeMultiple(orama, ids, batchSize, language, skipHooks)\n  const newIds = await innerInsertMultiple(orama, docs, batchSize, language, skipHooks)\n\n  if (!skipHooks) {\n    await runMultipleHook(orama.afterMultipleUpdate, orama, newIds)\n  }\n\n  return newIds\n}\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,aAAa,QAAQ;AAC/C,SAASC,WAAW,QAAQ;AAE5B,SAASC,mBAAmB,EAAEC,MAAM,QAAQ;AAC5C,SAASC,MAAM,EAAEC,cAAc,QAAQ;AAEvC,OAAO,eAAeC,OACpBC,KAAQ,EACRC,EAAU,EACVC,GAAwC,EACxCC,QAAiB,EACjBC,SAAmB,EACF;EACjB,IAAI,CAACA,SAAA,IAAaJ,KAAA,CAAMK,YAAY,EAAE;IACpC,MAAMZ,aAAA,CAAcO,KAAA,CAAMK,YAAY,EAAEL,KAAA,EAAOC,EAAA;EACjD;EAEA,MAAMJ,MAAA,CAAOG,KAAA,EAAOC,EAAA,EAAIE,QAAA,EAAUC,SAAA;EAClC,MAAME,KAAA,GAAQ,MAAMV,MAAA,CAAOI,KAAA,EAAOE,GAAA,EAAKC,QAAA,EAAUC,SAAA;EAEjD,IAAI,CAACA,SAAA,IAAaJ,KAAA,CAAMO,WAAW,EAAE;IACnC,MAAMd,aAAA,CAAcO,KAAA,CAAMO,WAAW,EAAEP,KAAA,EAAOM,KAAA;EAChD;EAEA,OAAOA,KAAA;AACT;AAEA,OAAO,eAAeE,eACpBR,KAAQ,EACRS,GAAa,EACbC,IAA2C,EAC3CC,SAAkB,EAClBR,QAAiB,EACjBC,SAAmB,EACA;EACnB,IAAI,CAACA,SAAA,EAAW;IACd,MAAMZ,eAAA,CAAgBQ,KAAA,CAAMY,oBAAoB,EAAEZ,KAAA,EAAOS,GAAA;EAC3D;EAEA;EACA,MAAMI,UAAA,GAAaH,IAAA,CAAKI,MAAM;EAC9B,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIF,UAAA,EAAYE,CAAA,IAAK;IACnC,MAAMC,aAAA,GAAgB,MAAMhB,KAAA,CAAMiB,cAAc,CAACP,IAAI,CAACK,CAAA,CAAE,EAAEf,KAAA,CAAMkB,MAAM;IACtE,IAAIF,aAAA,EAAe;MACjB,MAAMtB,WAAA,CAAY,6BAA6BsB,aAAA;IACjD;EACF;EAEA,MAAMlB,cAAA,CAAeE,KAAA,EAAOS,GAAA,EAAKE,SAAA,EAAWR,QAAA,EAAUC,SAAA;EACtD,MAAMe,MAAA,GAAS,MAAMxB,mBAAA,CAAoBK,KAAA,EAAOU,IAAA,EAAMC,SAAA,EAAWR,QAAA,EAAUC,SAAA;EAE3E,IAAI,CAACA,SAAA,EAAW;IACd,MAAMZ,eAAA,CAAgBQ,KAAA,CAAMoB,mBAAmB,EAAEpB,KAAA,EAAOmB,MAAA;EAC1D;EAEA,OAAOA,MAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}