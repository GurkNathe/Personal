{"ast":null,"code":"import { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from \"three\";\nconst _shadowMatrix = /* @__PURE__ */new Matrix4();\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    super(mesh.geometry, shadowMaterial);\n    this.isShadowMesh = true;\n    this.meshMatrix = mesh.matrixWorld;\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n  }\n  update(plane, lightPosition4D) {\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n}\nexport { ShadowMesh };","map":{"version":3,"names":["Matrix4","Mesh","MeshBasicMaterial","EqualStencilFunc","IncrementStencilOp","_shadowMatrix","ShadowMesh","constructor","mesh","shadowMaterial","color","transparent","opacity","depthWrite","stencilWrite","stencilFunc","stencilRef","stencilZPass","geometry","isShadowMesh","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","update","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/objects/ShadowMesh.js"],"sourcesContent":["import { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from \"three\";\nconst _shadowMatrix = /* @__PURE__ */ new Matrix4();\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    super(mesh.geometry, shadowMaterial);\n    this.isShadowMesh = true;\n    this.meshMatrix = mesh.matrixWorld;\n    this.frustumCulled = false;\n    this.matrixAutoUpdate = false;\n  }\n  update(plane, lightPosition4D) {\n    const dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n    const sme = _shadowMatrix.elements;\n    sme[0] = dot - lightPosition4D.x * plane.normal.x;\n    sme[4] = -lightPosition4D.x * plane.normal.y;\n    sme[8] = -lightPosition4D.x * plane.normal.z;\n    sme[12] = -lightPosition4D.x * -plane.constant;\n    sme[1] = -lightPosition4D.y * plane.normal.x;\n    sme[5] = dot - lightPosition4D.y * plane.normal.y;\n    sme[9] = -lightPosition4D.y * plane.normal.z;\n    sme[13] = -lightPosition4D.y * -plane.constant;\n    sme[2] = -lightPosition4D.z * plane.normal.x;\n    sme[6] = -lightPosition4D.z * plane.normal.y;\n    sme[10] = dot - lightPosition4D.z * plane.normal.z;\n    sme[14] = -lightPosition4D.z * -plane.constant;\n    sme[3] = -lightPosition4D.w * plane.normal.x;\n    sme[7] = -lightPosition4D.w * plane.normal.y;\n    sme[11] = -lightPosition4D.w * plane.normal.z;\n    sme[15] = dot - lightPosition4D.w * -plane.constant;\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n  }\n}\nexport {\n  ShadowMesh\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}