{"ast":null,"code":"export function intersectFilteredIDs(filtered, lookedUp) {\n  const map = new Map();\n  const result = [];\n  for (const id of filtered) {\n    map.set(id, true);\n  }\n  for (const [id, score] of lookedUp) {\n    if (map.has(id)) {\n      result.push([id, score]);\n      map.delete(id);\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["intersectFilteredIDs","filtered","lookedUp","map","Map","result","id","set","score","has","push","delete"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.2.11/node_modules/@orama/orama/src/components/filters.ts"],"sourcesContent":["import { InternalDocumentID } from './internal-document-id-store.js'\n\nexport function intersectFilteredIDs(\n  filtered: InternalDocumentID[],\n  lookedUp: [InternalDocumentID, number][],\n): [InternalDocumentID, number][] {\n  const map = new Map<number, boolean>()\n  const result: [number, number][] = []\n\n  for (const id of filtered) {\n    map.set(id, true)\n  }\n\n  for (const [id, score] of lookedUp) {\n    if (map.has(id)) {\n      result.push([id, score])\n      map.delete(id)\n    }\n  }\n\n  return result\n}\n"],"mappings":"AAEA,OAAO,SAASA,qBACdC,QAA8B,EAC9BC,QAAwC,EACR;EAChC,MAAMC,GAAA,GAAM,IAAIC,GAAA;EAChB,MAAMC,MAAA,GAA6B,EAAE;EAErC,KAAK,MAAMC,EAAA,IAAML,QAAA,EAAU;IACzBE,GAAA,CAAII,GAAG,CAACD,EAAA,EAAI,IAAI;EAClB;EAEA,KAAK,MAAM,CAACA,EAAA,EAAIE,KAAA,CAAM,IAAIN,QAAA,EAAU;IAClC,IAAIC,GAAA,CAAIM,GAAG,CAACH,EAAA,GAAK;MACfD,MAAA,CAAOK,IAAI,CAAC,CAACJ,EAAA,EAAIE,KAAA,CAAM;MACvBL,GAAA,CAAIQ,MAAM,CAACL,EAAA;IACb;EACF;EAEA,OAAOD,MAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}