{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { OrthographicCamera, PlaneGeometry, Mesh } from \"three\";\nvar Pass = /*#__PURE__*/function () {\n  function Pass() {\n    _classCallCheck(this, Pass);\n    // if set to true, the pass is processed by the composer\n    __publicField(this, \"enabled\", true);\n    // if set to true, the pass indicates to swap read and write buffer after rendering\n    __publicField(this, \"needsSwap\", true);\n    // if set to true, the pass clears its buffer before rendering\n    __publicField(this, \"clear\", false);\n    // if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n    __publicField(this, \"renderToScreen\", false);\n  }\n  _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize(width, height) {}\n  }, {\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n      console.error(\"THREE.Pass: .render() must be implemented in derived pass.\");\n    }\n  }]);\n  return Pass;\n}();\nvar FullScreenQuad = /*#__PURE__*/function () {\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n    __publicField(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n    __publicField(this, \"geometry\", new PlaneGeometry(2, 2));\n    __publicField(this, \"mesh\");\n    this.mesh = new Mesh(this.geometry, material);\n  }\n  _createClass(FullScreenQuad, [{\n    key: \"material\",\n    get: function get() {\n      return this.mesh.material;\n    },\n    set: function set(value) {\n      this.mesh.material = value;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.mesh.geometry.dispose();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this.mesh, this.camera);\n    }\n  }]);\n  return FullScreenQuad;\n}();\nexport { FullScreenQuad, Pass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","OrthographicCamera","PlaneGeometry","Mesh","Pass","_classCallCheck","_createClass","setSize","width","height","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","console","error","FullScreenQuad","material","mesh","geometry","get","set","dispose","camera"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/Pass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { OrthographicCamera, PlaneGeometry, Mesh } from \"three\";\nclass Pass {\n  constructor() {\n    // if set to true, the pass is processed by the composer\n    __publicField(this, \"enabled\", true);\n    // if set to true, the pass indicates to swap read and write buffer after rendering\n    __publicField(this, \"needsSwap\", true);\n    // if set to true, the pass clears its buffer before rendering\n    __publicField(this, \"clear\", false);\n    // if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n    __publicField(this, \"renderToScreen\", false);\n  }\n  setSize(width, height) {\n  }\n  render(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    console.error(\"THREE.Pass: .render() must be implemented in derived pass.\");\n  }\n}\nclass FullScreenQuad {\n  constructor(material) {\n    __publicField(this, \"camera\", new OrthographicCamera(-1, 1, 1, -1, 0, 1));\n    __publicField(this, \"geometry\", new PlaneGeometry(2, 2));\n    __publicField(this, \"mesh\");\n    this.mesh = new Mesh(this.geometry, material);\n  }\n  get material() {\n    return this.mesh.material;\n  }\n  set material(value) {\n    this.mesh.material = value;\n  }\n  dispose() {\n    this.mesh.geometry.dispose();\n  }\n  render(renderer) {\n    renderer.render(this.mesh, this.camera);\n  }\n}\nexport {\n  FullScreenQuad,\n  Pass\n};\n"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,GAAG,EAAEC,GAAG,EAAEC,KAAK;EAAA,OAAKD,GAAG,IAAID,GAAG,GAAGJ,SAAS,CAACI,GAAG,EAAEC,GAAG,EAAE;IAAEE,UAAU,EAAE,IAAI;IAAEC,YAAY,EAAE,IAAI;IAAEC,QAAQ,EAAE,IAAI;IAAEH,KAAK,EAALA;EAAM,CAAC,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAAA;AAC/J,IAAII,aAAa,GAAG,SAAhBA,aAAaA,CAAIN,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAK;EACvCH,eAAe,CAACC,GAAG,EAAE,OAAOC,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,EAAE,GAAGA,GAAG,EAAEC,KAAK,CAAC;EACrE,OAAOA,KAAK;AACd,CAAC;AACD,SAASK,kBAAkB,EAAEC,aAAa,EAAEC,IAAI,QAAQ,OAAO;AAAC,IAC1DC,IAAI;EACR,SAAAA,KAAA,EAAc;IAAAC,eAAA,OAAAD,IAAA;IACZ;IACAJ,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC;IACpC;IACAA,aAAa,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC;IACtC;IACAA,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;IACnC;IACAA,aAAa,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,CAAC;EAC9C;EAACM,YAAA,CAAAF,IAAA;IAAAT,GAAA;IAAAC,KAAA,EACD,SAAAW,QAAQC,KAAK,EAAEC,MAAM,EAAE,CACvB;EAAC;IAAAd,GAAA;IAAAC,KAAA,EACD,SAAAc,OAAOC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAE;MAC/DC,OAAO,CAACC,KAAK,CAAC,4DAA4D,CAAC;IAC7E;EAAC;EAAA,OAAAb,IAAA;AAAA;AAAA,IAEGc,cAAc;EAClB,SAAAA,eAAYC,QAAQ,EAAE;IAAAd,eAAA,OAAAa,cAAA;IACpBlB,aAAa,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAIC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzED,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,IAAIE,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxDF,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC;IAC3B,IAAI,CAACoB,IAAI,GAAG,IAAIjB,IAAI,CAAC,IAAI,CAACkB,QAAQ,EAAEF,QAAQ,CAAC;EAC/C;EAACb,YAAA,CAAAY,cAAA;IAAAvB,GAAA;IAAA2B,GAAA,EACD,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACF,IAAI,CAACD,QAAQ;IAC3B,CAAC;IAAAI,GAAA,EACD,SAAAA,IAAa3B,KAAK,EAAE;MAClB,IAAI,CAACwB,IAAI,CAACD,QAAQ,GAAGvB,KAAK;IAC5B;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA4B,QAAA,EAAU;MACR,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAACG,OAAO,CAAC,CAAC;IAC9B;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAAc,OAAOC,QAAQ,EAAE;MACfA,QAAQ,CAACD,MAAM,CAAC,IAAI,CAACU,IAAI,EAAE,IAAI,CAACK,MAAM,CAAC;IACzC;EAAC;EAAA,OAAAP,cAAA;AAAA;AAEH,SACEA,cAAc,EACdd,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}