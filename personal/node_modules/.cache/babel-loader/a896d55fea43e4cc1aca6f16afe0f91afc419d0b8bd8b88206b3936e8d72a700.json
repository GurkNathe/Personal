{"ast":null,"code":"export async function create() {\n  return {\n    docs: {},\n    count: 0\n  };\n}\nexport async function get(store, id) {\n  return store.docs[id];\n}\nexport async function getMultiple(store, ids) {\n  const found = Array.from({\n    length: ids.length\n  });\n  for (let i = 0; i < ids.length; i++) {\n    found[i] = store.docs[ids[i]];\n  }\n  return found;\n}\nexport async function getAll(store) {\n  return store.docs;\n}\nexport async function store(store, id, doc) {\n  if (typeof store.docs[id] !== 'undefined') {\n    return false;\n  }\n  store.docs[id] = doc;\n  store.count++;\n  return true;\n}\nexport async function remove(store, id) {\n  if (typeof store.docs[id] === 'undefined') {\n    return false;\n  }\n  delete store.docs[id];\n  store.count--;\n  return true;\n}\nexport async function count(store) {\n  return store.count;\n}\nexport async function load(raw) {\n  const rawDocument = raw;\n  return {\n    docs: rawDocument.docs,\n    count: rawDocument.count\n  };\n}\nexport async function save(store) {\n  return {\n    docs: store.docs,\n    count: store.count\n  };\n}\nexport async function createDocumentsStore() {\n  return {\n    create,\n    get,\n    getMultiple,\n    getAll,\n    store,\n    remove,\n    count,\n    load,\n    save\n  };\n}","map":{"version":3,"names":["create","docs","count","get","store","id","getMultiple","ids","found","Array","from","length","i","getAll","doc","remove","load","raw","rawDocument","save","createDocumentsStore"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.0.3/node_modules/@orama/orama/src/components/documents-store.ts"],"sourcesContent":["import { Document, IDocumentsStore, OpaqueDocumentStore } from '../types.js'\n\nexport interface DocumentsStore extends OpaqueDocumentStore {\n  docs: Record<string, Document | undefined>\n  count: number\n}\n\nexport type DefaultDocumentsStore = IDocumentsStore<DocumentsStore>\n\nexport async function create(): Promise<DocumentsStore> {\n  return {\n    docs: {},\n    count: 0,\n  }\n}\n\nexport async function get(store: DocumentsStore, id: string): Promise<Document | undefined> {\n  return store.docs[id]\n}\n\nexport async function getMultiple(store: DocumentsStore, ids: string[]): Promise<(Document | undefined)[]> {\n  const found: (Document | undefined)[] = Array.from({ length: ids.length })\n\n  for (let i = 0; i < ids.length; i++) {\n    found[i] = store.docs[ids[i]]\n  }\n\n  return found\n}\n\nexport async function getAll(store: DocumentsStore): Promise<Record<string, Document>> {\n  return store.docs as Record<string, Document>\n}\n\nexport async function store(store: DocumentsStore, id: string, doc: Document): Promise<boolean> {\n  if (typeof store.docs[id] !== 'undefined') {\n    return false\n  }\n\n  store.docs[id] = doc\n  store.count++\n\n  return true\n}\n\nexport async function remove(store: DocumentsStore, id: string): Promise<boolean> {\n  if (typeof store.docs[id] === 'undefined') {\n    return false\n  }\n\n  delete store.docs[id]\n  store.count--\n\n  return true\n}\n\nexport async function count(store: DocumentsStore): Promise<number> {\n  return store.count\n}\n\nexport async function load<R = unknown>(raw: R): Promise<DocumentsStore> {\n  const rawDocument = raw as DocumentsStore\n\n  return {\n    docs: rawDocument.docs,\n    count: rawDocument.count,\n  }\n}\n\nexport async function save<R = unknown>(store: DocumentsStore): Promise<R> {\n  return {\n    docs: store.docs,\n    count: store.count,\n  } as R\n}\n\nexport async function createDocumentsStore(): Promise<DefaultDocumentsStore> {\n  return {\n    create,\n    get,\n    getMultiple,\n    getAll,\n    store,\n    remove,\n    count,\n    load,\n    save,\n  }\n}\n"],"mappings":"AASA,OAAO,eAAeA,OAAA,EAAkC;EACtD,OAAO;IACLC,IAAA,EAAM,CAAC;IACPC,KAAA,EAAO;EACT;AACF;AAEA,OAAO,eAAeC,IAAIC,KAAqB,EAAEC,EAAU,EAAiC;EAC1F,OAAOD,KAAA,CAAMH,IAAI,CAACI,EAAA,CAAG;AACvB;AAEA,OAAO,eAAeC,YAAYF,KAAqB,EAAEG,GAAa,EAAqC;EACzG,MAAMC,KAAA,GAAkCC,KAAA,CAAMC,IAAI,CAAC;IAAEC,MAAA,EAAQJ,GAAA,CAAII;EAAO;EAExE,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIL,GAAA,CAAII,MAAM,EAAEC,CAAA,IAAK;IACnCJ,KAAK,CAACI,CAAA,CAAE,GAAGR,KAAA,CAAMH,IAAI,CAACM,GAAG,CAACK,CAAA,CAAE,CAAC;EAC/B;EAEA,OAAOJ,KAAA;AACT;AAEA,OAAO,eAAeK,OAAOT,KAAqB,EAAqC;EACrF,OAAOA,KAAA,CAAMH,IAAI;AACnB;AAEA,OAAO,eAAeG,MAAMA,KAAqB,EAAEC,EAAU,EAAES,GAAa,EAAoB;EAC9F,IAAI,OAAOV,KAAA,CAAMH,IAAI,CAACI,EAAA,CAAG,KAAK,aAAa;IACzC,OAAO,KAAK;EACd;EAEAD,KAAA,CAAMH,IAAI,CAACI,EAAA,CAAG,GAAGS,GAAA;EACjBV,KAAA,CAAMF,KAAK;EAEX,OAAO,IAAI;AACb;AAEA,OAAO,eAAea,OAAOX,KAAqB,EAAEC,EAAU,EAAoB;EAChF,IAAI,OAAOD,KAAA,CAAMH,IAAI,CAACI,EAAA,CAAG,KAAK,aAAa;IACzC,OAAO,KAAK;EACd;EAEA,OAAOD,KAAA,CAAMH,IAAI,CAACI,EAAA,CAAG;EACrBD,KAAA,CAAMF,KAAK;EAEX,OAAO,IAAI;AACb;AAEA,OAAO,eAAeA,MAAME,KAAqB,EAAmB;EAClE,OAAOA,KAAA,CAAMF,KAAK;AACpB;AAEA,OAAO,eAAec,KAAkBC,GAAM,EAA2B;EACvE,MAAMC,WAAA,GAAcD,GAAA;EAEpB,OAAO;IACLhB,IAAA,EAAMiB,WAAA,CAAYjB,IAAI;IACtBC,KAAA,EAAOgB,WAAA,CAAYhB;EACrB;AACF;AAEA,OAAO,eAAeiB,KAAkBf,KAAqB,EAAc;EACzE,OAAO;IACLH,IAAA,EAAMG,KAAA,CAAMH,IAAI;IAChBC,KAAA,EAAOE,KAAA,CAAMF;EACf;AACF;AAEA,OAAO,eAAekB,qBAAA,EAAuD;EAC3E,OAAO;IACLpB,MAAA;IACAG,GAAA;IACAG,WAAA;IACAO,MAAA;IACAT,KAAA;IACAW,MAAA;IACAb,KAAA;IACAc,IAAA;IACAG;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}