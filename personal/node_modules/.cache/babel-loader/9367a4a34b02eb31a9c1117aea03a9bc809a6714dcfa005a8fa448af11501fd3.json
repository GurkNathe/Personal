{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from \"three\";\nvar _normalData = [[-0.525731, 0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0, 0, 1], [0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0, 0.850651], [0.295242, 0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0], [0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0, 1, 0], [0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0], [1, 0, 0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0], [0.955423, -0.295242, 0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0, 0.525731, -0.850651], [-0.525731, 0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0, -0.955423], [-0.16246, 0.262866, -0.951056], [0, 0, -1], [0.295242, 0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0, -0.955423, -0.295242], [0, -1, 0], [0.262866, -0.951056, -0.16246], [0, -0.850651, 0.525731], [0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0], [-0.951056, 0.16246, 0.262866], [-1, 0, 0], [-0.850651, 0, 0.525731], [-0.955423, -0.295242, 0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\nvar MD2Loader = /*#__PURE__*/function (_Loader) {\n  _inherits(MD2Loader, _Loader);\n  var _super = _createSuper(MD2Loader);\n  function MD2Loader(manager) {\n    _classCallCheck(this, MD2Loader);\n    return _super.call(this, manager);\n  }\n  _createClass(MD2Loader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(buffer) {\n      var data = new DataView(buffer);\n      var header = {};\n      var headerNames = [\"ident\", \"version\", \"skinwidth\", \"skinheight\", \"framesize\", \"num_skins\", \"num_vertices\", \"num_st\", \"num_tris\", \"num_glcmds\", \"num_frames\", \"offset_skins\", \"offset_st\", \"offset_tris\", \"offset_frames\", \"offset_glcmds\", \"offset_end\"];\n      for (var i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error(\"Not a valid MD2 file\");\n        return;\n      }\n      if (header.offset_end !== data.byteLength) {\n        console.error(\"Corrupted MD2 file\");\n        return;\n      }\n      var geometry = new BufferGeometry();\n      var uvsTemp = [];\n      var offset = header.offset_st;\n      for (var _i = 0, l = header.num_st; _i < l; _i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      }\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n      for (var _i2 = 0, _l = header.num_tris; _i2 < _l; _i2++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      }\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n      for (var _i3 = 0, _l2 = header.num_frames; _i3 < _l2; _i3++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n        for (var j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n        for (var _j = 0; _j < header.num_vertices; _j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = _normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y);\n          frame.normals.push(n[0], n[2], n[1]);\n        }\n        frames.push(frame);\n      }\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n      for (var _i4 = 0, _l3 = vertexIndices.length; _i4 < _l3; _i4++) {\n        var vertexIndex = vertexIndices[_i4];\n        var stride = vertexIndex * 3;\n        var _x = verticesTemp[stride];\n        var _y = verticesTemp[stride + 1];\n        var _z = verticesTemp[stride + 2];\n        positions.push(_x, _y, _z);\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz);\n        var uvIndex = uvIndices[_i4];\n        stride = uvIndex * 2;\n        var _u = uvsTemp[stride];\n        var _v = uvsTemp[stride + 1];\n        uvs.push(_u, _v);\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n      var morphPositions = [];\n      var morphNormals = [];\n      for (var _i5 = 0, _l4 = frames.length; _i5 < _l4; _i5++) {\n        var _frame = frames[_i5];\n        var attributeName = _frame.name;\n        if (_frame.vertices.length > 0) {\n          var positions2 = [];\n          for (var _j2 = 0, jl = vertexIndices.length; _j2 < jl; _j2++) {\n            var _vertexIndex = vertexIndices[_j2];\n            var _stride = _vertexIndex * 3;\n            var _x2 = _frame.vertices[_stride];\n            var _y2 = _frame.vertices[_stride + 1];\n            var _z2 = _frame.vertices[_stride + 2];\n            positions2.push(_x2, _y2, _z2);\n          }\n          var positionAttribute = new Float32BufferAttribute(positions2, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n        if (_frame.normals.length > 0) {\n          var normals2 = [];\n          for (var _j3 = 0, _jl = vertexIndices.length; _j3 < _jl; _j3++) {\n            var _vertexIndex2 = vertexIndices[_j3];\n            var _stride2 = _vertexIndex2 * 3;\n            var _nx = _frame.normals[_stride2];\n            var _ny = _frame.normals[_stride2 + 1];\n            var _nz = _frame.normals[_stride2 + 2];\n            normals2.push(_nx, _ny, _nz);\n          }\n          var normalAttribute = new Float32BufferAttribute(normals2, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    }\n  }]);\n  return MD2Loader;\n}(Loader);\nexport { MD2Loader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Vector3","Float32BufferAttribute","AnimationClip","_normalData","MD2Loader","_Loader","_inherits","_super","_createSuper","manager","_classCallCheck","call","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","scale","string","frames","offset_frames","num_frames","set","getFloat32","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","vertexIndex","stride","nx","ny","nz","uvIndex","setAttribute","morphPositions","morphNormals","attributeName","positions2","jl","positionAttribute","normals2","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","CreateClipsFromMorphTargetSequences"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/MD2Loader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from \"three\";\nconst _normalData = [\n  [-0.525731, 0, 0.850651],\n  [-0.442863, 0.238856, 0.864188],\n  [-0.295242, 0, 0.955423],\n  [-0.309017, 0.5, 0.809017],\n  [-0.16246, 0.262866, 0.951056],\n  [0, 0, 1],\n  [0, 0.850651, 0.525731],\n  [-0.147621, 0.716567, 0.681718],\n  [0.147621, 0.716567, 0.681718],\n  [0, 0.525731, 0.850651],\n  [0.309017, 0.5, 0.809017],\n  [0.525731, 0, 0.850651],\n  [0.295242, 0, 0.955423],\n  [0.442863, 0.238856, 0.864188],\n  [0.16246, 0.262866, 0.951056],\n  [-0.681718, 0.147621, 0.716567],\n  [-0.809017, 0.309017, 0.5],\n  [-0.587785, 0.425325, 0.688191],\n  [-0.850651, 0.525731, 0],\n  [-0.864188, 0.442863, 0.238856],\n  [-0.716567, 0.681718, 0.147621],\n  [-0.688191, 0.587785, 0.425325],\n  [-0.5, 0.809017, 0.309017],\n  [-0.238856, 0.864188, 0.442863],\n  [-0.425325, 0.688191, 0.587785],\n  [-0.716567, 0.681718, -0.147621],\n  [-0.5, 0.809017, -0.309017],\n  [-0.525731, 0.850651, 0],\n  [0, 0.850651, -0.525731],\n  [-0.238856, 0.864188, -0.442863],\n  [0, 0.955423, -0.295242],\n  [-0.262866, 0.951056, -0.16246],\n  [0, 1, 0],\n  [0, 0.955423, 0.295242],\n  [-0.262866, 0.951056, 0.16246],\n  [0.238856, 0.864188, 0.442863],\n  [0.262866, 0.951056, 0.16246],\n  [0.5, 0.809017, 0.309017],\n  [0.238856, 0.864188, -0.442863],\n  [0.262866, 0.951056, -0.16246],\n  [0.5, 0.809017, -0.309017],\n  [0.850651, 0.525731, 0],\n  [0.716567, 0.681718, 0.147621],\n  [0.716567, 0.681718, -0.147621],\n  [0.525731, 0.850651, 0],\n  [0.425325, 0.688191, 0.587785],\n  [0.864188, 0.442863, 0.238856],\n  [0.688191, 0.587785, 0.425325],\n  [0.809017, 0.309017, 0.5],\n  [0.681718, 0.147621, 0.716567],\n  [0.587785, 0.425325, 0.688191],\n  [0.955423, 0.295242, 0],\n  [1, 0, 0],\n  [0.951056, 0.16246, 0.262866],\n  [0.850651, -0.525731, 0],\n  [0.955423, -0.295242, 0],\n  [0.864188, -0.442863, 0.238856],\n  [0.951056, -0.16246, 0.262866],\n  [0.809017, -0.309017, 0.5],\n  [0.681718, -0.147621, 0.716567],\n  [0.850651, 0, 0.525731],\n  [0.864188, 0.442863, -0.238856],\n  [0.809017, 0.309017, -0.5],\n  [0.951056, 0.16246, -0.262866],\n  [0.525731, 0, -0.850651],\n  [0.681718, 0.147621, -0.716567],\n  [0.681718, -0.147621, -0.716567],\n  [0.850651, 0, -0.525731],\n  [0.809017, -0.309017, -0.5],\n  [0.864188, -0.442863, -0.238856],\n  [0.951056, -0.16246, -0.262866],\n  [0.147621, 0.716567, -0.681718],\n  [0.309017, 0.5, -0.809017],\n  [0.425325, 0.688191, -0.587785],\n  [0.442863, 0.238856, -0.864188],\n  [0.587785, 0.425325, -0.688191],\n  [0.688191, 0.587785, -0.425325],\n  [-0.147621, 0.716567, -0.681718],\n  [-0.309017, 0.5, -0.809017],\n  [0, 0.525731, -0.850651],\n  [-0.525731, 0, -0.850651],\n  [-0.442863, 0.238856, -0.864188],\n  [-0.295242, 0, -0.955423],\n  [-0.16246, 0.262866, -0.951056],\n  [0, 0, -1],\n  [0.295242, 0, -0.955423],\n  [0.16246, 0.262866, -0.951056],\n  [-0.442863, -0.238856, -0.864188],\n  [-0.309017, -0.5, -0.809017],\n  [-0.16246, -0.262866, -0.951056],\n  [0, -0.850651, -0.525731],\n  [-0.147621, -0.716567, -0.681718],\n  [0.147621, -0.716567, -0.681718],\n  [0, -0.525731, -0.850651],\n  [0.309017, -0.5, -0.809017],\n  [0.442863, -0.238856, -0.864188],\n  [0.16246, -0.262866, -0.951056],\n  [0.238856, -0.864188, -0.442863],\n  [0.5, -0.809017, -0.309017],\n  [0.425325, -0.688191, -0.587785],\n  [0.716567, -0.681718, -0.147621],\n  [0.688191, -0.587785, -0.425325],\n  [0.587785, -0.425325, -0.688191],\n  [0, -0.955423, -0.295242],\n  [0, -1, 0],\n  [0.262866, -0.951056, -0.16246],\n  [0, -0.850651, 0.525731],\n  [0, -0.955423, 0.295242],\n  [0.238856, -0.864188, 0.442863],\n  [0.262866, -0.951056, 0.16246],\n  [0.5, -0.809017, 0.309017],\n  [0.716567, -0.681718, 0.147621],\n  [0.525731, -0.850651, 0],\n  [-0.238856, -0.864188, -0.442863],\n  [-0.5, -0.809017, -0.309017],\n  [-0.262866, -0.951056, -0.16246],\n  [-0.850651, -0.525731, 0],\n  [-0.716567, -0.681718, -0.147621],\n  [-0.716567, -0.681718, 0.147621],\n  [-0.525731, -0.850651, 0],\n  [-0.5, -0.809017, 0.309017],\n  [-0.238856, -0.864188, 0.442863],\n  [-0.262866, -0.951056, 0.16246],\n  [-0.864188, -0.442863, 0.238856],\n  [-0.809017, -0.309017, 0.5],\n  [-0.688191, -0.587785, 0.425325],\n  [-0.681718, -0.147621, 0.716567],\n  [-0.442863, -0.238856, 0.864188],\n  [-0.587785, -0.425325, 0.688191],\n  [-0.309017, -0.5, 0.809017],\n  [-0.147621, -0.716567, 0.681718],\n  [-0.425325, -0.688191, 0.587785],\n  [-0.16246, -0.262866, 0.951056],\n  [0.442863, -0.238856, 0.864188],\n  [0.16246, -0.262866, 0.951056],\n  [0.309017, -0.5, 0.809017],\n  [0.147621, -0.716567, 0.681718],\n  [0, -0.525731, 0.850651],\n  [0.425325, -0.688191, 0.587785],\n  [0.587785, -0.425325, 0.688191],\n  [0.688191, -0.587785, 0.425325],\n  [-0.955423, 0.295242, 0],\n  [-0.951056, 0.16246, 0.262866],\n  [-1, 0, 0],\n  [-0.850651, 0, 0.525731],\n  [-0.955423, -0.295242, 0],\n  [-0.951056, -0.16246, 0.262866],\n  [-0.864188, 0.442863, -0.238856],\n  [-0.951056, 0.16246, -0.262866],\n  [-0.809017, 0.309017, -0.5],\n  [-0.864188, -0.442863, -0.238856],\n  [-0.951056, -0.16246, -0.262866],\n  [-0.809017, -0.309017, -0.5],\n  [-0.681718, 0.147621, -0.716567],\n  [-0.681718, -0.147621, -0.716567],\n  [-0.850651, 0, -0.525731],\n  [-0.688191, 0.587785, -0.425325],\n  [-0.587785, 0.425325, -0.688191],\n  [-0.425325, 0.688191, -0.587785],\n  [-0.425325, -0.688191, -0.587785],\n  [-0.587785, -0.425325, -0.688191],\n  [-0.688191, -0.587785, -0.425325]\n];\nclass MD2Loader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(buffer) {\n    const data = new DataView(buffer);\n    const header = {};\n    const headerNames = [\n      \"ident\",\n      \"version\",\n      \"skinwidth\",\n      \"skinheight\",\n      \"framesize\",\n      \"num_skins\",\n      \"num_vertices\",\n      \"num_st\",\n      \"num_tris\",\n      \"num_glcmds\",\n      \"num_frames\",\n      \"offset_skins\",\n      \"offset_st\",\n      \"offset_tris\",\n      \"offset_frames\",\n      \"offset_glcmds\",\n      \"offset_end\"\n    ];\n    for (let i = 0; i < headerNames.length; i++) {\n      header[headerNames[i]] = data.getInt32(i * 4, true);\n    }\n    if (header.ident !== 844121161 || header.version !== 8) {\n      console.error(\"Not a valid MD2 file\");\n      return;\n    }\n    if (header.offset_end !== data.byteLength) {\n      console.error(\"Corrupted MD2 file\");\n      return;\n    }\n    const geometry = new BufferGeometry();\n    const uvsTemp = [];\n    let offset = header.offset_st;\n    for (let i = 0, l = header.num_st; i < l; i++) {\n      const u = data.getInt16(offset + 0, true);\n      const v = data.getInt16(offset + 2, true);\n      uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n      offset += 4;\n    }\n    offset = header.offset_tris;\n    const vertexIndices = [];\n    const uvIndices = [];\n    for (let i = 0, l = header.num_tris; i < l; i++) {\n      vertexIndices.push(\n        data.getUint16(offset + 0, true),\n        data.getUint16(offset + 2, true),\n        data.getUint16(offset + 4, true)\n      );\n      uvIndices.push(\n        data.getUint16(offset + 6, true),\n        data.getUint16(offset + 8, true),\n        data.getUint16(offset + 10, true)\n      );\n      offset += 12;\n    }\n    const translation = new Vector3();\n    const scale = new Vector3();\n    const string = [];\n    const frames = [];\n    offset = header.offset_frames;\n    for (let i = 0, l = header.num_frames; i < l; i++) {\n      scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n      translation.set(\n        data.getFloat32(offset + 12, true),\n        data.getFloat32(offset + 16, true),\n        data.getFloat32(offset + 20, true)\n      );\n      offset += 24;\n      for (let j = 0; j < 16; j++) {\n        const character = data.getUint8(offset + j, true);\n        if (character === 0)\n          break;\n        string[j] = character;\n      }\n      const frame = {\n        name: String.fromCharCode.apply(null, string),\n        vertices: [],\n        normals: []\n      };\n      offset += 16;\n      for (let j = 0; j < header.num_vertices; j++) {\n        let x = data.getUint8(offset++, true);\n        let y = data.getUint8(offset++, true);\n        let z = data.getUint8(offset++, true);\n        const n = _normalData[data.getUint8(offset++, true)];\n        x = x * scale.x + translation.x;\n        y = y * scale.y + translation.y;\n        z = z * scale.z + translation.z;\n        frame.vertices.push(x, z, y);\n        frame.normals.push(n[0], n[2], n[1]);\n      }\n      frames.push(frame);\n    }\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const verticesTemp = frames[0].vertices;\n    const normalsTemp = frames[0].normals;\n    for (let i = 0, l = vertexIndices.length; i < l; i++) {\n      const vertexIndex = vertexIndices[i];\n      let stride = vertexIndex * 3;\n      const x = verticesTemp[stride];\n      const y = verticesTemp[stride + 1];\n      const z = verticesTemp[stride + 2];\n      positions.push(x, y, z);\n      const nx = normalsTemp[stride];\n      const ny = normalsTemp[stride + 1];\n      const nz = normalsTemp[stride + 2];\n      normals.push(nx, ny, nz);\n      const uvIndex = uvIndices[i];\n      stride = uvIndex * 2;\n      const u = uvsTemp[stride];\n      const v = uvsTemp[stride + 1];\n      uvs.push(u, v);\n    }\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n    geometry.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n    const morphPositions = [];\n    const morphNormals = [];\n    for (let i = 0, l = frames.length; i < l; i++) {\n      const frame = frames[i];\n      const attributeName = frame.name;\n      if (frame.vertices.length > 0) {\n        const positions2 = [];\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j];\n          const stride = vertexIndex * 3;\n          const x = frame.vertices[stride];\n          const y = frame.vertices[stride + 1];\n          const z = frame.vertices[stride + 2];\n          positions2.push(x, y, z);\n        }\n        const positionAttribute = new Float32BufferAttribute(positions2, 3);\n        positionAttribute.name = attributeName;\n        morphPositions.push(positionAttribute);\n      }\n      if (frame.normals.length > 0) {\n        const normals2 = [];\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j];\n          const stride = vertexIndex * 3;\n          const nx = frame.normals[stride];\n          const ny = frame.normals[stride + 1];\n          const nz = frame.normals[stride + 2];\n          normals2.push(nx, ny, nz);\n        }\n        const normalAttribute = new Float32BufferAttribute(normals2, 3);\n        normalAttribute.name = attributeName;\n        morphNormals.push(normalAttribute);\n      }\n    }\n    geometry.morphAttributes.position = morphPositions;\n    geometry.morphAttributes.normal = morphNormals;\n    geometry.morphTargetsRelative = false;\n    geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n    return geometry;\n  }\n}\nexport {\n  MD2Loader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}