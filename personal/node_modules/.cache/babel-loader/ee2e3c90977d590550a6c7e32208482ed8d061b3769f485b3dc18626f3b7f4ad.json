{"ast":null,"code":"import { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from \"three\";\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({\n      fog: false\n    });\n    super(geometry, material);\n    this.light = light;\n    this.color = color;\n    this.type = \"RectAreaLightHelper\";\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute(\"position\", new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n  }\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n    if (this.color !== void 0) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nexport { RectAreaLightHelper };","map":{"version":3,"names":["Line","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","Mesh","MeshBasicMaterial","BackSide","RectAreaLightHelper","constructor","light","color","positions","geometry","setAttribute","computeBoundingSphere","material","fog","type","positions2","geometry2","add","side","updateMatrixWorld","scale","set","width","height","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","extractRotation","copyPosition","dispose"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/helpers/RectAreaLightHelper.js"],"sourcesContent":["import { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from \"three\";\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({ fog: false });\n    super(geometry, material);\n    this.light = light;\n    this.color = color;\n    this.type = \"RectAreaLightHelper\";\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute(\"position\", new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({ side: BackSide, fog: false })));\n  }\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n    if (this.color !== void 0) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1)\n        c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nexport {\n  RectAreaLightHelper\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}