{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Curve, Vector4, Vector3 } from \"three\";\nimport { calcBSplinePoint, calcNURBSDerivatives } from \"./NURBSUtils.js\";\nvar NURBSCurve = /*#__PURE__*/function (_Curve) {\n  _inherits(NURBSCurve, _Curve);\n  var _super = _createSuper(NURBSCurve);\n  function NURBSCurve(degree, knots, controlPoints, startKnot, endKnot) {\n    var _this;\n    _classCallCheck(this, NURBSCurve);\n    _this = _super.call(this);\n    _this.degree = degree;\n    _this.knots = knots;\n    _this.controlPoints = [];\n    _this.startKnot = startKnot || 0;\n    _this.endKnot = endKnot || _this.knots.length - 1;\n    for (var i = 0; i < controlPoints.length; ++i) {\n      var point = controlPoints[i];\n      _this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n    }\n    return _this;\n  }\n  _createClass(NURBSCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]);\n      var hpoint = calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n      if (hpoint.w != 1) {\n        hpoint.divideScalar(hpoint.w);\n      }\n      return point.set(hpoint.x, hpoint.y, hpoint.z);\n    }\n  }, {\n    key: \"getTangent\",\n    value: function getTangent(t, optionalTarget) {\n      var tangent = optionalTarget || new Vector3();\n      var u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n      var ders = calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n      tangent.copy(ders[1]).normalize();\n      return tangent;\n    }\n  }]);\n  return NURBSCurve;\n}(Curve);\nexport { NURBSCurve };","map":{"version":3,"names":["Curve","Vector4","Vector3","calcBSplinePoint","calcNURBSDerivatives","NURBSCurve","_Curve","_inherits","_super","_createSuper","degree","knots","controlPoints","startKnot","endKnot","_this","_classCallCheck","call","length","i","point","x","y","z","w","_createClass","key","value","getPoint","t","optionalTarget","u","hpoint","divideScalar","set","getTangent","tangent","ders","copy","normalize"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/curves/NURBSCurve.js"],"sourcesContent":["import { Curve, Vector4, Vector3 } from \"three\";\nimport { calcBSplinePoint, calcNURBSDerivatives } from \"./NURBSUtils.js\";\nclass NURBSCurve extends Curve {\n  constructor(degree, knots, controlPoints, startKnot, endKnot) {\n    super();\n    this.degree = degree;\n    this.knots = knots;\n    this.controlPoints = [];\n    this.startKnot = startKnot || 0;\n    this.endKnot = endKnot || this.knots.length - 1;\n    for (let i = 0; i < controlPoints.length; ++i) {\n      const point = controlPoints[i];\n      this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n    }\n  }\n  getPoint(t, optionalTarget) {\n    const point = optionalTarget || new Vector3();\n    const u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]);\n    const hpoint = calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n    if (hpoint.w != 1) {\n      hpoint.divideScalar(hpoint.w);\n    }\n    return point.set(hpoint.x, hpoint.y, hpoint.z);\n  }\n  getTangent(t, optionalTarget) {\n    const tangent = optionalTarget || new Vector3();\n    const u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n    const ders = calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n    tangent.copy(ders[1]).normalize();\n    return tangent;\n  }\n}\nexport {\n  NURBSCurve\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}