{"ast":null,"code":"var BasicShader = {\n  uniforms: {},\n  vertexShader: [\"void main() {\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"void main() {\", \"\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\", \"}\"].join(\"\\n\")\n};\nexport { BasicShader };","map":{"version":3,"names":["BasicShader","uniforms","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/BasicShader.js"],"sourcesContent":["const BasicShader = {\n  uniforms: {},\n  vertexShader: [\n    \"void main() {\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\"void main() {\", \"\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\", \"}\"].join(\"\\n\")\n};\nexport {\n  BasicShader\n};\n"],"mappings":"AAAA,IAAMA,WAAW,GAAG;EAClBC,QAAQ,EAAE,CAAC,CAAC;EACZC,YAAY,EAAE,CACZ,eAAe,EACf,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CAAC,eAAe,EAAE,6CAA6C,EAAE,GAAG,CAAC,CAACD,IAAI,CAAC,IAAI;AACjG,CAAC;AACD,SACEH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}