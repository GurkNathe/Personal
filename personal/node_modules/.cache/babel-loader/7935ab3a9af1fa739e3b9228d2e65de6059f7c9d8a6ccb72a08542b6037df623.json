{"ast":null,"code":"import _regeneratorRuntime from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { useLoader } from '@react-three/fiber';\nimport { CubeTextureLoader, CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding } from 'three';\nimport { EXRLoader, RGBELoader } from 'three-stdlib';\nimport { suspend } from 'suspend-react';\nimport { presetsObj } from '../helpers/environment-assets.js';\nvar CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\nvar isPromise = function isPromise(promise) {\n  return typeof promise === 'object' && typeof promise.then === 'function';\n};\nvar isArray = function isArray(arr) {\n  return Array.isArray(arr);\n};\nfunction useEnvironment() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$files = _ref.files,\n    files = _ref$files === void 0 ? ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'] : _ref$files,\n    _ref$path = _ref.path,\n    path = _ref$path === void 0 ? '' : _ref$path,\n    _ref$preset = _ref.preset,\n    preset = _ref$preset === void 0 ? undefined : _ref$preset,\n    _ref$encoding = _ref.encoding,\n    encoding = _ref$encoding === void 0 ? undefined : _ref$encoding,\n    extensions = _ref.extensions;\n  var _files$split$pop;\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  } // Using promises that return inline-URLs by default\n\n  if (isPromise(files)) {\n    files = suspend( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(promise) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return promise;\n            case 2:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result.default);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [files]);\n  }\n  var isCubeMap = isArray(files);\n  var extension = !isArray(files) && ((_files$split$pop = files.split('.').pop()) == null ? void 0 : _files$split$pop.toLowerCase());\n  var loader = isCubeMap ? CubeTextureLoader : isPromise(files) || extension === 'exr' ? EXRLoader : extension === 'hdr' ? RGBELoader : null;\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  var loaderResult = useLoader(\n  // @ts-expect-error\n  loader, isCubeMap ? [files] : files, function (loader) {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  var texture = isCubeMap ?\n  // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\nexport { useEnvironment };","map":{"version":3,"names":["useLoader","CubeTextureLoader","CubeReflectionMapping","EquirectangularReflectionMapping","sRGBEncoding","LinearEncoding","EXRLoader","RGBELoader","suspend","presetsObj","CUBEMAP_ROOT","isPromise","promise","then","isArray","arr","Array","useEnvironment","_ref","arguments","length","undefined","_ref$files","files","_ref$path","path","_ref$preset","preset","_ref$encoding","encoding","extensions","_files$split$pop","Error","Object","keys","join","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_callee$","_context","prev","next","sent","abrupt","default","stop","_x","apply","isCubeMap","extension","split","pop","toLowerCase","loader","loaderResult","setPath","texture","mapping"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@react-three+drei@9.72.1_@react-three+fiber@8.13.0_@types+three@0.150.2_react-dom@18.2.0_react@18.2.0_three@0.151.3/node_modules/@react-three/drei/core/useEnvironment.js"],"sourcesContent":["import { useLoader } from '@react-three/fiber';\nimport { CubeTextureLoader, CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding } from 'three';\nimport { EXRLoader, RGBELoader } from 'three-stdlib';\nimport { suspend } from 'suspend-react';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\n\nconst isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst isArray = arr => Array.isArray(arr);\n\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n} = {}) {\n  var _files$split$pop;\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  } // Using promises that return inline-URLs by default\n\n\n  if (isPromise(files)) {\n    files = suspend(async promise => {\n      const result = await promise;\n      return result.default;\n    }, [files]);\n  }\n\n  const isCubeMap = isArray(files);\n  const extension = !isArray(files) && ((_files$split$pop = files.split('.').pop()) == null ? void 0 : _files$split$pop.toLowerCase());\n  const loader = isCubeMap ? CubeTextureLoader : isPromise(files) || extension === 'exr' ? EXRLoader : extension === 'hdr' ? RGBELoader : null;\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nexport { useEnvironment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}