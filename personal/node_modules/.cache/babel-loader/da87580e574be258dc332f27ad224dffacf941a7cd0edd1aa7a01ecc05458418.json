{"ast":null,"code":"var ACESFilmicToneMappingShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    exposure: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"#define saturate(a) clamp( a, 0.0, 1.0 )\", \"uniform sampler2D tDiffuse;\", \"uniform float exposure;\", \"varying vec2 vUv;\", \"vec3 RRTAndODTFit( vec3 v ) {\", \"\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\", \"\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\", \"\treturn a / b;\", \"}\", \"vec3 ACESFilmicToneMapping( vec3 color ) {\",\n  // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n  \"\tconst mat3 ACESInputMat = mat3(\", \"\t\tvec3( 0.59719, 0.07600, 0.02840 ),\",\n  // transposed from source\n  \"\t\tvec3( 0.35458, 0.90834, 0.13383 ),\", \"\t\tvec3( 0.04823, 0.01566, 0.83777 )\", \"\t);\",\n  // ODT_SAT => XYZ => D60_2_D65 => sRGB\n  \"\tconst mat3 ACESOutputMat = mat3(\", \"\t\tvec3(  1.60475, -0.10208, -0.00327 ),\",\n  // transposed from source\n  \"\t\tvec3( -0.53108,  1.10813, -0.07276 ),\", \"\t\tvec3( -0.07367, -0.00605,  1.07602 )\", \"\t);\", \"\tcolor = ACESInputMat * color;\",\n  // Apply RRT and ODT\n  \"\tcolor = RRTAndODTFit( color );\", \"\tcolor = ACESOutputMat * color;\",\n  // Clamp to [0, 1]\n  \"\treturn saturate( color );\", \"}\", \"void main() {\", \"\tvec4 tex = texture2D( tDiffuse, vUv );\", \"\ttex.rgb *= exposure / 0.6;\",\n  // pre-exposed, outside of the tone mapping function\n  \"\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );\", \"}\"].join(\"\\n\")\n};\nexport { ACESFilmicToneMappingShader };","map":{"version":3,"names":["ACESFilmicToneMappingShader","uniforms","tDiffuse","value","exposure","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/ACESFilmicToneMappingShader.js"],"sourcesContent":["const ACESFilmicToneMappingShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    exposure: { value: 1 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"#define saturate(a) clamp( a, 0.0, 1.0 )\",\n    \"uniform sampler2D tDiffuse;\",\n    \"uniform float exposure;\",\n    \"varying vec2 vUv;\",\n    \"vec3 RRTAndODTFit( vec3 v ) {\",\n    \"\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\",\n    \"\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\",\n    \"\treturn a / b;\",\n    \"}\",\n    \"vec3 ACESFilmicToneMapping( vec3 color ) {\",\n    // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n    \"\tconst mat3 ACESInputMat = mat3(\",\n    \"\t\tvec3( 0.59719, 0.07600, 0.02840 ),\",\n    // transposed from source\n    \"\t\tvec3( 0.35458, 0.90834, 0.13383 ),\",\n    \"\t\tvec3( 0.04823, 0.01566, 0.83777 )\",\n    \"\t);\",\n    // ODT_SAT => XYZ => D60_2_D65 => sRGB\n    \"\tconst mat3 ACESOutputMat = mat3(\",\n    \"\t\tvec3(  1.60475, -0.10208, -0.00327 ),\",\n    // transposed from source\n    \"\t\tvec3( -0.53108,  1.10813, -0.07276 ),\",\n    \"\t\tvec3( -0.07367, -0.00605,  1.07602 )\",\n    \"\t);\",\n    \"\tcolor = ACESInputMat * color;\",\n    // Apply RRT and ODT\n    \"\tcolor = RRTAndODTFit( color );\",\n    \"\tcolor = ACESOutputMat * color;\",\n    // Clamp to [0, 1]\n    \"\treturn saturate( color );\",\n    \"}\",\n    \"void main() {\",\n    \"\tvec4 tex = texture2D( tDiffuse, vUv );\",\n    \"\ttex.rgb *= exposure / 0.6;\",\n    // pre-exposed, outside of the tone mapping function\n    \"\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  ACESFilmicToneMappingShader\n};\n"],"mappings":"AAAA,IAAMA,2BAA2B,GAAG;EAClCC,QAAQ,EAAE;IACRC,QAAQ,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IACzBC,QAAQ,EAAE;MAAED,KAAK,EAAE;IAAE;EACvB,CAAC;EACDE,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,0CAA0C,EAC1C,6BAA6B,EAC7B,yBAAyB,EACzB,mBAAmB,EACnB,+BAA+B,EAC/B,gDAAgD,EAChD,wDAAwD,EACxD,gBAAgB,EAChB,GAAG,EACH,4CAA4C;EAC5C;EACA,kCAAkC,EAClC,sCAAsC;EACtC;EACA,sCAAsC,EACtC,qCAAqC,EACrC,KAAK;EACL;EACA,mCAAmC,EACnC,yCAAyC;EACzC;EACA,yCAAyC,EACzC,wCAAwC,EACxC,KAAK,EACL,gCAAgC;EAChC;EACA,iCAAiC,EACjC,iCAAiC;EACjC;EACA,4BAA4B,EAC5B,GAAG,EACH,eAAe,EACf,yCAAyC,EACzC,6BAA6B;EAC7B;EACA,kEAAkE,EAClE,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACEN,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}