{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { DotScreenShader } from \"../shaders/DotScreenShader.js\";\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    __publicField(this, \"uniforms\");\n    if (DotScreenShader === void 0) console.error(\"THREE.DotScreenPass relies on THREE.DotScreenShader\");\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== void 0) this.uniforms[\"center\"].value.copy(center);\n    if (angle !== void 0) this.uniforms[\"angle\"].value = angle;\n    if (scale !== void 0) this.uniforms[\"scale\"].value = scale;\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport { DotScreenPass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","DotScreenShader","DotScreenPass","constructor","center","angle","scale","console","error","shader","uniforms","clone","copy","material","vertexShader","fragmentShader","fsQuad","render","renderer","writeBuffer","readBuffer","texture","set","width","height","renderToScreen","setRenderTarget","clear"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/DotScreenPass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { DotScreenShader } from \"../shaders/DotScreenShader.js\";\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    __publicField(this, \"uniforms\");\n    if (DotScreenShader === void 0)\n      console.error(\"THREE.DotScreenPass relies on THREE.DotScreenShader\");\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== void 0)\n      this.uniforms[\"center\"].value.copy(center);\n    if (angle !== void 0)\n      this.uniforms[\"angle\"].value = angle;\n    if (scale !== void 0)\n      this.uniforms[\"scale\"].value = scale;\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n    this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear)\n        renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport {\n  DotScreenPass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}