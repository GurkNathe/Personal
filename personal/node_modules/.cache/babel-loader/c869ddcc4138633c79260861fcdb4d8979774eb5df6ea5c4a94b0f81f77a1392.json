{"ast":null,"code":"import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from \"three\";\nclass PDBLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  // Based on CanvasMol PDB parser\n  parse(text) {\n    function trim(text2) {\n      return text2.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\");\n    }\n    function capitalize(text2) {\n      return text2.charAt(0).toUpperCase() + text2.substr(1).toLowerCase();\n    }\n    function hash(s, e) {\n      return \"s\" + Math.min(s, e) + \"e\" + Math.max(s, e);\n    }\n    function parseBond(start, length, satom, i) {\n      const eatom = parseInt(lines[i].substr(start, length));\n      if (eatom) {\n        const h = hash(satom, eatom);\n        if (_bhash[h] === void 0) {\n          _bonds.push([satom - 1, eatom - 1, 1]);\n          _bhash[h] = _bonds.length - 1;\n        } else {}\n      }\n    }\n    function buildGeometry() {\n      const build = {\n        geometryAtoms: new BufferGeometry(),\n        geometryBonds: new BufferGeometry(),\n        json: {\n          atoms\n        }\n      };\n      const geometryAtoms = build.geometryAtoms;\n      const geometryBonds = build.geometryBonds;\n      const verticesAtoms = [];\n      const colorsAtoms = [];\n      const verticesBonds = [];\n      for (let i = 0, l = atoms.length; i < l; i++) {\n        const atom = atoms[i];\n        const x = atom[0];\n        const y = atom[1];\n        const z = atom[2];\n        verticesAtoms.push(x, y, z);\n        const r = atom[3][0] / 255;\n        const g = atom[3][1] / 255;\n        const b = atom[3][2] / 255;\n        colorsAtoms.push(r, g, b);\n      }\n      for (let i = 0, l = _bonds.length; i < l; i++) {\n        const bond = _bonds[i];\n        const start = bond[0];\n        const end = bond[1];\n        const startAtom = _atomMap[start];\n        const endAtom = _atomMap[end];\n        let x = startAtom[0];\n        let y = startAtom[1];\n        let z = startAtom[2];\n        verticesBonds.push(x, y, z);\n        x = endAtom[0];\n        y = endAtom[1];\n        z = endAtom[2];\n        verticesBonds.push(x, y, z);\n      }\n      geometryAtoms.setAttribute(\"position\", new Float32BufferAttribute(verticesAtoms, 3));\n      geometryAtoms.setAttribute(\"color\", new Float32BufferAttribute(colorsAtoms, 3));\n      geometryBonds.setAttribute(\"position\", new Float32BufferAttribute(verticesBonds, 3));\n      return build;\n    }\n    const CPK = {\n      h: [255, 255, 255],\n      he: [217, 255, 255],\n      li: [204, 128, 255],\n      be: [194, 255, 0],\n      b: [255, 181, 181],\n      c: [144, 144, 144],\n      n: [48, 80, 248],\n      o: [255, 13, 13],\n      f: [144, 224, 80],\n      ne: [179, 227, 245],\n      na: [171, 92, 242],\n      mg: [138, 255, 0],\n      al: [191, 166, 166],\n      si: [240, 200, 160],\n      p: [255, 128, 0],\n      s: [255, 255, 48],\n      cl: [31, 240, 31],\n      ar: [128, 209, 227],\n      k: [143, 64, 212],\n      ca: [61, 255, 0],\n      sc: [230, 230, 230],\n      ti: [191, 194, 199],\n      v: [166, 166, 171],\n      cr: [138, 153, 199],\n      mn: [156, 122, 199],\n      fe: [224, 102, 51],\n      co: [240, 144, 160],\n      ni: [80, 208, 80],\n      cu: [200, 128, 51],\n      zn: [125, 128, 176],\n      ga: [194, 143, 143],\n      ge: [102, 143, 143],\n      as: [189, 128, 227],\n      se: [255, 161, 0],\n      br: [166, 41, 41],\n      kr: [92, 184, 209],\n      rb: [112, 46, 176],\n      sr: [0, 255, 0],\n      y: [148, 255, 255],\n      zr: [148, 224, 224],\n      nb: [115, 194, 201],\n      mo: [84, 181, 181],\n      tc: [59, 158, 158],\n      ru: [36, 143, 143],\n      rh: [10, 125, 140],\n      pd: [0, 105, 133],\n      ag: [192, 192, 192],\n      cd: [255, 217, 143],\n      in: [166, 117, 115],\n      sn: [102, 128, 128],\n      sb: [158, 99, 181],\n      te: [212, 122, 0],\n      i: [148, 0, 148],\n      xe: [66, 158, 176],\n      cs: [87, 23, 143],\n      ba: [0, 201, 0],\n      la: [112, 212, 255],\n      ce: [255, 255, 199],\n      pr: [217, 255, 199],\n      nd: [199, 255, 199],\n      pm: [163, 255, 199],\n      sm: [143, 255, 199],\n      eu: [97, 255, 199],\n      gd: [69, 255, 199],\n      tb: [48, 255, 199],\n      dy: [31, 255, 199],\n      ho: [0, 255, 156],\n      er: [0, 230, 117],\n      tm: [0, 212, 82],\n      yb: [0, 191, 56],\n      lu: [0, 171, 36],\n      hf: [77, 194, 255],\n      ta: [77, 166, 255],\n      w: [33, 148, 214],\n      re: [38, 125, 171],\n      os: [38, 102, 150],\n      ir: [23, 84, 135],\n      pt: [208, 208, 224],\n      au: [255, 209, 35],\n      hg: [184, 184, 208],\n      tl: [166, 84, 77],\n      pb: [87, 89, 97],\n      bi: [158, 79, 181],\n      po: [171, 92, 0],\n      at: [117, 79, 69],\n      rn: [66, 130, 150],\n      fr: [66, 0, 102],\n      ra: [0, 125, 0],\n      ac: [112, 171, 250],\n      th: [0, 186, 255],\n      pa: [0, 161, 255],\n      u: [0, 143, 255],\n      np: [0, 128, 255],\n      pu: [0, 107, 255],\n      am: [84, 92, 242],\n      cm: [120, 92, 227],\n      bk: [138, 79, 227],\n      cf: [161, 54, 212],\n      es: [179, 31, 212],\n      fm: [179, 31, 186],\n      md: [179, 13, 166],\n      no: [189, 13, 135],\n      lr: [199, 0, 102],\n      rf: [204, 0, 89],\n      db: [209, 0, 79],\n      sg: [217, 0, 69],\n      bh: [224, 0, 56],\n      hs: [230, 0, 46],\n      mt: [235, 0, 38],\n      ds: [235, 0, 38],\n      rg: [235, 0, 38],\n      cn: [235, 0, 38],\n      uut: [235, 0, 38],\n      uuq: [235, 0, 38],\n      uup: [235, 0, 38],\n      uuh: [235, 0, 38],\n      uus: [235, 0, 38],\n      uuo: [235, 0, 38]\n    };\n    const atoms = [];\n    const _bonds = [];\n    const _bhash = {};\n    const _atomMap = {};\n    const lines = text.split(\"\\n\");\n    for (let i = 0, l = lines.length; i < l; i++) {\n      if (lines[i].substr(0, 4) === \"ATOM\" || lines[i].substr(0, 6) === \"HETATM\") {\n        const x = parseFloat(lines[i].substr(30, 7));\n        const y = parseFloat(lines[i].substr(38, 7));\n        const z = parseFloat(lines[i].substr(46, 7));\n        const index = parseInt(lines[i].substr(6, 5)) - 1;\n        let e = trim(lines[i].substr(76, 2)).toLowerCase();\n        if (e === \"\") {\n          e = trim(lines[i].substr(12, 2)).toLowerCase();\n        }\n        const atomData = [x, y, z, CPK[e], capitalize(e)];\n        atoms.push(atomData);\n        _atomMap[index] = atomData;\n      } else if (lines[i].substr(0, 6) === \"CONECT\") {\n        const satom = parseInt(lines[i].substr(6, 5));\n        parseBond(11, 5, satom, i);\n        parseBond(16, 5, satom, i);\n        parseBond(21, 5, satom, i);\n        parseBond(26, 5, satom, i);\n      }\n    }\n    return buildGeometry();\n  }\n}\nexport { PDBLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Float32BufferAttribute","PDBLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","trim","text2","replace","capitalize","charAt","toUpperCase","substr","toLowerCase","hash","s","Math","min","max","parseBond","start","length","satom","i","eatom","parseInt","lines","h","_bhash","_bonds","push","buildGeometry","build","geometryAtoms","geometryBonds","json","atoms","verticesAtoms","colorsAtoms","verticesBonds","l","atom","x","y","z","r","g","b","bond","end","startAtom","_atomMap","endAtom","setAttribute","CPK","he","li","be","c","n","o","f","ne","na","mg","al","si","p","cl","ar","k","ca","sc","ti","v","cr","mn","fe","co","ni","cu","zn","ga","ge","as","se","br","kr","rb","sr","zr","nb","mo","tc","ru","rh","pd","ag","cd","in","sn","sb","te","xe","cs","ba","la","ce","pr","nd","pm","sm","eu","gd","tb","dy","ho","er","tm","yb","lu","hf","ta","w","re","os","ir","pt","au","hg","tl","pb","bi","po","at","rn","fr","ra","ac","th","pa","u","np","pu","am","cm","bk","cf","es","fm","md","no","lr","rf","db","sg","bh","hs","mt","ds","rg","cn","uut","uuq","uup","uuh","uus","uuo","split","parseFloat","index","atomData"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/PDBLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from \"three\";\nclass PDBLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  // Based on CanvasMol PDB parser\n  parse(text) {\n    function trim(text2) {\n      return text2.replace(/^\\s\\s*/, \"\").replace(/\\s\\s*$/, \"\");\n    }\n    function capitalize(text2) {\n      return text2.charAt(0).toUpperCase() + text2.substr(1).toLowerCase();\n    }\n    function hash(s, e) {\n      return \"s\" + Math.min(s, e) + \"e\" + Math.max(s, e);\n    }\n    function parseBond(start, length, satom, i) {\n      const eatom = parseInt(lines[i].substr(start, length));\n      if (eatom) {\n        const h = hash(satom, eatom);\n        if (_bhash[h] === void 0) {\n          _bonds.push([satom - 1, eatom - 1, 1]);\n          _bhash[h] = _bonds.length - 1;\n        } else {\n        }\n      }\n    }\n    function buildGeometry() {\n      const build = {\n        geometryAtoms: new BufferGeometry(),\n        geometryBonds: new BufferGeometry(),\n        json: {\n          atoms\n        }\n      };\n      const geometryAtoms = build.geometryAtoms;\n      const geometryBonds = build.geometryBonds;\n      const verticesAtoms = [];\n      const colorsAtoms = [];\n      const verticesBonds = [];\n      for (let i = 0, l = atoms.length; i < l; i++) {\n        const atom = atoms[i];\n        const x = atom[0];\n        const y = atom[1];\n        const z = atom[2];\n        verticesAtoms.push(x, y, z);\n        const r = atom[3][0] / 255;\n        const g = atom[3][1] / 255;\n        const b = atom[3][2] / 255;\n        colorsAtoms.push(r, g, b);\n      }\n      for (let i = 0, l = _bonds.length; i < l; i++) {\n        const bond = _bonds[i];\n        const start = bond[0];\n        const end = bond[1];\n        const startAtom = _atomMap[start];\n        const endAtom = _atomMap[end];\n        let x = startAtom[0];\n        let y = startAtom[1];\n        let z = startAtom[2];\n        verticesBonds.push(x, y, z);\n        x = endAtom[0];\n        y = endAtom[1];\n        z = endAtom[2];\n        verticesBonds.push(x, y, z);\n      }\n      geometryAtoms.setAttribute(\"position\", new Float32BufferAttribute(verticesAtoms, 3));\n      geometryAtoms.setAttribute(\"color\", new Float32BufferAttribute(colorsAtoms, 3));\n      geometryBonds.setAttribute(\"position\", new Float32BufferAttribute(verticesBonds, 3));\n      return build;\n    }\n    const CPK = {\n      h: [255, 255, 255],\n      he: [217, 255, 255],\n      li: [204, 128, 255],\n      be: [194, 255, 0],\n      b: [255, 181, 181],\n      c: [144, 144, 144],\n      n: [48, 80, 248],\n      o: [255, 13, 13],\n      f: [144, 224, 80],\n      ne: [179, 227, 245],\n      na: [171, 92, 242],\n      mg: [138, 255, 0],\n      al: [191, 166, 166],\n      si: [240, 200, 160],\n      p: [255, 128, 0],\n      s: [255, 255, 48],\n      cl: [31, 240, 31],\n      ar: [128, 209, 227],\n      k: [143, 64, 212],\n      ca: [61, 255, 0],\n      sc: [230, 230, 230],\n      ti: [191, 194, 199],\n      v: [166, 166, 171],\n      cr: [138, 153, 199],\n      mn: [156, 122, 199],\n      fe: [224, 102, 51],\n      co: [240, 144, 160],\n      ni: [80, 208, 80],\n      cu: [200, 128, 51],\n      zn: [125, 128, 176],\n      ga: [194, 143, 143],\n      ge: [102, 143, 143],\n      as: [189, 128, 227],\n      se: [255, 161, 0],\n      br: [166, 41, 41],\n      kr: [92, 184, 209],\n      rb: [112, 46, 176],\n      sr: [0, 255, 0],\n      y: [148, 255, 255],\n      zr: [148, 224, 224],\n      nb: [115, 194, 201],\n      mo: [84, 181, 181],\n      tc: [59, 158, 158],\n      ru: [36, 143, 143],\n      rh: [10, 125, 140],\n      pd: [0, 105, 133],\n      ag: [192, 192, 192],\n      cd: [255, 217, 143],\n      in: [166, 117, 115],\n      sn: [102, 128, 128],\n      sb: [158, 99, 181],\n      te: [212, 122, 0],\n      i: [148, 0, 148],\n      xe: [66, 158, 176],\n      cs: [87, 23, 143],\n      ba: [0, 201, 0],\n      la: [112, 212, 255],\n      ce: [255, 255, 199],\n      pr: [217, 255, 199],\n      nd: [199, 255, 199],\n      pm: [163, 255, 199],\n      sm: [143, 255, 199],\n      eu: [97, 255, 199],\n      gd: [69, 255, 199],\n      tb: [48, 255, 199],\n      dy: [31, 255, 199],\n      ho: [0, 255, 156],\n      er: [0, 230, 117],\n      tm: [0, 212, 82],\n      yb: [0, 191, 56],\n      lu: [0, 171, 36],\n      hf: [77, 194, 255],\n      ta: [77, 166, 255],\n      w: [33, 148, 214],\n      re: [38, 125, 171],\n      os: [38, 102, 150],\n      ir: [23, 84, 135],\n      pt: [208, 208, 224],\n      au: [255, 209, 35],\n      hg: [184, 184, 208],\n      tl: [166, 84, 77],\n      pb: [87, 89, 97],\n      bi: [158, 79, 181],\n      po: [171, 92, 0],\n      at: [117, 79, 69],\n      rn: [66, 130, 150],\n      fr: [66, 0, 102],\n      ra: [0, 125, 0],\n      ac: [112, 171, 250],\n      th: [0, 186, 255],\n      pa: [0, 161, 255],\n      u: [0, 143, 255],\n      np: [0, 128, 255],\n      pu: [0, 107, 255],\n      am: [84, 92, 242],\n      cm: [120, 92, 227],\n      bk: [138, 79, 227],\n      cf: [161, 54, 212],\n      es: [179, 31, 212],\n      fm: [179, 31, 186],\n      md: [179, 13, 166],\n      no: [189, 13, 135],\n      lr: [199, 0, 102],\n      rf: [204, 0, 89],\n      db: [209, 0, 79],\n      sg: [217, 0, 69],\n      bh: [224, 0, 56],\n      hs: [230, 0, 46],\n      mt: [235, 0, 38],\n      ds: [235, 0, 38],\n      rg: [235, 0, 38],\n      cn: [235, 0, 38],\n      uut: [235, 0, 38],\n      uuq: [235, 0, 38],\n      uup: [235, 0, 38],\n      uuh: [235, 0, 38],\n      uus: [235, 0, 38],\n      uuo: [235, 0, 38]\n    };\n    const atoms = [];\n    const _bonds = [];\n    const _bhash = {};\n    const _atomMap = {};\n    const lines = text.split(\"\\n\");\n    for (let i = 0, l = lines.length; i < l; i++) {\n      if (lines[i].substr(0, 4) === \"ATOM\" || lines[i].substr(0, 6) === \"HETATM\") {\n        const x = parseFloat(lines[i].substr(30, 7));\n        const y = parseFloat(lines[i].substr(38, 7));\n        const z = parseFloat(lines[i].substr(46, 7));\n        const index = parseInt(lines[i].substr(6, 5)) - 1;\n        let e = trim(lines[i].substr(76, 2)).toLowerCase();\n        if (e === \"\") {\n          e = trim(lines[i].substr(12, 2)).toLowerCase();\n        }\n        const atomData = [x, y, z, CPK[e], capitalize(e)];\n        atoms.push(atomData);\n        _atomMap[index] = atomData;\n      } else if (lines[i].substr(0, 6) === \"CONECT\") {\n        const satom = parseInt(lines[i].substr(6, 5));\n        parseBond(11, 5, satom, i);\n        parseBond(16, 5, satom, i);\n        parseBond(21, 5, satom, i);\n        parseBond(26, 5, satom, i);\n      }\n    }\n    return buildGeometry();\n  }\n}\nexport {\n  PDBLoader\n};\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,cAAc,EAAEC,sBAAsB,QAAQ,OAAO;AAClF,MAAMC,SAAS,SAASJ,MAAM,CAAC;EAC7BK,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;EAChB;EACAC,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;IACrC,MAAMC,KAAK,GAAG,IAAI;IAClB,MAAMC,MAAM,GAAG,IAAIZ,UAAU,CAACW,KAAK,CAACN,OAAO,CAAC;IAC5CO,MAAM,CAACC,OAAO,CAACF,KAAK,CAACG,IAAI,CAAC;IAC1BF,MAAM,CAACG,gBAAgB,CAACJ,KAAK,CAACK,aAAa,CAAC;IAC5CJ,MAAM,CAACK,kBAAkB,CAACN,KAAK,CAACO,eAAe,CAAC;IAChDN,MAAM,CAACN,IAAI,CACTC,GAAG,EACH,UAASY,IAAI,EAAE;MACb,IAAI;QACFX,MAAM,CAACG,KAAK,CAACS,KAAK,CAACD,IAAI,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOE,CAAC,EAAE;QACV,IAAIX,OAAO,EAAE;UACXA,OAAO,CAACW,CAAC,CAAC;QACZ,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAClB;QACAV,KAAK,CAACN,OAAO,CAACmB,SAAS,CAACjB,GAAG,CAAC;MAC9B;IACF,CAAC,EACDE,UAAU,EACVC,OACF,CAAC;EACH;EACA;EACAU,KAAKA,CAACD,IAAI,EAAE;IACV,SAASM,IAAIA,CAACC,KAAK,EAAE;MACnB,OAAOA,KAAK,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC1D;IACA,SAASC,UAAUA,CAACF,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACtE;IACA,SAASC,IAAIA,CAACC,CAAC,EAAEb,CAAC,EAAE;MAClB,OAAO,GAAG,GAAGc,IAAI,CAACC,GAAG,CAACF,CAAC,EAAEb,CAAC,CAAC,GAAG,GAAG,GAAGc,IAAI,CAACE,GAAG,CAACH,CAAC,EAAEb,CAAC,CAAC;IACpD;IACA,SAASiB,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,CAAC,EAAE;MAC1C,MAAMC,KAAK,GAAGC,QAAQ,CAACC,KAAK,CAACH,CAAC,CAAC,CAACX,MAAM,CAACQ,KAAK,EAAEC,MAAM,CAAC,CAAC;MACtD,IAAIG,KAAK,EAAE;QACT,MAAMG,CAAC,GAAGb,IAAI,CAACQ,KAAK,EAAEE,KAAK,CAAC;QAC5B,IAAII,MAAM,CAACD,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;UACxBE,MAAM,CAACC,IAAI,CAAC,CAACR,KAAK,GAAG,CAAC,EAAEE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;UACtCI,MAAM,CAACD,CAAC,CAAC,GAAGE,MAAM,CAACR,MAAM,GAAG,CAAC;QAC/B,CAAC,MAAM,CACP;MACF;IACF;IACA,SAASU,aAAaA,CAAA,EAAG;MACvB,MAAMC,KAAK,GAAG;QACZC,aAAa,EAAE,IAAInD,cAAc,CAAC,CAAC;QACnCoD,aAAa,EAAE,IAAIpD,cAAc,CAAC,CAAC;QACnCqD,IAAI,EAAE;UACJC;QACF;MACF,CAAC;MACD,MAAMH,aAAa,GAAGD,KAAK,CAACC,aAAa;MACzC,MAAMC,aAAa,GAAGF,KAAK,CAACE,aAAa;MACzC,MAAMG,aAAa,GAAG,EAAE;MACxB,MAAMC,WAAW,GAAG,EAAE;MACtB,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEiB,CAAC,GAAGJ,KAAK,CAACf,MAAM,EAAEE,CAAC,GAAGiB,CAAC,EAAEjB,CAAC,EAAE,EAAE;QAC5C,MAAMkB,IAAI,GAAGL,KAAK,CAACb,CAAC,CAAC;QACrB,MAAMmB,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC;QACjB,MAAME,CAAC,GAAGF,IAAI,CAAC,CAAC,CAAC;QACjB,MAAMG,CAAC,GAAGH,IAAI,CAAC,CAAC,CAAC;QACjBJ,aAAa,CAACP,IAAI,CAACY,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;QAC3B,MAAMC,CAAC,GAAGJ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QAC1B,MAAMK,CAAC,GAAGL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QAC1B,MAAMM,CAAC,GAAGN,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;QAC1BH,WAAW,CAACR,IAAI,CAACe,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC3B;MACA,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEiB,CAAC,GAAGX,MAAM,CAACR,MAAM,EAAEE,CAAC,GAAGiB,CAAC,EAAEjB,CAAC,EAAE,EAAE;QAC7C,MAAMyB,IAAI,GAAGnB,MAAM,CAACN,CAAC,CAAC;QACtB,MAAMH,KAAK,GAAG4B,IAAI,CAAC,CAAC,CAAC;QACrB,MAAMC,GAAG,GAAGD,IAAI,CAAC,CAAC,CAAC;QACnB,MAAME,SAAS,GAAGC,QAAQ,CAAC/B,KAAK,CAAC;QACjC,MAAMgC,OAAO,GAAGD,QAAQ,CAACF,GAAG,CAAC;QAC7B,IAAIP,CAAC,GAAGQ,SAAS,CAAC,CAAC,CAAC;QACpB,IAAIP,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC;QACpB,IAAIN,CAAC,GAAGM,SAAS,CAAC,CAAC,CAAC;QACpBX,aAAa,CAACT,IAAI,CAACY,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;QAC3BF,CAAC,GAAGU,OAAO,CAAC,CAAC,CAAC;QACdT,CAAC,GAAGS,OAAO,CAAC,CAAC,CAAC;QACdR,CAAC,GAAGQ,OAAO,CAAC,CAAC,CAAC;QACdb,aAAa,CAACT,IAAI,CAACY,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;MAC7B;MACAX,aAAa,CAACoB,YAAY,CAAC,UAAU,EAAE,IAAItE,sBAAsB,CAACsD,aAAa,EAAE,CAAC,CAAC,CAAC;MACpFJ,aAAa,CAACoB,YAAY,CAAC,OAAO,EAAE,IAAItE,sBAAsB,CAACuD,WAAW,EAAE,CAAC,CAAC,CAAC;MAC/EJ,aAAa,CAACmB,YAAY,CAAC,UAAU,EAAE,IAAItE,sBAAsB,CAACwD,aAAa,EAAE,CAAC,CAAC,CAAC;MACpF,OAAOP,KAAK;IACd;IACA,MAAMsB,GAAG,GAAG;MACV3B,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAClB4B,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjBV,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBW,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MAChBC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;MAChBC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAChBpD,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MACjBqD,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MACf9C,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAClB+C,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjB/E,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;MAChBgF,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MACfC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;MAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MACfC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MACnBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MAChBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;MAClBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;MACjBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;MAChBC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,E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"},"metadata":{},"sourceType":"module","externalDependencies":[]}