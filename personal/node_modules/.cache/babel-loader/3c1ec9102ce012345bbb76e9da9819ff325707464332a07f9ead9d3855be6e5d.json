{"ast":null,"code":"import _slicedToArray from\"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useEffect,useState}from\"react\";import{useLoaderData}from\"react-router-dom\";import RSS from\"./RSS\";import{jsx as _jsx}from\"react/jsx-runtime\";export var articleLoader=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res,articles;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");case 2:res=_context.sent;articles=res.json();return _context.abrupt(\"return\",articles);case 5:case\"end\":return _context.stop();}},_callee);}));return function articleLoader(){return _ref.apply(this,arguments);};}();export default function RSSFeed(){var data=useLoaderData();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),xml=_useState2[0],setXML=_useState2[1];useEffect(function(){var feed=new RSS({title:\"Ethan's Blog\",description:\"A catalogue of my various articles.\",url:\"https://gurknathe.github.io/Personal/#/rss.xml\",copyright:\"2023 Ethan Krug\",language:\"en\"});data.forEach(function(item){feed.addItem({title:item.title,description:item.summary,url:\"https://gurknathe.github.io/Personal/#/blog/\".concat(item.contentUrl,\"/article\"),guid:item.contentUrl,categories:item.tags,author:'Ethan Krug',date:item.timestamp});});setXML(feed.createXML());},[data]);return/*#__PURE__*/_jsx(\"div\",{children:xml});}","map":{"version":3,"names":["useEffect","useState","useLoaderData","RSS","jsx","_jsx","articleLoader","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","articles","wrap","_callee$","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","RSSFeed","data","_useState","_useState2","_slicedToArray","xml","setXML","feed","title","description","url","copyright","language","forEach","item","addItem","summary","concat","contentUrl","guid","categories","tags","author","date","timestamp","createXML","children"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/RSSFeed.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { LoadedArticle } from \"./BlogPost\";\n\nimport RSS from \"./RSS\";\n\nexport const articleLoader = async (): Promise<any> => {\n    const res = await fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");\n    const articles = res.json();\n    return articles;\n};\n\nexport default function RSSFeed() {\n    const data = useLoaderData() as LoadedArticle[];\n    const [xml, setXML] = useState<string>(\"\");\n\n    useEffect(() => {\n        let feed = new RSS({\n            title: \"Ethan's Blog\",\n            description: \"A catalogue of my various articles.\",\n            url: \"https://gurknathe.github.io/Personal/#/rss.xml\",\n            copyright: \"2023 Ethan Krug\",\n            language: \"en\"\n        });\n\n        data.forEach((item) => {\n            feed.addItem({\n                title:  item.title,\n                description: item.summary,\n                url: `https://gurknathe.github.io/Personal/#/blog/${item.contentUrl}/article`,\n                guid: item.contentUrl,\n                categories: item.tags,\n                author: 'Ethan Krug',\n                date: item.timestamp\n            });\n        })\n\n        setXML(feed.createXML());\n    }, [data]);\n\n    return(\n        <div>\n            {xml}\n        </div>\n    )\n}"],"mappings":"kjBAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,aAAa,KAAQ,kBAAkB,CAGhD,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,MAAO,IAAM,CAAAC,aAAa,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,GAAA,CAAAC,QAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SACP,CAAAC,KAAK,CAAC,kFAAkF,CAAC,QAArGP,GAAG,CAAAI,QAAA,CAAAI,IAAA,CACHP,QAAQ,CAAGD,GAAG,CAACS,IAAI,CAAC,CAAC,QAAAL,QAAA,CAAAM,MAAA,UACpBT,QAAQ,0BAAAG,QAAA,CAAAO,IAAA,MAAAZ,OAAA,GAClB,kBAJY,CAAAL,aAAaA,CAAA,SAAAC,IAAA,CAAAiB,KAAA,MAAAC,SAAA,OAIzB,CAED,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAG,CAC9B,GAAM,CAAAC,IAAI,CAAGzB,aAAa,CAAC,CAAoB,CAC/C,IAAA0B,SAAA,CAAsB3B,QAAQ,CAAS,EAAE,CAAC,CAAA4B,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,GAAG,CAAAF,UAAA,IAAEG,MAAM,CAAAH,UAAA,IAElB7B,SAAS,CAAC,UAAM,CACZ,GAAI,CAAAiC,IAAI,CAAG,GAAI,CAAA9B,GAAG,CAAC,CACf+B,KAAK,CAAE,cAAc,CACrBC,WAAW,CAAE,qCAAqC,CAClDC,GAAG,CAAE,gDAAgD,CACrDC,SAAS,CAAE,iBAAiB,CAC5BC,QAAQ,CAAE,IACd,CAAC,CAAC,CAEFX,IAAI,CAACY,OAAO,CAAC,SAACC,IAAI,CAAK,CACnBP,IAAI,CAACQ,OAAO,CAAC,CACTP,KAAK,CAAGM,IAAI,CAACN,KAAK,CAClBC,WAAW,CAAEK,IAAI,CAACE,OAAO,CACzBN,GAAG,gDAAAO,MAAA,CAAiDH,IAAI,CAACI,UAAU,YAAU,CAC7EC,IAAI,CAAEL,IAAI,CAACI,UAAU,CACrBE,UAAU,CAAEN,IAAI,CAACO,IAAI,CACrBC,MAAM,CAAE,YAAY,CACpBC,IAAI,CAAET,IAAI,CAACU,SACf,CAAC,CAAC,CACN,CAAC,CAAC,CAEFlB,MAAM,CAACC,IAAI,CAACkB,SAAS,CAAC,CAAC,CAAC,CAC5B,CAAC,CAAE,CAACxB,IAAI,CAAC,CAAC,CAEV,mBACItB,IAAA,QAAA+C,QAAA,CACKrB,GAAG,CACH,CAAC,CAEd"},"metadata":{},"sourceType":"module","externalDependencies":[]}