{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { ShaderMaterial, UniformsUtils } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nclass ShaderPass extends Pass {\n  constructor(shader) {\n    let textureID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"tDiffuse\";\n    super();\n    __publicField(this, \"textureID\");\n    __publicField(this, \"uniforms\");\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    this.textureID = textureID;\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms;\n      this.material = shader;\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms);\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    this.fsQuad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport { ShaderPass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","ShaderPass","constructor","shader","textureID","arguments","length","undefined","uniforms","material","clone","defines","assign","vertexShader","fragmentShader","fsQuad","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/postprocessing/ShaderPass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { ShaderMaterial, UniformsUtils } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nclass ShaderPass extends Pass {\n  constructor(shader, textureID = \"tDiffuse\") {\n    super();\n    __publicField(this, \"textureID\");\n    __publicField(this, \"uniforms\");\n    __publicField(this, \"material\");\n    __publicField(this, \"fsQuad\");\n    this.textureID = textureID;\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms;\n      this.material = shader;\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms);\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    this.fsQuad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear)\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport {\n  ShaderPass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}