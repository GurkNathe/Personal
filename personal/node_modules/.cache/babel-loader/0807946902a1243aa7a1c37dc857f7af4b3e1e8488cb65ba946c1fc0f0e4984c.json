{"ast":null,"code":"import { Vector2 } from \"three\";\nconst NormalMapShader = {\n  uniforms: {\n    heightMap: {\n      value: null\n    },\n    resolution: {\n      value: /* @__PURE__ */new Vector2(512, 512)\n    },\n    scale: {\n      value: /* @__PURE__ */new Vector2(1, 1)\n    },\n    height: {\n      value: 0.05\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float height;\", \"uniform vec2 resolution;\", \"uniform sampler2D heightMap;\", \"varying vec2 vUv;\", \"void main() {\", \"\tfloat val = texture2D( heightMap, vUv ).x;\", \"\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\", \"\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\", \"\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\", \"}\"].join(\"\\n\")\n};\nexport { NormalMapShader };","map":{"version":3,"names":["Vector2","NormalMapShader","uniforms","heightMap","value","resolution","scale","height","vertexShader","join","fragmentShader"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/shaders/NormalMapShader.js"],"sourcesContent":["import { Vector2 } from \"three\";\nconst NormalMapShader = {\n  uniforms: {\n    heightMap: { value: null },\n    resolution: { value: /* @__PURE__ */ new Vector2(512, 512) },\n    scale: { value: /* @__PURE__ */ new Vector2(1, 1) },\n    height: { value: 0.05 }\n  },\n  vertexShader: [\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tvUv = uv;\",\n    \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n    \"}\"\n  ].join(\"\\n\"),\n  fragmentShader: [\n    \"uniform float height;\",\n    \"uniform vec2 resolution;\",\n    \"uniform sampler2D heightMap;\",\n    \"varying vec2 vUv;\",\n    \"void main() {\",\n    \"\tfloat val = texture2D( heightMap, vUv ).x;\",\n    \"\tfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\",\n    \"\tfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\",\n    \"\tgl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\",\n    \"}\"\n  ].join(\"\\n\")\n};\nexport {\n  NormalMapShader\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,MAAMC,eAAe,GAAG;EACtBC,QAAQ,EAAE;IACRC,SAAS,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAC;IAC1BC,UAAU,EAAE;MAAED,KAAK,EAAE,eAAgB,IAAIJ,OAAO,CAAC,GAAG,EAAE,GAAG;IAAE,CAAC;IAC5DM,KAAK,EAAE;MAAEF,KAAK,EAAE,eAAgB,IAAIJ,OAAO,CAAC,CAAC,EAAE,CAAC;IAAE,CAAC;IACnDO,MAAM,EAAE;MAAEH,KAAK,EAAE;IAAK;EACxB,CAAC;EACDI,YAAY,EAAE,CACZ,mBAAmB,EACnB,eAAe,EACf,YAAY,EACZ,4EAA4E,EAC5E,GAAG,CACJ,CAACC,IAAI,CAAC,IAAI,CAAC;EACZC,cAAc,EAAE,CACd,uBAAuB,EACvB,0BAA0B,EAC1B,8BAA8B,EAC9B,mBAAmB,EACnB,eAAe,EACf,6CAA6C,EAC7C,gFAAgF,EAChF,gFAAgF,EAChF,oGAAoG,EACpG,GAAG,CACJ,CAACD,IAAI,CAAC,IAAI;AACb,CAAC;AACD,SACER,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}