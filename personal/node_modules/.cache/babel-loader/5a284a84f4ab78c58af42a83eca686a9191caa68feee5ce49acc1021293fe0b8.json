{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, BufferAttribute, Vector3, Float32BufferAttribute, LoaderUtils } from \"three\";\nvar STLLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(STLLoader, _Loader);\n  var _super = _createSuper(STLLoader);\n  function STLLoader(manager) {\n    _classCallCheck(this, STLLoader);\n    return _super.call(this, manager);\n  }\n  _createClass(STLLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      function isBinary(data2) {\n        var reader = new DataView(data2);\n        var face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n        var n_faces = reader.getUint32(80, true);\n        var expect = 80 + 32 / 8 + n_faces * face_size;\n        if (expect === reader.byteLength) {\n          return true;\n        }\n        var solid = [115, 111, 108, 105, 100];\n        for (var off = 0; off < 5; off++) {\n          if (matchDataViewAt(solid, reader, off)) return false;\n        }\n        return true;\n      }\n      function matchDataViewAt(query, reader, offset) {\n        for (var i = 0, il = query.length; i < il; i++) {\n          if (query[i] !== reader.getUint8(offset + i, false)) return false;\n        }\n        return true;\n      }\n      function parseBinary(data2) {\n        var reader = new DataView(data2);\n        var faces = reader.getUint32(80, true);\n        var r,\n          g,\n          b,\n          hasColors = false,\n          colors;\n        var defaultR, defaultG, defaultB, alpha;\n        for (var index = 0; index < 80 - 10; index++) {\n          if (reader.getUint32(index, false) == 1129270351 && reader.getUint8(index + 4) == 82 && reader.getUint8(index + 5) == 61) {\n            hasColors = true;\n            colors = new Float32Array(faces * 3 * 3);\n            defaultR = reader.getUint8(index + 6) / 255;\n            defaultG = reader.getUint8(index + 7) / 255;\n            defaultB = reader.getUint8(index + 8) / 255;\n            alpha = reader.getUint8(index + 9) / 255;\n          }\n        }\n        var dataOffset = 84;\n        var faceLength = 12 * 4 + 2;\n        var geometry = new BufferGeometry();\n        var vertices = new Float32Array(faces * 3 * 3);\n        var normals = new Float32Array(faces * 3 * 3);\n        for (var face = 0; face < faces; face++) {\n          var start = dataOffset + face * faceLength;\n          var normalX = reader.getFloat32(start, true);\n          var normalY = reader.getFloat32(start + 4, true);\n          var normalZ = reader.getFloat32(start + 8, true);\n          if (hasColors) {\n            var packedColor = reader.getUint16(start + 48, true);\n            if ((packedColor & 32768) === 0) {\n              r = (packedColor & 31) / 31;\n              g = (packedColor >> 5 & 31) / 31;\n              b = (packedColor >> 10 & 31) / 31;\n            } else {\n              r = defaultR;\n              g = defaultG;\n              b = defaultB;\n            }\n          }\n          for (var i = 1; i <= 3; i++) {\n            var vertexstart = start + i * 12;\n            var componentIdx = face * 3 * 3 + (i - 1) * 3;\n            vertices[componentIdx] = reader.getFloat32(vertexstart, true);\n            vertices[componentIdx + 1] = reader.getFloat32(vertexstart + 4, true);\n            vertices[componentIdx + 2] = reader.getFloat32(vertexstart + 8, true);\n            normals[componentIdx] = normalX;\n            normals[componentIdx + 1] = normalY;\n            normals[componentIdx + 2] = normalZ;\n            if (hasColors) {\n              colors[componentIdx] = r;\n              colors[componentIdx + 1] = g;\n              colors[componentIdx + 2] = b;\n            }\n          }\n        }\n        geometry.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n        geometry.setAttribute(\"normal\", new BufferAttribute(normals, 3));\n        if (hasColors) {\n          geometry.setAttribute(\"color\", new BufferAttribute(colors, 3));\n          geometry.hasColors = true;\n          geometry.alpha = alpha;\n        }\n        return geometry;\n      }\n      function parseASCII(data2) {\n        var geometry = new BufferGeometry();\n        var patternSolid = /solid([\\s\\S]*?)endsolid/g;\n        var patternFace = /facet([\\s\\S]*?)endfacet/g;\n        var faceCounter = 0;\n        var patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n        var patternVertex = new RegExp(\"vertex\" + patternFloat + patternFloat + patternFloat, \"g\");\n        var patternNormal = new RegExp(\"normal\" + patternFloat + patternFloat + patternFloat, \"g\");\n        var vertices = [];\n        var normals = [];\n        var normal = new Vector3();\n        var result;\n        var groupCount = 0;\n        var startVertex = 0;\n        var endVertex = 0;\n        while ((result = patternSolid.exec(data2)) !== null) {\n          startVertex = endVertex;\n          var solid = result[0];\n          while ((result = patternFace.exec(solid)) !== null) {\n            var vertexCountPerFace = 0;\n            var normalCountPerFace = 0;\n            var text = result[0];\n            while ((result = patternNormal.exec(text)) !== null) {\n              normal.x = parseFloat(result[1]);\n              normal.y = parseFloat(result[2]);\n              normal.z = parseFloat(result[3]);\n              normalCountPerFace++;\n            }\n            while ((result = patternVertex.exec(text)) !== null) {\n              vertices.push(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3]));\n              normals.push(normal.x, normal.y, normal.z);\n              vertexCountPerFace++;\n              endVertex++;\n            }\n            if (normalCountPerFace !== 1) {\n              console.error(\"THREE.STLLoader: Something isn't right with the normal of face number \" + faceCounter);\n            }\n            if (vertexCountPerFace !== 3) {\n              console.error(\"THREE.STLLoader: Something isn't right with the vertices of face number \" + faceCounter);\n            }\n            faceCounter++;\n          }\n          var start = startVertex;\n          var count = endVertex - startVertex;\n          geometry.addGroup(start, count, groupCount);\n          groupCount++;\n        }\n        geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n        geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n        return geometry;\n      }\n      function ensureString(buffer) {\n        if (typeof buffer !== \"string\") {\n          return LoaderUtils.decodeText(new Uint8Array(buffer));\n        }\n        return buffer;\n      }\n      function ensureBinary(buffer) {\n        if (typeof buffer === \"string\") {\n          var array_buffer = new Uint8Array(buffer.length);\n          for (var i = 0; i < buffer.length; i++) {\n            array_buffer[i] = buffer.charCodeAt(i) & 255;\n          }\n          return array_buffer.buffer || array_buffer;\n        } else {\n          return buffer;\n        }\n      }\n      var binData = ensureBinary(data);\n      return isBinary(binData) ? parseBinary(binData) : parseASCII(ensureString(data));\n    }\n  }]);\n  return STLLoader;\n}(Loader);\nexport { STLLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","BufferAttribute","Vector3","Float32BufferAttribute","LoaderUtils","STLLoader","_Loader","_inherits","_super","_createSuper","manager","_classCallCheck","call","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","data","isBinary","data2","reader","DataView","face_size","n_faces","getUint32","expect","byteLength","solid","off","matchDataViewAt","query","offset","i","il","length","getUint8","parseBinary","faces","r","g","b","hasColors","colors","defaultR","defaultG","defaultB","alpha","index","Float32Array","dataOffset","faceLength","geometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","componentIdx","setAttribute","parseASCII","patternSolid","patternFace","faceCounter","patternFloat","source","patternVertex","RegExp","patternNormal","normal","result","groupCount","startVertex","endVertex","exec","vertexCountPerFace","normalCountPerFace","x","parseFloat","y","z","push","count","addGroup","ensureString","buffer","decodeText","Uint8Array","ensureBinary","array_buffer","charCodeAt","binData"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/STLLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, BufferAttribute, Vector3, Float32BufferAttribute, LoaderUtils } from \"three\";\nclass STLLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      function(text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      },\n      onProgress,\n      onError\n    );\n  }\n  parse(data) {\n    function isBinary(data2) {\n      const reader = new DataView(data2);\n      const face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n      const n_faces = reader.getUint32(80, true);\n      const expect = 80 + 32 / 8 + n_faces * face_size;\n      if (expect === reader.byteLength) {\n        return true;\n      }\n      const solid = [115, 111, 108, 105, 100];\n      for (let off = 0; off < 5; off++) {\n        if (matchDataViewAt(solid, reader, off))\n          return false;\n      }\n      return true;\n    }\n    function matchDataViewAt(query, reader, offset) {\n      for (let i = 0, il = query.length; i < il; i++) {\n        if (query[i] !== reader.getUint8(offset + i, false))\n          return false;\n      }\n      return true;\n    }\n    function parseBinary(data2) {\n      const reader = new DataView(data2);\n      const faces = reader.getUint32(80, true);\n      let r, g, b, hasColors = false, colors;\n      let defaultR, defaultG, defaultB, alpha;\n      for (let index = 0; index < 80 - 10; index++) {\n        if (reader.getUint32(index, false) == 1129270351 && reader.getUint8(index + 4) == 82 && reader.getUint8(index + 5) == 61) {\n          hasColors = true;\n          colors = new Float32Array(faces * 3 * 3);\n          defaultR = reader.getUint8(index + 6) / 255;\n          defaultG = reader.getUint8(index + 7) / 255;\n          defaultB = reader.getUint8(index + 8) / 255;\n          alpha = reader.getUint8(index + 9) / 255;\n        }\n      }\n      const dataOffset = 84;\n      const faceLength = 12 * 4 + 2;\n      const geometry = new BufferGeometry();\n      const vertices = new Float32Array(faces * 3 * 3);\n      const normals = new Float32Array(faces * 3 * 3);\n      for (let face = 0; face < faces; face++) {\n        const start = dataOffset + face * faceLength;\n        const normalX = reader.getFloat32(start, true);\n        const normalY = reader.getFloat32(start + 4, true);\n        const normalZ = reader.getFloat32(start + 8, true);\n        if (hasColors) {\n          const packedColor = reader.getUint16(start + 48, true);\n          if ((packedColor & 32768) === 0) {\n            r = (packedColor & 31) / 31;\n            g = (packedColor >> 5 & 31) / 31;\n            b = (packedColor >> 10 & 31) / 31;\n          } else {\n            r = defaultR;\n            g = defaultG;\n            b = defaultB;\n          }\n        }\n        for (let i = 1; i <= 3; i++) {\n          const vertexstart = start + i * 12;\n          const componentIdx = face * 3 * 3 + (i - 1) * 3;\n          vertices[componentIdx] = reader.getFloat32(vertexstart, true);\n          vertices[componentIdx + 1] = reader.getFloat32(vertexstart + 4, true);\n          vertices[componentIdx + 2] = reader.getFloat32(vertexstart + 8, true);\n          normals[componentIdx] = normalX;\n          normals[componentIdx + 1] = normalY;\n          normals[componentIdx + 2] = normalZ;\n          if (hasColors) {\n            colors[componentIdx] = r;\n            colors[componentIdx + 1] = g;\n            colors[componentIdx + 2] = b;\n          }\n        }\n      }\n      geometry.setAttribute(\"position\", new BufferAttribute(vertices, 3));\n      geometry.setAttribute(\"normal\", new BufferAttribute(normals, 3));\n      if (hasColors) {\n        geometry.setAttribute(\"color\", new BufferAttribute(colors, 3));\n        geometry.hasColors = true;\n        geometry.alpha = alpha;\n      }\n      return geometry;\n    }\n    function parseASCII(data2) {\n      const geometry = new BufferGeometry();\n      const patternSolid = /solid([\\s\\S]*?)endsolid/g;\n      const patternFace = /facet([\\s\\S]*?)endfacet/g;\n      let faceCounter = 0;\n      const patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n      const patternVertex = new RegExp(\"vertex\" + patternFloat + patternFloat + patternFloat, \"g\");\n      const patternNormal = new RegExp(\"normal\" + patternFloat + patternFloat + patternFloat, \"g\");\n      const vertices = [];\n      const normals = [];\n      const normal = new Vector3();\n      let result;\n      let groupCount = 0;\n      let startVertex = 0;\n      let endVertex = 0;\n      while ((result = patternSolid.exec(data2)) !== null) {\n        startVertex = endVertex;\n        const solid = result[0];\n        while ((result = patternFace.exec(solid)) !== null) {\n          let vertexCountPerFace = 0;\n          let normalCountPerFace = 0;\n          const text = result[0];\n          while ((result = patternNormal.exec(text)) !== null) {\n            normal.x = parseFloat(result[1]);\n            normal.y = parseFloat(result[2]);\n            normal.z = parseFloat(result[3]);\n            normalCountPerFace++;\n          }\n          while ((result = patternVertex.exec(text)) !== null) {\n            vertices.push(parseFloat(result[1]), parseFloat(result[2]), parseFloat(result[3]));\n            normals.push(normal.x, normal.y, normal.z);\n            vertexCountPerFace++;\n            endVertex++;\n          }\n          if (normalCountPerFace !== 1) {\n            console.error(\"THREE.STLLoader: Something isn't right with the normal of face number \" + faceCounter);\n          }\n          if (vertexCountPerFace !== 3) {\n            console.error(\"THREE.STLLoader: Something isn't right with the vertices of face number \" + faceCounter);\n          }\n          faceCounter++;\n        }\n        const start = startVertex;\n        const count = endVertex - startVertex;\n        geometry.addGroup(start, count, groupCount);\n        groupCount++;\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n      geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n      return geometry;\n    }\n    function ensureString(buffer) {\n      if (typeof buffer !== \"string\") {\n        return LoaderUtils.decodeText(new Uint8Array(buffer));\n      }\n      return buffer;\n    }\n    function ensureBinary(buffer) {\n      if (typeof buffer === \"string\") {\n        const array_buffer = new Uint8Array(buffer.length);\n        for (let i = 0; i < buffer.length; i++) {\n          array_buffer[i] = buffer.charCodeAt(i) & 255;\n        }\n        return array_buffer.buffer || array_buffer;\n      } else {\n        return buffer;\n      }\n    }\n    const binData = ensureBinary(data);\n    return isBinary(binData) ? parseBinary(binData) : parseASCII(ensureString(data));\n  }\n}\nexport {\n  STLLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}