{"ast":null,"code":"import { BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\nclass ConvexGeometry extends BufferGeometry {\n  constructor() {\n    let points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    super();\n    const vertices = [];\n    const normals = [];\n    const convexHull = new ConvexHull().setFromPoints(points);\n    const faces = convexHull.faces;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge;\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n  }\n}\nexport { ConvexGeometry };","map":{"version":3,"names":["BufferGeometry","Float32BufferAttribute","ConvexHull","ConvexGeometry","constructor","points","arguments","length","undefined","vertices","normals","convexHull","setFromPoints","faces","i","face","edge","point","head","push","x","y","z","normal","next","setAttribute"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/geometries/ConvexGeometry.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute } from \"three\";\nimport { ConvexHull } from \"../math/ConvexHull.js\";\nclass ConvexGeometry extends BufferGeometry {\n  constructor(points = []) {\n    super();\n    const vertices = [];\n    const normals = [];\n    const convexHull = new ConvexHull().setFromPoints(points);\n    const faces = convexHull.faces;\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge;\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n    this.setAttribute(\"position\", new Float32BufferAttribute(vertices, 3));\n    this.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n  }\n}\nexport {\n  ConvexGeometry\n};\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,sBAAsB,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,uBAAuB;AAClD,MAAMC,cAAc,SAASH,cAAc,CAAC;EAC1CI,WAAWA,CAAA,EAAc;IAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACrB,KAAK,CAAC,CAAC;IACP,MAAMG,QAAQ,GAAG,EAAE;IACnB,MAAMC,OAAO,GAAG,EAAE;IAClB,MAAMC,UAAU,GAAG,IAAIT,UAAU,CAAC,CAAC,CAACU,aAAa,CAACP,MAAM,CAAC;IACzD,MAAMQ,KAAK,GAAGF,UAAU,CAACE,KAAK;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACN,MAAM,EAAEO,CAAC,EAAE,EAAE;MACrC,MAAMC,IAAI,GAAGF,KAAK,CAACC,CAAC,CAAC;MACrB,IAAIE,IAAI,GAAGD,IAAI,CAACC,IAAI;MACpB,GAAG;QACD,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACD,KAAK;QAC/BR,QAAQ,CAACU,IAAI,CAACF,KAAK,CAACG,CAAC,EAAEH,KAAK,CAACI,CAAC,EAAEJ,KAAK,CAACK,CAAC,CAAC;QACxCZ,OAAO,CAACS,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAACH,CAAC,EAAEL,IAAI,CAACQ,MAAM,CAACF,CAAC,EAAEN,IAAI,CAACQ,MAAM,CAACD,CAAC,CAAC;QACzDN,IAAI,GAAGA,IAAI,CAACQ,IAAI;MAClB,CAAC,QAAQR,IAAI,KAAKD,IAAI,CAACC,IAAI;IAC7B;IACA,IAAI,CAACS,YAAY,CAAC,UAAU,EAAE,IAAIxB,sBAAsB,CAACQ,QAAQ,EAAE,CAAC,CAAC,CAAC;IACtE,IAAI,CAACgB,YAAY,CAAC,QAAQ,EAAE,IAAIxB,sBAAsB,CAACS,OAAO,EAAE,CAAC,CAAC,CAAC;EACrE;AACF;AACA,SACEP,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}