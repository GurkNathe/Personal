{"ast":null,"code":"var _jsxFileName = \"/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/RSSFeed.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport RSS from \"./RSS\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const articleLoader = async () => {\n  const res = await fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");\n  const articles = res.json();\n  return articles;\n};\nexport default function RSSFeed() {\n  _s();\n  const data = useLoaderData();\n  const [xml, setXML] = useState();\n  const parser = useMemo(() => {\n    return new DOMParser();\n  }, []);\n  const serial = new XMLSerializer();\n  useEffect(() => {\n    let feed = new RSS({\n      title: \"Ethan's Blog\",\n      description: \"A catalogue of my various articles.\",\n      url: \"https://gurknathe.github.io/Personal/#/rss.xml\",\n      copyright: \"2023 Ethan Krug\",\n      language: \"en\"\n    });\n    data.forEach(item => {\n      feed.addItem({\n        title: item.title,\n        description: item.summary,\n        url: `https://gurknathe.github.io/Personal/#/blog/${item.contentUrl}/article`,\n        guid: item.contentUrl,\n        categories: item.tags,\n        author: 'Ethan Krug',\n        date: item.timestamp\n      });\n    });\n    setXML(parser.parseFromString(feed.createXML(), \"application/xml\"));\n  }, [data, parser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: process.env.PUBLIC_URL + \"/resources/articles.xml\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Go To Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), xml ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: URL.createObjectURL(new Blob([serial.serializeToString(xml)], {\n        type: 'text/xml'\n      })),\n      download: \"articles.xml\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Download Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(RSSFeed, \"GP8QkWvacacQhIRyYqgw5rbV9wU=\", false, function () {\n  return [useLoaderData];\n});\n_c = RSSFeed;\nvar _c;\n$RefreshReg$(_c, \"RSSFeed\");","map":{"version":3,"names":["useEffect","useMemo","useState","useLoaderData","RSS","jsxDEV","_jsxDEV","Fragment","_Fragment","articleLoader","res","fetch","articles","json","RSSFeed","_s","data","xml","setXML","parser","DOMParser","serial","XMLSerializer","feed","title","description","url","copyright","language","forEach","item","addItem","summary","contentUrl","guid","categories","tags","author","date","timestamp","parseFromString","createXML","children","href","process","env","PUBLIC_URL","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","URL","createObjectURL","Blob","serializeToString","type","download","_c","$RefreshReg$"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/src/components/RSSFeed.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { LoadedArticle } from \"./BlogPost\";\n\nimport RSS from \"./RSS\";\n\nexport const articleLoader = async (): Promise<any> => {\n    const res = await fetch(\"https://raw.githubusercontent.com/GurkNathe/Personal/main/articles/articles.json\");\n    const articles = res.json();\n    return articles;\n};\n\nexport default function RSSFeed() {\n    const data = useLoaderData() as LoadedArticle[];\n    const [xml, setXML] = useState<Document>();\n    const parser = useMemo(() => {\n        return new DOMParser();\n    }, []);\n    const serial = new XMLSerializer();\n\n    useEffect(() => {\n        let feed = new RSS({\n            title: \"Ethan's Blog\",\n            description: \"A catalogue of my various articles.\",\n            url: \"https://gurknathe.github.io/Personal/#/rss.xml\",\n            copyright: \"2023 Ethan Krug\",\n            language: \"en\"\n        });\n\n        data.forEach((item) => {\n            feed.addItem({\n                title:  item.title,\n                description: item.summary,\n                url: `https://gurknathe.github.io/Personal/#/blog/${item.contentUrl}/article`,\n                guid: item.contentUrl,\n                categories: item.tags,\n                author: 'Ethan Krug',\n                date: item.timestamp\n            });\n        })\n\n        setXML(parser.parseFromString(feed.createXML(), \"application/xml\"));\n    }, [data, parser]);\n\n    return(\n        <div>\n            <a href={process.env.PUBLIC_URL + \"/resources/articles.xml\"} target=\"_blank\" rel=\"noreferrer\">\n                Go To Feed\n            </a>\n            <br/>\n            {\n                xml ? \n                <a href={URL.createObjectURL(new Blob([serial.serializeToString(xml!)], { type: 'text/xml' }))} download=\"articles.xml\" target=\"_blank\" rel=\"noreferrer\">\n                    Download Feed\n                </a> :\n                <></>\n            }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}