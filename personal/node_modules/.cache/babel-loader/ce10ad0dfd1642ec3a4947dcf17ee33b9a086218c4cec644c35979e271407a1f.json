{"ast":null,"code":"import { getInternalDocumentId } from './internal-document-id-store.js';\nexport async function create(_, sharedInternalDocumentStore) {\n  return {\n    sharedInternalDocumentStore,\n    docs: {},\n    count: 0\n  };\n}\nexport async function get(store, id) {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id);\n  return store.docs[internalId];\n}\nexport async function getMultiple(store, ids) {\n  const found = Array.from({\n    length: ids.length\n  });\n  for (let i = 0; i < ids.length; i++) {\n    const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, ids[i]);\n    found[i] = store.docs[internalId];\n  }\n  return found;\n}\nexport async function getAll(store) {\n  return store.docs;\n}\nexport async function store(store, id, doc) {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id);\n  if (typeof store.docs[internalId] !== 'undefined') {\n    return false;\n  }\n  store.docs[internalId] = doc;\n  store.count++;\n  return true;\n}\nexport async function remove(store, id) {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id);\n  if (typeof store.docs[internalId] === 'undefined') {\n    return false;\n  }\n  delete store.docs[internalId];\n  store.count--;\n  return true;\n}\nexport async function count(store) {\n  return store.count;\n}\nexport async function load(sharedInternalDocumentStore, raw) {\n  const rawDocument = raw;\n  return {\n    docs: rawDocument.docs,\n    count: rawDocument.count,\n    sharedInternalDocumentStore\n  };\n}\nexport async function save(store) {\n  return {\n    docs: store.docs,\n    count: store.count\n  };\n}\nexport async function createDocumentsStore() {\n  return {\n    create,\n    get,\n    getMultiple,\n    getAll,\n    store,\n    remove,\n    count,\n    load,\n    save\n  };\n}","map":{"version":3,"names":["getInternalDocumentId","create","_","sharedInternalDocumentStore","docs","count","get","store","id","internalId","getMultiple","ids","found","Array","from","length","i","getAll","doc","remove","load","raw","rawDocument","save","createDocumentsStore"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@orama+orama@1.2.11/node_modules/@orama/orama/src/components/documents-store.ts"],"sourcesContent":["import { AnyDocument, AnyDocumentStore, AnyOrama, IDocumentsStore, TypedDocument } from '../types.js'\nimport {\n  DocumentID,\n  InternalDocumentID,\n  InternalDocumentIDStore,\n  getInternalDocumentId,\n} from './internal-document-id-store.js'\n\nexport interface DocumentsStore extends AnyDocumentStore {\n  sharedInternalDocumentStore: InternalDocumentIDStore\n  docs: Record<InternalDocumentID, AnyDocument>\n  count: number\n}\n\nexport async function create<T extends AnyOrama>(\n  _: T,\n  sharedInternalDocumentStore: InternalDocumentIDStore,\n): Promise<DocumentsStore> {\n  return {\n    sharedInternalDocumentStore,\n    docs: {},\n    count: 0,\n  }\n}\n\nexport async function get<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  store: DocumentsStore,\n  id: DocumentID,\n): Promise<ResultDocument | undefined> {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id)\n\n  return store.docs[internalId]\n}\n\nexport async function getMultiple<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  store: DocumentsStore,\n  ids: DocumentID[],\n): Promise<(ResultDocument | undefined)[]> {\n  const found: (ResultDocument | undefined)[] = Array.from({ length: ids.length })\n\n  for (let i = 0; i < ids.length; i++) {\n    const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, ids[i])\n    found[i] = store.docs[internalId]\n  }\n\n  return found\n}\n\nexport async function getAll<T extends AnyOrama, ResultDocument extends TypedDocument<T>>(\n  store: DocumentsStore,\n): Promise<Record<InternalDocumentID, ResultDocument>> {\n  return store.docs\n}\n\nexport async function store(\n  store: DocumentsStore,\n  id: DocumentID,\n  doc: AnyDocument,\n): Promise<boolean> {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id)\n\n  if (typeof store.docs[internalId] !== 'undefined') {\n    return false\n  }\n\n  store.docs[internalId] = doc\n  store.count++\n\n  return true\n}\n\nexport async function remove(\n  store: DocumentsStore,\n  id: DocumentID,\n): Promise<boolean> {\n  const internalId = getInternalDocumentId(store.sharedInternalDocumentStore, id)\n\n  if (typeof store.docs[internalId] === 'undefined') {\n    return false\n  }\n\n  delete store.docs[internalId]\n  store.count--\n\n  return true\n}\n\nexport async function count(\n  store: DocumentsStore,\n): Promise<number> {\n  return store.count\n}\n\nexport async function load<R = unknown>(\n  sharedInternalDocumentStore: InternalDocumentIDStore,\n  raw: R,\n): Promise<DocumentsStore> {\n  const rawDocument = raw as DocumentsStore\n\n  return {\n    docs: rawDocument.docs,\n    count: rawDocument.count,\n    sharedInternalDocumentStore,\n  }\n}\n\nexport async function save<R = unknown>(store: DocumentsStore): Promise<R> {\n  return {\n    docs: store.docs,\n    count: store.count,\n  } as R\n}\n\nexport async function createDocumentsStore(): Promise<IDocumentsStore<DocumentsStore>> {\n  return {\n    create,\n    get,\n    getMultiple,\n    getAll,\n    store,\n    remove,\n    count,\n    load,\n    save,\n  }\n}\n"],"mappings":"AACA,SAIEA,qBAAqB,QAChB;AAQP,OAAO,eAAeC,OACpBC,CAAI,EACJC,2BAAoD,EAC3B;EACzB,OAAO;IACLA,2BAAA;IACAC,IAAA,EAAM,CAAC;IACPC,KAAA,EAAO;EACT;AACF;AAEA,OAAO,eAAeC,IACpBC,KAAqB,EACrBC,EAAc,EACuB;EACrC,MAAMC,UAAA,GAAaT,qBAAA,CAAsBO,KAAA,CAAMJ,2BAA2B,EAAEK,EAAA;EAE5E,OAAOD,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW;AAC/B;AAEA,OAAO,eAAeC,YACpBH,KAAqB,EACrBI,GAAiB,EACwB;EACzC,MAAMC,KAAA,GAAwCC,KAAA,CAAMC,IAAI,CAAC;IAAEC,MAAA,EAAQJ,GAAA,CAAII;EAAO;EAE9E,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIL,GAAA,CAAII,MAAM,EAAEC,CAAA,IAAK;IACnC,MAAMP,UAAA,GAAaT,qBAAA,CAAsBO,KAAA,CAAMJ,2BAA2B,EAAEQ,GAAG,CAACK,CAAA,CAAE;IAClFJ,KAAK,CAACI,CAAA,CAAE,GAAGT,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW;EACnC;EAEA,OAAOG,KAAA;AACT;AAEA,OAAO,eAAeK,OACpBV,KAAqB,EACgC;EACrD,OAAOA,KAAA,CAAMH,IAAI;AACnB;AAEA,OAAO,eAAeG,MACpBA,KAAqB,EACrBC,EAAc,EACdU,GAAgB,EACE;EAClB,MAAMT,UAAA,GAAaT,qBAAA,CAAsBO,KAAA,CAAMJ,2BAA2B,EAAEK,EAAA;EAE5E,IAAI,OAAOD,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW,KAAK,aAAa;IACjD,OAAO,KAAK;EACd;EAEAF,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW,GAAGS,GAAA;EACzBX,KAAA,CAAMF,KAAK;EAEX,OAAO,IAAI;AACb;AAEA,OAAO,eAAec,OACpBZ,KAAqB,EACrBC,EAAc,EACI;EAClB,MAAMC,UAAA,GAAaT,qBAAA,CAAsBO,KAAA,CAAMJ,2BAA2B,EAAEK,EAAA;EAE5E,IAAI,OAAOD,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW,KAAK,aAAa;IACjD,OAAO,KAAK;EACd;EAEA,OAAOF,KAAA,CAAMH,IAAI,CAACK,UAAA,CAAW;EAC7BF,KAAA,CAAMF,KAAK;EAEX,OAAO,IAAI;AACb;AAEA,OAAO,eAAeA,MACpBE,KAAqB,EACJ;EACjB,OAAOA,KAAA,CAAMF,KAAK;AACpB;AAEA,OAAO,eAAee,KACpBjB,2BAAoD,EACpDkB,GAAM,EACmB;EACzB,MAAMC,WAAA,GAAcD,GAAA;EAEpB,OAAO;IACLjB,IAAA,EAAMkB,WAAA,CAAYlB,IAAI;IACtBC,KAAA,EAAOiB,WAAA,CAAYjB,KAAK;IACxBF;EACF;AACF;AAEA,OAAO,eAAeoB,KAAkBhB,KAAqB,EAAc;EACzE,OAAO;IACLH,IAAA,EAAMG,KAAA,CAAMH,IAAI;IAChBC,KAAA,EAAOE,KAAA,CAAMF;EACf;AACF;AAEA,OAAO,eAAemB,qBAAA,EAAiE;EACrF,OAAO;IACLvB,MAAA;IACAK,GAAA;IACAI,WAAA;IACAO,MAAA;IACAV,KAAA;IACAY,MAAA;IACAd,KAAA;IACAe,IAAA;IACAG;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}