{"ast":null,"code":"import _classCallCheck from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/@babel+runtime@7.22.3/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, BufferAttribute } from \"three\";\nvar _taskCache = /* @__PURE__ */new WeakMap();\nvar DRACOLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(DRACOLoader, _Loader);\n  var _super = _createSuper(DRACOLoader);\n  function DRACOLoader(manager) {\n    var _this;\n    _classCallCheck(this, DRACOLoader);\n    _this = _super.call(this, manager);\n    _this.decoderPath = \"\";\n    _this.decoderConfig = {};\n    _this.decoderBinary = null;\n    _this.decoderPending = null;\n    _this.workerLimit = 4;\n    _this.workerPool = [];\n    _this.workerNextTaskID = 1;\n    _this.workerSourceURL = \"\";\n    _this.defaultAttributeIDs = {\n      position: \"POSITION\",\n      normal: \"NORMAL\",\n      color: \"COLOR\",\n      uv: \"TEX_COORD\"\n    };\n    _this.defaultAttributeTypes = {\n      position: \"Float32Array\",\n      normal: \"Float32Array\",\n      color: \"Float32Array\",\n      uv: \"Float32Array\"\n    };\n    return _this;\n  }\n  _createClass(DRACOLoader, [{\n    key: \"setDecoderPath\",\n    value: function setDecoderPath(path) {\n      this.decoderPath = path;\n      return this;\n    }\n  }, {\n    key: \"setDecoderConfig\",\n    value: function setDecoderConfig(config) {\n      this.decoderConfig = config;\n      return this;\n    }\n  }, {\n    key: \"setWorkerLimit\",\n    value: function setWorkerLimit(workerLimit) {\n      this.workerLimit = workerLimit;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var _this2 = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (buffer) {\n        var taskConfig = {\n          attributeIDs: _this2.defaultAttributeIDs,\n          attributeTypes: _this2.defaultAttributeTypes,\n          useUniqueIDs: false\n        };\n        _this2.decodeGeometry(buffer, taskConfig).then(onLoad).catch(onError);\n      }, onProgress, onError);\n    }\n    /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n  }, {\n    key: \"decodeDracoFile\",\n    value: function decodeDracoFile(buffer, callback, attributeIDs, attributeTypes) {\n      var taskConfig = {\n        attributeIDs: attributeIDs || this.defaultAttributeIDs,\n        attributeTypes: attributeTypes || this.defaultAttributeTypes,\n        useUniqueIDs: !!attributeIDs\n      };\n      this.decodeGeometry(buffer, taskConfig).then(callback);\n    }\n  }, {\n    key: \"decodeGeometry\",\n    value: function decodeGeometry(buffer, taskConfig) {\n      var _this3 = this;\n      for (var attribute in taskConfig.attributeTypes) {\n        var type = taskConfig.attributeTypes[attribute];\n        if (type.BYTES_PER_ELEMENT !== void 0) {\n          taskConfig.attributeTypes[attribute] = type.name;\n        }\n      }\n      var taskKey = JSON.stringify(taskConfig);\n      if (_taskCache.has(buffer)) {\n        var cachedTask = _taskCache.get(buffer);\n        if (cachedTask.key === taskKey) {\n          return cachedTask.promise;\n        } else if (buffer.byteLength === 0) {\n          throw new Error(\"THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.\");\n        }\n      }\n      var worker;\n      var taskID = this.workerNextTaskID++;\n      var taskCost = buffer.byteLength;\n      var geometryPending = this._getWorker(taskID, taskCost).then(function (_worker) {\n        worker = _worker;\n        return new Promise(function (resolve, reject) {\n          worker._callbacks[taskID] = {\n            resolve: resolve,\n            reject: reject\n          };\n          worker.postMessage({\n            type: \"decode\",\n            id: taskID,\n            taskConfig: taskConfig,\n            buffer: buffer\n          }, [buffer]);\n        });\n      }).then(function (message) {\n        return _this3._createGeometry(message.geometry);\n      });\n      geometryPending.catch(function () {\n        return true;\n      }).then(function () {\n        if (worker && taskID) {\n          _this3._releaseTask(worker, taskID);\n        }\n      });\n      _taskCache.set(buffer, {\n        key: taskKey,\n        promise: geometryPending\n      });\n      return geometryPending;\n    }\n  }, {\n    key: \"_createGeometry\",\n    value: function _createGeometry(geometryData) {\n      var geometry = new BufferGeometry();\n      if (geometryData.index) {\n        geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n      }\n      for (var i = 0; i < geometryData.attributes.length; i++) {\n        var attribute = geometryData.attributes[i];\n        var name = attribute.name;\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n      }\n      return geometry;\n    }\n  }, {\n    key: \"_loadLibrary\",\n    value: function _loadLibrary(url, responseType) {\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.decoderPath);\n      loader.setResponseType(responseType);\n      loader.setWithCredentials(this.withCredentials);\n      return new Promise(function (resolve, reject) {\n        loader.load(url, resolve, void 0, reject);\n      });\n    }\n  }, {\n    key: \"preload\",\n    value: function preload() {\n      this._initDecoder();\n      return this;\n    }\n  }, {\n    key: \"_initDecoder\",\n    value: function _initDecoder() {\n      var _this4 = this;\n      if (this.decoderPending) return this.decoderPending;\n      var useJS = typeof WebAssembly !== \"object\" || this.decoderConfig.type === \"js\";\n      var librariesPending = [];\n      if (useJS) {\n        librariesPending.push(this._loadLibrary(\"draco_decoder.js\", \"text\"));\n      } else {\n        librariesPending.push(this._loadLibrary(\"draco_wasm_wrapper.js\", \"text\"));\n        librariesPending.push(this._loadLibrary(\"draco_decoder.wasm\", \"arraybuffer\"));\n      }\n      this.decoderPending = Promise.all(librariesPending).then(function (libraries) {\n        var jsContent = libraries[0];\n        if (!useJS) {\n          _this4.decoderConfig.wasmBinary = libraries[1];\n        }\n        var fn = DRACOWorker.toString();\n        var body = [\"/* draco decoder */\", jsContent, \"\", \"/* worker */\", fn.substring(fn.indexOf(\"{\") + 1, fn.lastIndexOf(\"}\"))].join(\"\\n\");\n        _this4.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n      return this.decoderPending;\n    }\n  }, {\n    key: \"_getWorker\",\n    value: function _getWorker(taskID, taskCost) {\n      var _this5 = this;\n      return this._initDecoder().then(function () {\n        if (_this5.workerPool.length < _this5.workerLimit) {\n          var worker2 = new Worker(_this5.workerSourceURL);\n          worker2._callbacks = {};\n          worker2._taskCosts = {};\n          worker2._taskLoad = 0;\n          worker2.postMessage({\n            type: \"init\",\n            decoderConfig: _this5.decoderConfig\n          });\n          worker2.onmessage = function (e) {\n            var message = e.data;\n            switch (message.type) {\n              case \"decode\":\n                worker2._callbacks[message.id].resolve(message);\n                break;\n              case \"error\":\n                worker2._callbacks[message.id].reject(message);\n                break;\n              default:\n                console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n            }\n          };\n          _this5.workerPool.push(worker2);\n        } else {\n          _this5.workerPool.sort(function (a, b) {\n            return a._taskLoad > b._taskLoad ? -1 : 1;\n          });\n        }\n        var worker = _this5.workerPool[_this5.workerPool.length - 1];\n        worker._taskCosts[taskID] = taskCost;\n        worker._taskLoad += taskCost;\n        return worker;\n      });\n    }\n  }, {\n    key: \"_releaseTask\",\n    value: function _releaseTask(worker, taskID) {\n      worker._taskLoad -= worker._taskCosts[taskID];\n      delete worker._callbacks[taskID];\n      delete worker._taskCosts[taskID];\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      console.log(\"Task load: \", this.workerPool.map(function (worker) {\n        return worker._taskLoad;\n      }));\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      for (var i = 0; i < this.workerPool.length; ++i) {\n        this.workerPool[i].terminate();\n      }\n      this.workerPool.length = 0;\n      return this;\n    }\n  }]);\n  return DRACOLoader;\n}(Loader);\nfunction DRACOWorker() {\n  var decoderConfig;\n  var decoderPending;\n  onmessage = function onmessage(e) {\n    var message = e.data;\n    switch (message.type) {\n      case \"init\":\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function (resolve) {\n          decoderConfig.onModuleLoaded = function (draco) {\n            resolve({\n              draco: draco\n            });\n          };\n          DracoDecoderModule(decoderConfig);\n        });\n        break;\n      case \"decode\":\n        var buffer = message.buffer;\n        var taskConfig = message.taskConfig;\n        decoderPending.then(function (module) {\n          var draco = module.draco;\n          var decoder = new draco.Decoder();\n          var decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n          try {\n            var geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            var buffers = geometry.attributes.map(function (attr) {\n              return attr.array.buffer;\n            });\n            if (geometry.index) buffers.push(geometry.index.array.buffer);\n            self.postMessage({\n              type: \"decode\",\n              id: message.id,\n              geometry: geometry\n            }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({\n              type: \"error\",\n              id: message.id,\n              error: error.message\n            });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    var attributeIDs = taskConfig.attributeIDs;\n    var attributeTypes = taskConfig.attributeTypes;\n    var dracoGeometry;\n    var decodingStatus;\n    var geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error(\"THREE.DRACOLoader: Unexpected geometry type.\");\n    }\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error(\"THREE.DRACOLoader: Decoding failed: \" + decodingStatus.error_msg());\n    }\n    var geometry = {\n      index: null,\n      attributes: []\n    };\n    for (var attributeName in attributeIDs) {\n      var attributeType = self[attributeTypes[attributeName]];\n      var attribute = void 0;\n      var attributeID = void 0;\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1) continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    }\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      geometry.index = decodeIndex(draco, decoder, dracoGeometry);\n    }\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n  function decodeIndex(draco, decoder, dracoGeometry) {\n    var numFaces = dracoGeometry.num_faces();\n    var numIndices = numFaces * 3;\n    var byteLength = numIndices * 4;\n    var ptr = draco._malloc(byteLength);\n    decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n    var index = new Uint32Array(draco.HEAPF32.buffer, ptr, numIndices).slice();\n    draco._free(ptr);\n    return {\n      array: index,\n      itemSize: 1\n    };\n  }\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    var numComponents = attribute.num_components();\n    var numPoints = dracoGeometry.num_points();\n    var numValues = numPoints * numComponents;\n    var byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n    var dataType = getDracoDataType(draco, attributeType);\n    var ptr = draco._malloc(byteLength);\n    decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, attribute, dataType, byteLength, ptr);\n    var array = new attributeType(draco.HEAPF32.buffer, ptr, numValues).slice();\n    draco._free(ptr);\n    return {\n      name: attributeName,\n      array: array,\n      itemSize: numComponents\n    };\n  }\n  function getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n      case Float32Array:\n        return draco.DT_FLOAT32;\n      case Int8Array:\n        return draco.DT_INT8;\n      case Int16Array:\n        return draco.DT_INT16;\n      case Int32Array:\n        return draco.DT_INT32;\n      case Uint8Array:\n        return draco.DT_UINT8;\n      case Uint16Array:\n        return draco.DT_UINT16;\n      case Uint32Array:\n        return draco.DT_UINT32;\n    }\n  }\n}\nexport { DRACOLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","BufferAttribute","_taskCache","WeakMap","DRACOLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","decoderPath","decoderConfig","decoderBinary","decoderPending","workerLimit","workerPool","workerNextTaskID","workerSourceURL","defaultAttributeIDs","position","normal","color","uv","defaultAttributeTypes","_createClass","key","value","setDecoderPath","path","setDecoderConfig","config","setWorkerLimit","load","url","onLoad","onProgress","onError","_this2","loader","setPath","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","decodeGeometry","then","catch","decodeDracoFile","callback","_this3","attribute","type","BYTES_PER_ELEMENT","name","taskKey","JSON","stringify","has","cachedTask","get","promise","byteLength","Error","worker","taskID","taskCost","geometryPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","id","message","_createGeometry","geometry","_releaseTask","set","geometryData","index","setIndex","array","i","attributes","length","itemSize","setAttribute","_loadLibrary","responseType","preload","_initDecoder","_this4","useJS","WebAssembly","librariesPending","push","all","libraries","jsContent","wasmBinary","fn","DRACOWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","_this5","worker2","Worker","_taskCosts","_taskLoad","onmessage","e","data","console","error","sort","a","b","debug","log","map","dispose","terminate","onModuleLoaded","draco","DracoDecoderModule","module","decoder","Decoder","decoderBuffer","DecoderBuffer","Init","Int8Array","buffers","attr","self","destroy","dracoGeometry","decodingStatus","geometryType","GetEncodedGeometryType","TRIANGULAR_MESH","Mesh","DecodeBufferToMesh","POINT_CLOUD","PointCloud","DecodeBufferToPointCloud","ok","ptr","error_msg","attributeName","attributeType","attributeID","GetAttributeByUniqueId","GetAttributeId","GetAttribute","decodeAttribute","decodeIndex","numFaces","num_faces","numIndices","_malloc","GetTrianglesUInt32Array","Uint32Array","HEAPF32","slice","_free","numComponents","num_components","numPoints","num_points","numValues","dataType","getDracoDataType","GetAttributeDataArrayForAllPoints","Float32Array","DT_FLOAT32","DT_INT8","Int16Array","DT_INT16","Int32Array","DT_INT32","Uint8Array","DT_UINT8","Uint16Array","DT_UINT16","DT_UINT32"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/loaders/DRACOLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, BufferAttribute } from \"three\";\nconst _taskCache = /* @__PURE__ */ new WeakMap();\nclass DRACOLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.decoderPath = \"\";\n    this.decoderConfig = {};\n    this.decoderBinary = null;\n    this.decoderPending = null;\n    this.workerLimit = 4;\n    this.workerPool = [];\n    this.workerNextTaskID = 1;\n    this.workerSourceURL = \"\";\n    this.defaultAttributeIDs = {\n      position: \"POSITION\",\n      normal: \"NORMAL\",\n      color: \"COLOR\",\n      uv: \"TEX_COORD\"\n    };\n    this.defaultAttributeTypes = {\n      position: \"Float32Array\",\n      normal: \"Float32Array\",\n      color: \"Float32Array\",\n      uv: \"Float32Array\"\n    };\n  }\n  setDecoderPath(path) {\n    this.decoderPath = path;\n    return this;\n  }\n  setDecoderConfig(config) {\n    this.decoderConfig = config;\n    return this;\n  }\n  setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType(\"arraybuffer\");\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(\n      url,\n      (buffer) => {\n        const taskConfig = {\n          attributeIDs: this.defaultAttributeIDs,\n          attributeTypes: this.defaultAttributeTypes,\n          useUniqueIDs: false\n        };\n        this.decodeGeometry(buffer, taskConfig).then(onLoad).catch(onError);\n      },\n      onProgress,\n      onError\n    );\n  }\n  /** @deprecated Kept for backward-compatibility with previous DRACOLoader versions. */\n  decodeDracoFile(buffer, callback, attributeIDs, attributeTypes) {\n    const taskConfig = {\n      attributeIDs: attributeIDs || this.defaultAttributeIDs,\n      attributeTypes: attributeTypes || this.defaultAttributeTypes,\n      useUniqueIDs: !!attributeIDs\n    };\n    this.decodeGeometry(buffer, taskConfig).then(callback);\n  }\n  decodeGeometry(buffer, taskConfig) {\n    for (const attribute in taskConfig.attributeTypes) {\n      const type = taskConfig.attributeTypes[attribute];\n      if (type.BYTES_PER_ELEMENT !== void 0) {\n        taskConfig.attributeTypes[attribute] = type.name;\n      }\n    }\n    const taskKey = JSON.stringify(taskConfig);\n    if (_taskCache.has(buffer)) {\n      const cachedTask = _taskCache.get(buffer);\n      if (cachedTask.key === taskKey) {\n        return cachedTask.promise;\n      } else if (buffer.byteLength === 0) {\n        throw new Error(\n          \"THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.\"\n        );\n      }\n    }\n    let worker;\n    const taskID = this.workerNextTaskID++;\n    const taskCost = buffer.byteLength;\n    const geometryPending = this._getWorker(taskID, taskCost).then((_worker) => {\n      worker = _worker;\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = { resolve, reject };\n        worker.postMessage({ type: \"decode\", id: taskID, taskConfig, buffer }, [buffer]);\n      });\n    }).then((message) => this._createGeometry(message.geometry));\n    geometryPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID);\n      }\n    });\n    _taskCache.set(buffer, {\n      key: taskKey,\n      promise: geometryPending\n    });\n    return geometryPending;\n  }\n  _createGeometry(geometryData) {\n    const geometry = new BufferGeometry();\n    if (geometryData.index) {\n      geometry.setIndex(new BufferAttribute(geometryData.index.array, 1));\n    }\n    for (let i = 0; i < geometryData.attributes.length; i++) {\n      const attribute = geometryData.attributes[i];\n      const name = attribute.name;\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      geometry.setAttribute(name, new BufferAttribute(array, itemSize));\n    }\n    return geometry;\n  }\n  _loadLibrary(url, responseType) {\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.decoderPath);\n    loader.setResponseType(responseType);\n    loader.setWithCredentials(this.withCredentials);\n    return new Promise((resolve, reject) => {\n      loader.load(url, resolve, void 0, reject);\n    });\n  }\n  preload() {\n    this._initDecoder();\n    return this;\n  }\n  _initDecoder() {\n    if (this.decoderPending)\n      return this.decoderPending;\n    const useJS = typeof WebAssembly !== \"object\" || this.decoderConfig.type === \"js\";\n    const librariesPending = [];\n    if (useJS) {\n      librariesPending.push(this._loadLibrary(\"draco_decoder.js\", \"text\"));\n    } else {\n      librariesPending.push(this._loadLibrary(\"draco_wasm_wrapper.js\", \"text\"));\n      librariesPending.push(this._loadLibrary(\"draco_decoder.wasm\", \"arraybuffer\"));\n    }\n    this.decoderPending = Promise.all(librariesPending).then((libraries) => {\n      const jsContent = libraries[0];\n      if (!useJS) {\n        this.decoderConfig.wasmBinary = libraries[1];\n      }\n      const fn = DRACOWorker.toString();\n      const body = [\n        \"/* draco decoder */\",\n        jsContent,\n        \"\",\n        \"/* worker */\",\n        fn.substring(fn.indexOf(\"{\") + 1, fn.lastIndexOf(\"}\"))\n      ].join(\"\\n\");\n      this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n    });\n    return this.decoderPending;\n  }\n  _getWorker(taskID, taskCost) {\n    return this._initDecoder().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        const worker2 = new Worker(this.workerSourceURL);\n        worker2._callbacks = {};\n        worker2._taskCosts = {};\n        worker2._taskLoad = 0;\n        worker2.postMessage({ type: \"init\", decoderConfig: this.decoderConfig });\n        worker2.onmessage = function(e) {\n          const message = e.data;\n          switch (message.type) {\n            case \"decode\":\n              worker2._callbacks[message.id].resolve(message);\n              break;\n            case \"error\":\n              worker2._callbacks[message.id].reject(message);\n              break;\n            default:\n              console.error('THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n        this.workerPool.push(worker2);\n      } else {\n        this.workerPool.sort(function(a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n      const worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskCosts[taskID] = taskCost;\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  }\n  _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  }\n  debug() {\n    console.log(\n      \"Task load: \",\n      this.workerPool.map((worker) => worker._taskLoad)\n    );\n  }\n  dispose() {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n    this.workerPool.length = 0;\n    return this;\n  }\n}\nfunction DRACOWorker() {\n  let decoderConfig;\n  let decoderPending;\n  onmessage = function(e) {\n    const message = e.data;\n    switch (message.type) {\n      case \"init\":\n        decoderConfig = message.decoderConfig;\n        decoderPending = new Promise(function(resolve) {\n          decoderConfig.onModuleLoaded = function(draco) {\n            resolve({ draco });\n          };\n          DracoDecoderModule(decoderConfig);\n        });\n        break;\n      case \"decode\":\n        const buffer = message.buffer;\n        const taskConfig = message.taskConfig;\n        decoderPending.then((module) => {\n          const draco = module.draco;\n          const decoder = new draco.Decoder();\n          const decoderBuffer = new draco.DecoderBuffer();\n          decoderBuffer.Init(new Int8Array(buffer), buffer.byteLength);\n          try {\n            const geometry = decodeGeometry(draco, decoder, decoderBuffer, taskConfig);\n            const buffers = geometry.attributes.map((attr) => attr.array.buffer);\n            if (geometry.index)\n              buffers.push(geometry.index.array.buffer);\n            self.postMessage({ type: \"decode\", id: message.id, geometry }, buffers);\n          } catch (error) {\n            console.error(error);\n            self.postMessage({ type: \"error\", id: message.id, error: error.message });\n          } finally {\n            draco.destroy(decoderBuffer);\n            draco.destroy(decoder);\n          }\n        });\n        break;\n    }\n  };\n  function decodeGeometry(draco, decoder, decoderBuffer, taskConfig) {\n    const attributeIDs = taskConfig.attributeIDs;\n    const attributeTypes = taskConfig.attributeTypes;\n    let dracoGeometry;\n    let decodingStatus;\n    const geometryType = decoder.GetEncodedGeometryType(decoderBuffer);\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      dracoGeometry = new draco.Mesh();\n      decodingStatus = decoder.DecodeBufferToMesh(decoderBuffer, dracoGeometry);\n    } else if (geometryType === draco.POINT_CLOUD) {\n      dracoGeometry = new draco.PointCloud();\n      decodingStatus = decoder.DecodeBufferToPointCloud(decoderBuffer, dracoGeometry);\n    } else {\n      throw new Error(\"THREE.DRACOLoader: Unexpected geometry type.\");\n    }\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\n      throw new Error(\"THREE.DRACOLoader: Decoding failed: \" + decodingStatus.error_msg());\n    }\n    const geometry = { index: null, attributes: [] };\n    for (const attributeName in attributeIDs) {\n      const attributeType = self[attributeTypes[attributeName]];\n      let attribute;\n      let attributeID;\n      if (taskConfig.useUniqueIDs) {\n        attributeID = attributeIDs[attributeName];\n        attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeID);\n      } else {\n        attributeID = decoder.GetAttributeId(dracoGeometry, draco[attributeIDs[attributeName]]);\n        if (attributeID === -1)\n          continue;\n        attribute = decoder.GetAttribute(dracoGeometry, attributeID);\n      }\n      geometry.attributes.push(decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute));\n    }\n    if (geometryType === draco.TRIANGULAR_MESH) {\n      geometry.index = decodeIndex(draco, decoder, dracoGeometry);\n    }\n    draco.destroy(dracoGeometry);\n    return geometry;\n  }\n  function decodeIndex(draco, decoder, dracoGeometry) {\n    const numFaces = dracoGeometry.num_faces();\n    const numIndices = numFaces * 3;\n    const byteLength = numIndices * 4;\n    const ptr = draco._malloc(byteLength);\n    decoder.GetTrianglesUInt32Array(dracoGeometry, byteLength, ptr);\n    const index = new Uint32Array(draco.HEAPF32.buffer, ptr, numIndices).slice();\n    draco._free(ptr);\n    return { array: index, itemSize: 1 };\n  }\n  function decodeAttribute(draco, decoder, dracoGeometry, attributeName, attributeType, attribute) {\n    const numComponents = attribute.num_components();\n    const numPoints = dracoGeometry.num_points();\n    const numValues = numPoints * numComponents;\n    const byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n    const dataType = getDracoDataType(draco, attributeType);\n    const ptr = draco._malloc(byteLength);\n    decoder.GetAttributeDataArrayForAllPoints(dracoGeometry, attribute, dataType, byteLength, ptr);\n    const array = new attributeType(draco.HEAPF32.buffer, ptr, numValues).slice();\n    draco._free(ptr);\n    return {\n      name: attributeName,\n      array,\n      itemSize: numComponents\n    };\n  }\n  function getDracoDataType(draco, attributeType) {\n    switch (attributeType) {\n      case Float32Array:\n        return draco.DT_FLOAT32;\n      case Int8Array:\n        return draco.DT_INT8;\n      case Int16Array:\n        return draco.DT_INT16;\n      case Int32Array:\n        return draco.DT_INT32;\n      case Uint8Array:\n        return draco.DT_UINT8;\n      case Uint16Array:\n        return draco.DT_UINT16;\n      case Uint32Array:\n        return draco.DT_UINT32;\n    }\n  }\n}\nexport {\n  DRACOLoader\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}