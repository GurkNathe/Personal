{"ast":null,"code":"import { PerspectiveCamera, Vector3, Quaternion } from \"three\";\nclass PeppersGhostEffect {\n  constructor(renderer) {\n    const scope = this;\n    scope.cameraDistance = 15;\n    scope.reflectFromAbove = false;\n    let _halfWidth, _width, _height;\n    const _cameraF = new PerspectiveCamera();\n    const _cameraB = new PerspectiveCamera();\n    const _cameraL = new PerspectiveCamera();\n    const _cameraR = new PerspectiveCamera();\n    const _position = new Vector3();\n    const _quaternion = new Quaternion();\n    const _scale = new Vector3();\n    renderer.autoClear = false;\n    this.setSize = function (width, height) {\n      _halfWidth = width / 2;\n      if (width < height) {\n        _width = width / 3;\n        _height = width / 3;\n      } else {\n        _width = height / 3;\n        _height = height / 3;\n      }\n      renderer.setSize(width, height);\n    };\n    this.render = function (scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n      camera.matrixWorld.decompose(_position, _quaternion, _scale);\n      _cameraF.position.copy(_position);\n      _cameraF.quaternion.copy(_quaternion);\n      _cameraF.translateZ(scope.cameraDistance);\n      _cameraF.lookAt(scene.position);\n      _cameraB.position.copy(_position);\n      _cameraB.quaternion.copy(_quaternion);\n      _cameraB.translateZ(-scope.cameraDistance);\n      _cameraB.lookAt(scene.position);\n      _cameraB.rotation.z += 180 * (Math.PI / 180);\n      _cameraL.position.copy(_position);\n      _cameraL.quaternion.copy(_quaternion);\n      _cameraL.translateX(-scope.cameraDistance);\n      _cameraL.lookAt(scene.position);\n      _cameraL.rotation.x += 90 * (Math.PI / 180);\n      _cameraR.position.copy(_position);\n      _cameraR.quaternion.copy(_quaternion);\n      _cameraR.translateX(scope.cameraDistance);\n      _cameraR.lookAt(scene.position);\n      _cameraR.rotation.x += 90 * (Math.PI / 180);\n      renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraB);\n      } else {\n        renderer.render(scene, _cameraF);\n      }\n      renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraF);\n      } else {\n        renderer.render(scene, _cameraB);\n      }\n      renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraR);\n      } else {\n        renderer.render(scene, _cameraL);\n      }\n      renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n      renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraL);\n      } else {\n        renderer.render(scene, _cameraR);\n      }\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport { PeppersGhostEffect };","map":{"version":3,"names":["PerspectiveCamera","Vector3","Quaternion","PeppersGhostEffect","constructor","renderer","scope","cameraDistance","reflectFromAbove","_halfWidth","_width","_height","_cameraF","_cameraB","_cameraL","_cameraR","_position","_quaternion","_scale","autoClear","setSize","width","height","render","scene","camera","matrixWorldAutoUpdate","updateMatrixWorld","parent","matrixWorld","decompose","position","copy","quaternion","translateZ","lookAt","rotation","z","Math","PI","translateX","x","clear","setScissorTest","setScissor","setViewport"],"sources":["/home/krug/Coding/JavaScript/Websites/Personal/personal/node_modules/.pnpm/three-stdlib@2.23.7_three@0.151.3/node_modules/three-stdlib/effects/PeppersGhostEffect.js"],"sourcesContent":["import { PerspectiveCamera, Vector3, Quaternion } from \"three\";\nclass PeppersGhostEffect {\n  constructor(renderer) {\n    const scope = this;\n    scope.cameraDistance = 15;\n    scope.reflectFromAbove = false;\n    let _halfWidth, _width, _height;\n    const _cameraF = new PerspectiveCamera();\n    const _cameraB = new PerspectiveCamera();\n    const _cameraL = new PerspectiveCamera();\n    const _cameraR = new PerspectiveCamera();\n    const _position = new Vector3();\n    const _quaternion = new Quaternion();\n    const _scale = new Vector3();\n    renderer.autoClear = false;\n    this.setSize = function(width, height) {\n      _halfWidth = width / 2;\n      if (width < height) {\n        _width = width / 3;\n        _height = width / 3;\n      } else {\n        _width = height / 3;\n        _height = height / 3;\n      }\n      renderer.setSize(width, height);\n    };\n    this.render = function(scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true)\n        scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true)\n        camera.updateMatrixWorld();\n      camera.matrixWorld.decompose(_position, _quaternion, _scale);\n      _cameraF.position.copy(_position);\n      _cameraF.quaternion.copy(_quaternion);\n      _cameraF.translateZ(scope.cameraDistance);\n      _cameraF.lookAt(scene.position);\n      _cameraB.position.copy(_position);\n      _cameraB.quaternion.copy(_quaternion);\n      _cameraB.translateZ(-scope.cameraDistance);\n      _cameraB.lookAt(scene.position);\n      _cameraB.rotation.z += 180 * (Math.PI / 180);\n      _cameraL.position.copy(_position);\n      _cameraL.quaternion.copy(_quaternion);\n      _cameraL.translateX(-scope.cameraDistance);\n      _cameraL.lookAt(scene.position);\n      _cameraL.rotation.x += 90 * (Math.PI / 180);\n      _cameraR.position.copy(_position);\n      _cameraR.quaternion.copy(_quaternion);\n      _cameraR.translateX(scope.cameraDistance);\n      _cameraR.lookAt(scene.position);\n      _cameraR.rotation.x += 90 * (Math.PI / 180);\n      renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraB);\n      } else {\n        renderer.render(scene, _cameraF);\n      }\n      renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraF);\n      } else {\n        renderer.render(scene, _cameraB);\n      }\n      renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraR);\n      } else {\n        renderer.render(scene, _cameraL);\n      }\n      renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n      renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n      if (scope.reflectFromAbove) {\n        renderer.render(scene, _cameraL);\n      } else {\n        renderer.render(scene, _cameraR);\n      }\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport {\n  PeppersGhostEffect\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}